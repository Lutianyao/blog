<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>路由守卫</title>
      <link href="/Lutianyao/blog/2023/02/11/02.%E5%89%8D%E7%AB%AF/04.uni-app/05.%E8%B7%AF%E7%94%B1%E5%AE%88%E5%8D%AB/"/>
      <url>/Lutianyao/blog/2023/02/11/02.%E5%89%8D%E7%AB%AF/04.uni-app/05.%E8%B7%AF%E7%94%B1%E5%AE%88%E5%8D%AB/</url>
      
        <content type="html"><![CDATA[<h1 id="路由守卫"><a href="#路由守卫" class="headerlink" title="路由守卫"></a>路由守卫</h1><blockquote><ul><li>   services&#x2F;auth.js</li></ul></blockquote><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="title function_">install</span> = (<span class="params">Vue, vm</span>) =&gt; &#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">//创建一个方法 用来判断是否登录</span></span><br><span class="line"><span class="keyword">let</span> <span class="title function_">check</span> = (<span class="params"></span>) =&gt; &#123;</span><br><span class="line"><span class="keyword">var</span> <span class="title class_">LoginUser</span> = uni.<span class="title function_">getStorageSync</span>(<span class="string">&#x27;LoginUser&#x27;</span>)</span><br><span class="line"><span class="keyword">if</span>(!<span class="title class_">LoginUser</span> || <span class="title class_">JSON</span>.<span class="title function_">stringify</span>(<span class="title class_">LoginUser</span>) == <span class="string">&#x27;&#123;&#125;&#x27;</span>)</span><br><span class="line">&#123;</span><br><span class="line">uni.<span class="title function_">showToast</span>(&#123;</span><br><span class="line"><span class="attr">title</span>: <span class="string">&#x27;请先登陆&#x27;</span>,</span><br><span class="line"><span class="attr">duration</span>: <span class="number">3000</span>,</span><br><span class="line"><span class="attr">success</span>: <span class="keyword">function</span> (<span class="params">res</span>) &#123;</span><br><span class="line">uni.<span class="title function_">switchTab</span>(&#123;</span><br><span class="line"><span class="attr">url</span>: <span class="string">&#x27;/pages/user/index&#x27;</span></span><br><span class="line">&#125;);</span><br><span class="line">&#125;</span><br><span class="line">&#125;);</span><br><span class="line"><span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//给vue设置服务的名称</span></span><br><span class="line">vm.<span class="property">$u</span>.<span class="property">auth</span> = &#123;</span><br><span class="line">  check</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">install</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="在main-js里面引入"><a href="#在main-js里面引入" class="headerlink" title="在main.js里面引入"></a>在main.js里面引入</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 校验登陆</span></span><br><span class="line"><span class="keyword">import</span> auth <span class="keyword">from</span> <span class="string">&#x27;@/services/auth&#x27;</span></span><br><span class="line"><span class="title class_">Vue</span>.<span class="title function_">use</span>(auth, app)</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
          <category> uni-app </category>
          
      </categories>
      
      
        <tags>
            
            <tag> uni-app </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>接口封装</title>
      <link href="/Lutianyao/blog/2023/02/11/02.%E5%89%8D%E7%AB%AF/04.uni-app/04.%E6%8E%A5%E5%8F%A3%E5%B0%81%E8%A3%85/"/>
      <url>/Lutianyao/blog/2023/02/11/02.%E5%89%8D%E7%AB%AF/04.uni-app/04.%E6%8E%A5%E5%8F%A3%E5%B0%81%E8%A3%85/</url>
      
        <content type="html"><![CDATA[<h3 id="创建文件-request-js"><a href="#创建文件-request-js" class="headerlink" title="创建文件 request.js"></a>创建文件 request.js</h3><blockquote><ul><li>   request.js</li></ul></blockquote><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 此vm参数为页面的实例，可以通过它引用vuex中的变量</span></span><br><span class="line"><span class="variable language_">module</span>.<span class="property">exports</span> = <span class="function">(<span class="params">vm</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="comment">// 初始化请求配置</span></span><br><span class="line">  uni.<span class="property">$u</span>.<span class="property">http</span>.<span class="title function_">setConfig</span>(<span class="function">(<span class="params">config</span>) =&gt;</span> &#123;</span><br><span class="line">      <span class="comment">/* config 为默认全局配置*/</span></span><br><span class="line">      <span class="comment">//域名前缀</span></span><br><span class="line">      </span><br><span class="line">      <span class="comment">//#ifdef H5</span></span><br><span class="line">      config.<span class="property">baseURL</span> = <span class="string">&#x27;/api&#x27;</span>;</span><br><span class="line">      <span class="comment">//#endif</span></span><br><span class="line"></span><br><span class="line">      <span class="comment">//#ifdef MP-WEIXIN || APP-PLUS</span></span><br><span class="line">      config.<span class="property">baseURL</span> = <span class="string">&#x27;http://tp6.lyqing.cn/api&#x27;</span>;</span><br><span class="line">      <span class="comment">//#endif</span></span><br><span class="line"></span><br><span class="line">      <span class="comment">//请求头</span></span><br><span class="line">      config.<span class="property">header</span> = &#123;</span><br><span class="line">        <span class="string">&#x27;X-Requested-With&#x27;</span>: <span class="string">&#x27;XMLHttpRequest&#x27;</span></span><br><span class="line">      &#125;</span><br><span class="line">  </span><br><span class="line">      <span class="keyword">return</span> config</span><br><span class="line">  &#125;)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 请求拦截</span></span><br><span class="line">uni.<span class="property">$u</span>.<span class="property">http</span>.<span class="property">interceptors</span>.<span class="property">request</span>.<span class="title function_">use</span>(<span class="function">(<span class="params">config</span>) =&gt;</span> &#123; <span class="comment">// 可使用async await 做异步操作</span></span><br><span class="line">    <span class="comment">// 初始化请求拦截器时，会执行此方法，此时data为undefined，赋予默认&#123;&#125;</span></span><br><span class="line">    config.<span class="property">data</span> = config.<span class="property">data</span> || &#123;&#125;</span><br><span class="line">  <span class="comment">// 根据custom参数中配置的是否需要token，添加对应的请求头</span></span><br><span class="line">  <span class="comment">// if(config?.custom?.auth) &#123;</span></span><br><span class="line">  <span class="comment">// // 可以在此通过vm引用vuex中的变量，具体值在vm.$store.state中</span></span><br><span class="line">  <span class="comment">// config.header.token = vm.$store.state.userInfo.token</span></span><br><span class="line">  <span class="comment">// &#125;</span></span><br><span class="line">    <span class="keyword">return</span> config </span><br><span class="line">&#125;, <span class="function"><span class="params">config</span> =&gt;</span> &#123; <span class="comment">// 可使用async await 做异步操作</span></span><br><span class="line">    <span class="keyword">return</span> <span class="title class_">Promise</span>.<span class="title function_">reject</span>(config)</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 响应拦截</span></span><br><span class="line">uni.<span class="property">$u</span>.<span class="property">http</span>.<span class="property">interceptors</span>.<span class="property">response</span>.<span class="title function_">use</span>(<span class="function">(<span class="params">response</span>) =&gt;</span> &#123; <span class="comment">/* 对响应成功做点什么 可使用async await 做异步操作*/</span></span><br><span class="line">  <span class="keyword">const</span> data = response.<span class="property">data</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">// 自定义参数</span></span><br><span class="line">  <span class="comment">// const custom = response.config?.custom</span></span><br><span class="line">  <span class="comment">// if (data.code !== 200) &#123; </span></span><br><span class="line">  <span class="comment">// // 如果没有显式定义custom的toast参数为false的话，默认对报错进行toast弹出提示</span></span><br><span class="line">  <span class="comment">// if (custom.toast !== false) &#123;</span></span><br><span class="line">  <span class="comment">// uni.$u.toast(data.message)</span></span><br><span class="line">  <span class="comment">// &#125;</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">// // 如果需要catch返回，则进行reject</span></span><br><span class="line">  <span class="comment">// if (custom?.catch) &#123;</span></span><br><span class="line">  <span class="comment">// return Promise.reject(data)</span></span><br><span class="line">  <span class="comment">// &#125; else &#123;</span></span><br><span class="line">  <span class="comment">// // 否则返回一个pending中的promise，请求不会进入catch中</span></span><br><span class="line">  <span class="comment">// return new Promise(() =&gt; &#123; &#125;)</span></span><br><span class="line">  <span class="comment">// &#125;</span></span><br><span class="line">  <span class="comment">// &#125;</span></span><br><span class="line">  <span class="keyword">return</span> data === <span class="literal">undefined</span> ? &#123;&#125; : data</span><br><span class="line">&#125;, <span class="function">(<span class="params">response</span>) =&gt;</span> &#123; </span><br><span class="line">  <span class="comment">// 对响应错误做点什么 （statusCode !== 200）</span></span><br><span class="line">  <span class="keyword">return</span> <span class="title class_">Promise</span>.<span class="title function_">reject</span>(response)</span><br><span class="line">&#125;)</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="总入口文件夹api，创建index-js文件"><a href="#总入口文件夹api，创建index-js文件" class="headerlink" title="总入口文件夹api，创建index.js文件"></a>总入口文件夹api，创建index.js文件</h3><blockquote><ul><li>   index.js</li></ul></blockquote><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//默认引入模块</span></span><br><span class="line"><span class="keyword">const</span> files = <span class="built_in">require</span>.<span class="title function_">context</span>(<span class="string">&#x27;./&#x27;</span>,<span class="literal">true</span>,<span class="regexp">/index.js$/</span>)</span><br><span class="line"><span class="keyword">const</span> modules = &#123;&#125;</span><br><span class="line"></span><br><span class="line">files.<span class="title function_">keys</span>().<span class="title function_">forEach</span>(<span class="function"><span class="params">key</span> =&gt;</span> &#123;</span><br><span class="line"><span class="keyword">if</span> (key === <span class="string">&#x27;./index.js&#x27;</span>) <span class="keyword">return</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> item = <span class="title function_">files</span>(key).<span class="property">default</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> mod = &#123;&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//替换路径</span></span><br><span class="line"><span class="keyword">var</span> name = key.<span class="title function_">replace</span>(<span class="regexp">/\.\/(.*)\/index.js/</span>, <span class="string">&quot;$1&quot;</span>)</span><br><span class="line"></span><br><span class="line">mod[name] = item</span><br><span class="line"></span><br><span class="line"><span class="title class_">Object</span>.<span class="title function_">assign</span>(modules, mod)</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">install</span> = (<span class="params">Vue, vm</span>) =&gt; &#123;</span><br><span class="line"><span class="comment">//加载模块</span></span><br><span class="line">modules</span><br><span class="line"></span><br><span class="line"><span class="comment">//循环组合接口API</span></span><br><span class="line"><span class="keyword">let</span> api = &#123;&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">let</span> <span class="title class_">ModeName</span> <span class="keyword">in</span> modules) </span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(<span class="title class_">JSON</span>.<span class="title function_">stringify</span>(modules[<span class="title class_">ModeName</span>]) == <span class="string">&quot;&#123;&#125;&quot;</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">continue</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">let</span> <span class="title class_">ApiName</span> <span class="keyword">in</span> modules[<span class="title class_">ModeName</span>]) </span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">let</span> config = modules[<span class="title class_">ModeName</span>][<span class="title class_">ApiName</span>]</span><br><span class="line">config.<span class="property">name</span> = <span class="title class_">ApiName</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(!config.<span class="property">name</span> || !config.<span class="property">url</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">continue</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(!api[<span class="title class_">ModeName</span>])</span><br><span class="line">&#123;</span><br><span class="line">api[<span class="title class_">ModeName</span>] = &#123;&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">switch</span>(config.<span class="property">method</span>.<span class="title function_">toUpperCase</span>())</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">case</span> <span class="string">&quot;GET&quot;</span>:</span><br><span class="line">api[<span class="title class_">ModeName</span>][config.<span class="property">name</span>] = <span class="function">(<span class="params">data = &#123;&#125;</span>) =&gt;</span> &#123;</span><br><span class="line"><span class="keyword">return</span> uni.<span class="property">$u</span>.<span class="property">http</span>.<span class="title function_">get</span>(config.<span class="property">url</span>,data)</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">break</span></span><br><span class="line"><span class="keyword">case</span> <span class="string">&quot;POST&quot;</span>:</span><br><span class="line">api[<span class="title class_">ModeName</span>][config.<span class="property">name</span>] = <span class="function">(<span class="params">data = &#123;&#125;</span>) =&gt;</span> &#123;</span><br><span class="line"><span class="keyword">return</span> uni.<span class="property">$u</span>.<span class="property">http</span>.<span class="title function_">post</span>(config.<span class="property">url</span>,data)</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">break</span></span><br><span class="line"><span class="keyword">case</span> <span class="string">&quot;UPLOAD&quot;</span>:</span><br><span class="line">api[<span class="title class_">ModeName</span>][config.<span class="property">name</span>] = <span class="function">(<span class="params">data = &#123;&#125;</span>) =&gt;</span> &#123;</span><br><span class="line"><span class="keyword">if</span>(data.<span class="property">filePath</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">return</span> uni.<span class="property">$u</span>.<span class="property">http</span>.<span class="title function_">upload</span>(config.<span class="property">url</span>,data)</span><br><span class="line">&#125;<span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">return</span> uni.<span class="property">$u</span>.<span class="property">http</span>.<span class="title function_">post</span>(config.<span class="property">url</span>,data)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">break</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">vm.<span class="property">$u</span>.<span class="property">api</span> = api</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">install</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="每个独立接口模块下面的index-js"><a href="#每个独立接口模块下面的index-js" class="headerlink" title="每个独立接口模块下面的index.js"></a>每个独立接口模块下面的index.js</h3><blockquote><ul><li>   src&#x2F;api&#x2F;user&#x2F;index.js</li></ul></blockquote><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> files = <span class="built_in">require</span>.<span class="title function_">context</span>(<span class="string">&#x27;.&#x27;</span>, <span class="literal">false</span>, <span class="regexp">/\.js$/</span>)</span><br><span class="line"><span class="keyword">const</span> list = &#123;&#125;</span><br><span class="line"></span><br><span class="line">files.<span class="title function_">keys</span>().<span class="title function_">forEach</span>(<span class="function"><span class="params">key</span> =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">if</span> (key === <span class="string">&#x27;./index.js&#x27;</span>) <span class="keyword">return</span></span><br><span class="line">  <span class="keyword">const</span> item = <span class="title function_">files</span>(key).<span class="property">default</span></span><br><span class="line">  <span class="title class_">Object</span>.<span class="title function_">assign</span>(list, item)</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> list</span><br></pre></td></tr></table></figure><h3 id="其他的接口文件"><a href="#其他的接口文件" class="headerlink" title="其他的接口文件"></a>其他的接口文件</h3><blockquote><ul><li>   src&#x2F;api&#x2F;user&#x2F;base.js</li></ul></blockquote><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">  <span class="attr">login</span>: &#123;</span><br><span class="line">    <span class="attr">url</span>: <span class="string">&#x27;user/auth/login&#x27;</span>,</span><br><span class="line">    <span class="attr">method</span>: <span class="string">&#x27;POST&#x27;</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">bind</span>: &#123;</span><br><span class="line">    <span class="attr">url</span>: <span class="string">&#x27;user/auth/bind&#x27;</span>,</span><br><span class="line">    <span class="attr">method</span>: <span class="string">&#x27;POST&#x27;</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">profile</span>: &#123;</span><br><span class="line">    <span class="attr">url</span>: <span class="string">&#x27;user/auth/profile&#x27;</span>,</span><br><span class="line">    <span class="attr">method</span>: <span class="string">&#x27;UPLOAD&#x27;</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="在main-js里面引入"><a href="#在main-js里面引入" class="headerlink" title="在main.js里面引入"></a>在main.js里面引入</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 引入请求封装，将app参数传递到配置中</span></span><br><span class="line"><span class="built_in">require</span>(<span class="string">&#x27;services/request.js&#x27;</span>)(app)</span><br><span class="line"></span><br><span class="line"><span class="comment">//引入接口</span></span><br><span class="line"><span class="keyword">import</span> api <span class="keyword">from</span> <span class="string">&#x27;@/api/index.js&#x27;</span></span><br><span class="line"><span class="title class_">Vue</span>.<span class="title function_">use</span>(api, app)</span><br></pre></td></tr></table></figure><h3 id="页面调用"><a href="#页面调用" class="headerlink" title="页面调用"></a>页面调用</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">   <span class="keyword">async</span> <span class="title function_">addressInex</span>(<span class="params"></span>)&#123;</span></span><br><span class="line"><span class="language-javascript"><span class="keyword">let</span> result = <span class="keyword">await</span> <span class="variable language_">this</span>.<span class="property">$u</span>.<span class="property">api</span>.<span class="property">user</span>.<span class="title function_">bind</span>(<span class="variable language_">this</span>.<span class="property">bind</span>)</span></span><br><span class="line"><span class="language-javascript"><span class="keyword">if</span>(result.<span class="property">code</span> == <span class="number">1</span>)</span></span><br><span class="line"><span class="language-javascript">&#123;</span></span><br><span class="line"><span class="language-javascript">uni.<span class="title function_">setStorageSync</span>(<span class="string">&#x27;LoginUser&#x27;</span>, result.<span class="property">data</span>);</span></span><br><span class="line"><span class="language-javascript"><span class="variable language_">this</span>.<span class="property">$refs</span>.<span class="property">uToast</span>.<span class="title function_">show</span>(&#123;</span></span><br><span class="line"><span class="language-javascript"><span class="attr">type</span>: <span class="string">&#x27;success&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript"><span class="attr">message</span>: result.<span class="property">msg</span></span></span><br><span class="line"><span class="language-javascript">&#125;)</span></span><br><span class="line"><span class="language-javascript">uni.<span class="title function_">switchTab</span>(&#123;</span></span><br><span class="line"><span class="language-javascript"><span class="attr">url</span>: <span class="string">&#x27;/pages/user/index&#x27;</span></span></span><br><span class="line"><span class="language-javascript">&#125;);</span></span><br><span class="line"><span class="language-javascript">&#125; <span class="keyword">else</span> &#123;</span></span><br><span class="line"><span class="language-javascript"><span class="variable language_">this</span>.<span class="property">$refs</span>.<span class="property">uToast</span>.<span class="title function_">show</span>(&#123;</span></span><br><span class="line"><span class="language-javascript"><span class="attr">type</span>: <span class="string">&#x27;error&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript"><span class="attr">message</span>: result.<span class="property">msg</span></span></span><br><span class="line"><span class="language-javascript">&#125;)</span></span><br><span class="line"><span class="language-javascript">&#125;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">&#125;</span></span><br><span class="line"><span class="language-javascript"> </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
          <category> uni-app </category>
          
      </categories>
      
      
        <tags>
            
            <tag> uni-app </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>uview</title>
      <link href="/Lutianyao/blog/2023/02/11/02.%E5%89%8D%E7%AB%AF/04.uni-app/03.uview/"/>
      <url>/Lutianyao/blog/2023/02/11/02.%E5%89%8D%E7%AB%AF/04.uni-app/03.uview/</url>
      
        <content type="html"><![CDATA[<h1 id="uview"><a href="#uview" class="headerlink" title="uview"></a>uview</h1><h3 id="一、准备工作"><a href="#一、准备工作" class="headerlink" title="一、准备工作"></a>一、准备工作</h3><blockquote><p>  uView官网：<a href="https://www.uviewui.com/components/npmSetting.html">https://www.uviewui.com/components/npmSetting.html</a></p></blockquote><blockquote><p>1、uView依赖SCSS，您必须要安装此插件，否则无法正常运行。</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">// 安装sass</span><br><span class="line">  </span><br><span class="line">npm i sass -D</span><br><span class="line"></span><br><span class="line">// 安装sass-loader，注意需要版本10，否则可能会导致vue与sass的兼容问题而报错</span><br><span class="line"></span><br><span class="line">npm i sass-loader@10 -D</span><br><span class="line"></span><br></pre></td></tr></table></figure><blockquote><p>2、安装uview-ui</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install uview-ui@2.0.31</span><br></pre></td></tr></table></figure><h3 id="二、配置工作"><a href="#二、配置工作" class="headerlink" title="二、配置工作"></a>二、配置工作</h3><blockquote><p>1、在项目src目录中的main.js中，引入并使用uView的JS库，注意这两行要放在import Vue之后。</p></blockquote><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// main.js</span></span><br><span class="line"><span class="keyword">import</span> uView <span class="keyword">from</span> <span class="string">&quot;uview-ui&quot;</span>;</span><br><span class="line"><span class="title class_">Vue</span>.<span class="title function_">use</span>(uView);</span><br></pre></td></tr></table></figure><blockquote><p>2、在项目src目录的uni.scss中引入此文件。</p></blockquote><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* uni.scss */</span></span><br><span class="line">@<span class="keyword">import</span> <span class="string">&#x27;uview-ui/theme.scss&#x27;</span>;</span><br></pre></td></tr></table></figure><blockquote><p>3、在App.vue中首行的位置引入，注意给style标签加入lang&#x3D;”scss”属性</p></blockquote><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;style lang=<span class="string">&quot;scss&quot;</span>&gt;</span><br><span class="line">@<span class="keyword">import</span> <span class="string">&quot;uview-ui/index.scss&quot;</span>;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure><blockquote><p>4、配置easycom组件模式，此配置需要在项目根目录的pages.json中进行。</p></blockquote><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// pages.json</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="string">&quot;easycom&quot;</span>: &#123;</span><br><span class="line"><span class="string">&quot;^u-(.*)&quot;</span>: <span class="string">&quot;uview-ui/components/u-$1/u-$1.vue&quot;</span></span><br><span class="line">&#125;,</span><br><span class="line"></span><br><span class="line"><span class="comment">// 此为本身已有的内容</span></span><br><span class="line"><span class="string">&quot;pages&quot;</span>: [</span><br><span class="line"><span class="comment">// ......</span></span><br><span class="line">]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>5、如果您是vue-cli模式的项目，还需要在项目根目录的vue.config.js文件中进行如下配置：</p></blockquote><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// vue.config.js，如没有此文件则手动创建</span></span><br><span class="line"><span class="variable language_">module</span>.<span class="property">exports</span> = &#123;</span><br><span class="line">    <span class="attr">transpileDependencies</span>: [<span class="string">&#x27;uview-ui&#x27;</span>]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="三、页面引用"><a href="#三、页面引用" class="headerlink" title="三、页面引用"></a>三、页面引用</h3><blockquote><p>通过npm和下载方式的配置之后，在某个页面可以直接使用组件，无需通过import引入组件。</p></blockquote><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">view</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">u-cell-group</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">u-cell</span> <span class="attr">icon</span>=<span class="string">&quot;setting-fill&quot;</span> <span class="attr">title</span>=<span class="string">&quot;个人设置&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">u-cell</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">u-cell</span> <span class="attr">icon</span>=<span class="string">&quot;integral-fill&quot;</span> <span class="attr">title</span>=<span class="string">&quot;会员等级&quot;</span> <span class="attr">value</span>=<span class="string">&quot;新版本&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">u-cell</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">u-cell-group</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
          <category> uni-app </category>
          
      </categories>
      
      
        <tags>
            
            <tag> uni-app </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>生命周期及语法</title>
      <link href="/Lutianyao/blog/2023/02/11/02.%E5%89%8D%E7%AB%AF/04.uni-app/02.%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F%E5%8F%8A%E8%AF%AD%E6%B3%95/"/>
      <url>/Lutianyao/blog/2023/02/11/02.%E5%89%8D%E7%AB%AF/04.uni-app/02.%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F%E5%8F%8A%E8%AF%AD%E6%B3%95/</url>
      
        <content type="html"><![CDATA[<h1 id="生命周期和语法"><a href="#生命周期和语法" class="headerlink" title="生命周期和语法"></a>生命周期和语法</h1><ol><li>应用生命周期 : 仅可在App.vue中监听，在其它页面监听无效</li><li>页面生命周期 : 监听当前页面</li><li>组件生命周期 : 组件支持的生命周期，与vue标准组件的生命周期相同。这里没有页面级的onLoad等生命周期</li></ol><h2 id="生命周期"><a href="#生命周期" class="headerlink" title="生命周期"></a>生命周期</h2><h3 id="应用生命周期"><a href="#应用生命周期" class="headerlink" title="应用生命周期"></a>应用生命周期</h3><table><thead><tr><th align="center">函数名</th><th align="center">说明</th></tr></thead><tbody><tr><td align="center">onLaunch</td><td align="center">当uni-app 初始化完成时触发（全局只触发一次）</td></tr><tr><td align="center">onShow</td><td align="center">当 uni-app 启动，或从后台进入前台显示</td></tr><tr><td align="center">onHide</td><td align="center">当 uni-app 从前台进入后台</td></tr></tbody></table><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span><br><span class="line"><span class="language-javascript"><span class="attr">onLaunch</span>: <span class="keyword">function</span>(<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;App Launch&#x27;</span>)</span></span><br><span class="line"><span class="language-javascript">&#125;,</span></span><br><span class="line"><span class="language-javascript"><span class="attr">onShow</span>: <span class="keyword">function</span>(<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;App Show&#x27;</span>)</span></span><br><span class="line"><span class="language-javascript">&#125;,</span></span><br><span class="line"><span class="language-javascript"><span class="attr">onHide</span>: <span class="keyword">function</span>(<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;App Hide&#x27;</span>)</span></span><br><span class="line"><span class="language-javascript">&#125;</span></span><br><span class="line"><span class="language-javascript">&#125;</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="页面生命周期"><a href="#页面生命周期" class="headerlink" title="页面生命周期"></a>页面生命周期</h3><table><thead><tr><th align="center">函数名</th><th align="center">说明</th></tr></thead><tbody><tr><td align="center">onLoad</td><td align="center">监听页面加载，其参数为上个页面传递的数据，参数类型为 Object（用于页面传参</td></tr><tr><td align="center">onShow</td><td align="center">监听页面显示。页面每次出现在屏幕上都触发，包括从下级页面点返回露出当前页面</td></tr><tr><td align="center">onReady</td><td align="center">监听页面初次渲染完成。注意如果渲染速度快，会在页面进入动画完成前触发</td></tr><tr><td align="center">onUnload</td><td align="center">监听页面卸载</td></tr><tr><td align="center">onHide</td><td align="center">监听页面隐藏</td></tr><tr><td align="center">onPullDownRefresh</td><td align="center">监听用户下拉动作，一般用于下拉刷新</td></tr><tr><td align="center">onPageScroll</td><td align="center">监听页面滚动，参数为Object,nvue暂不支持</td></tr></tbody></table><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">export</span> <span class="keyword">default</span>&#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="title function_">onLoad</span>(<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;App Launch&#x27;</span>)</span></span><br><span class="line"><span class="language-javascript">            <span class="comment">// 开始下拉刷新，调用后触发下拉刷新动画，效果与用户手动下拉刷新一致。</span></span></span><br><span class="line"><span class="language-javascript">            uni.<span class="title function_">startPullDownRefresh</span>();</span></span><br><span class="line"><span class="language-javascript">        &#125;,</span></span><br><span class="line"><span class="language-javascript">        <span class="title function_">onShow</span>(<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;App Show&#x27;</span>)</span></span><br><span class="line"><span class="language-javascript">        &#125;,</span></span><br><span class="line"><span class="language-javascript">        <span class="title function_">onHide</span>(<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;App Hide&#x27;</span>)</span></span><br><span class="line"><span class="language-javascript">        &#125;,</span></span><br><span class="line"><span class="language-javascript">        <span class="title function_">onReady</span>(<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;App onReady&#x27;</span>)</span></span><br><span class="line"><span class="language-javascript">        &#125;,</span></span><br><span class="line"><span class="language-javascript">        <span class="title function_">onUnload</span>(<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;App onUnload&#x27;</span>) </span></span><br><span class="line"><span class="language-javascript">        &#125;,</span></span><br><span class="line"><span class="language-javascript">        <span class="title function_">onPullDownRefresh</span>(<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="variable language_">this</span>.$nextTick(<span class="function">()=&gt;</span>&#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="comment">// 停止当前页面下拉刷新</span></span></span><br><span class="line"><span class="language-javascript">                uni.<span class="title function_">stopPullDownRefresh</span>();</span></span><br><span class="line"><span class="language-javascript">            &#125;)</span></span><br><span class="line"><span class="language-javascript">        &#125;,</span></span><br><span class="line"><span class="language-javascript">        onPageScroll : <span class="keyword">function</span>(<span class="params">e</span>) &#123; </span></span><br><span class="line"><span class="language-javascript">            <span class="comment">//nvue暂不支持滚动监听，可用bindingx代替</span></span></span><br><span class="line"><span class="language-javascript">            <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;滚动距离为：&quot;</span> + e.<span class="property">scrollTop</span>);</span></span><br><span class="line"><span class="language-javascript">        &#125;</span></span><br><span class="line"><span class="language-javascript">        </span></span><br><span class="line"><span class="language-javascript">    &#125;</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="组件生命周期"><a href="#组件生命周期" class="headerlink" title="组件生命周期"></a>组件生命周期</h3><table><thead><tr><th align="center">函数名</th><th align="center">说明</th></tr></thead><tbody><tr><td align="center">beforeCreate</td><td align="center">在实例初始化之后被调用</td></tr><tr><td align="center">created</td><td align="center">在实例创建完成后被立即调用</td></tr><tr><td align="center">beforeMount</td><td align="center">在挂载开始之前被调用</td></tr><tr><td align="center">mounted</td><td align="center">挂载到实例上去之后调用。详见 注意：此处并不能确定子组件被全部挂载，如果需要子组件完全挂载之后在执行操作可以使用$nextTickVue</td></tr><tr><td align="center">beforeDestroy</td><td align="center">实例销毁之前调用。在这一步，实例仍然完全可用</td></tr><tr><td align="center">beforeDestroy</td><td align="center">Vue 实例销毁后调用。调用后，Vue 实例指示的所有东西都会解绑定，所有的事件监听器会被移除，所有的子实例也会被销毁。</td></tr></tbody></table><h2 id="语法"><a href="#语法" class="headerlink" title="语法"></a>语法</h2><h3 id="页面文件遵循-Vue-单文件组件-SFC-规范"><a href="#页面文件遵循-Vue-单文件组件-SFC-规范" class="headerlink" title="页面文件遵循 Vue 单文件组件 (SFC) 规范"></a>页面文件遵循 Vue 单文件组件 (SFC) 规范</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"> Vue 单文件组件 (SFC) 规范，每个vue文件的根节点必须为 </span><br><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span>，且这个 <span class="tag">&lt;<span class="name">template</span>&gt;</span> 下只能且必须有一个根 <span class="tag">&lt;<span class="name">view</span>&gt;</span> 组件</span><br><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">view</span> <span class="attr">class</span>=<span class="string">&quot;example&quot;</span>&gt;</span>&#123;&#123; msg &#125;&#125;<span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span><br><span class="line"><span class="language-javascript">  data () &#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">return</span> &#123;</span></span><br><span class="line"><span class="language-javascript">      <span class="attr">msg</span>: <span class="string">&#x27;Hello world!&#x27;</span></span></span><br><span class="line"><span class="language-javascript">    &#125;</span></span><br><span class="line"><span class="language-javascript">  &#125;</span></span><br><span class="line"><span class="language-javascript">&#125;</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css"><span class="selector-class">.example</span> &#123;</span></span><br><span class="line"><span class="language-css">  <span class="attribute">color</span>: red;</span></span><br><span class="line"><span class="language-css">&#125;</span></span><br><span class="line"><span class="language-css"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="组件标签接近小程序规范，详见uni-app-组件规范，注意：所有组件与属性名都是小写，单词之间以连字符-连接"><a href="#组件标签接近小程序规范，详见uni-app-组件规范，注意：所有组件与属性名都是小写，单词之间以连字符-连接" class="headerlink" title="组件标签接近小程序规范，详见uni-app 组件规范，注意：所有组件与属性名都是小写，单词之间以连字符-连接"></a>组件标签接近小程序规范，详见uni-app 组件规范，注意：所有组件与属性名都是小写，单词之间以连字符-连接</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">component-name</span> <span class="attr">property1</span>=<span class="string">&quot;value&quot;</span> <span class="attr">property2</span>=<span class="string">&quot;value&quot;</span>&gt;</span></span><br><span class="line">    content</span><br><span class="line"><span class="tag">&lt;/<span class="name">component-name</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="接口能力（JS-API）靠近微信小程序规范，但需将前缀-wx-替换为-uni"><a href="#接口能力（JS-API）靠近微信小程序规范，但需将前缀-wx-替换为-uni" class="headerlink" title="接口能力（JS API）靠近微信小程序规范，但需将前缀 wx 替换为 uni"></a>接口能力（JS API）靠近微信小程序规范，但需将前缀 wx 替换为 uni</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- 默认方式 --&gt;</span><br><span class="line">uni.<span class="title function_">request</span>(&#123;</span><br><span class="line">    <span class="attr">url</span>: <span class="string">&#x27;https://www.example.com/request&#x27;</span>,</span><br><span class="line">    <span class="attr">success</span>: <span class="function">(<span class="params">res</span>) =&gt;</span> &#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(res.<span class="property">data</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">&lt;!-- <span class="title class_">Promise</span> --&gt;</span><br><span class="line">uni.<span class="title function_">request</span>(&#123;</span><br><span class="line">        <span class="attr">url</span>: <span class="string">&#x27;https://www.example.com/request&#x27;</span></span><br><span class="line">    &#125;)</span><br><span class="line">    .<span class="title function_">then</span>(<span class="function"><span class="params">data</span> =&gt;</span> &#123;<span class="comment">//data为一个数组，数组第一项为错误信息，第二项为返回数据</span></span><br><span class="line">        <span class="keyword">var</span> [error, res]  = data;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(res.<span class="property">data</span>);</span><br><span class="line">    &#125;)</span><br><span class="line"></span><br><span class="line">&lt;!-- <span class="title class_">Await</span> --&gt;</span><br><span class="line"><span class="keyword">async</span> <span class="keyword">function</span> <span class="title function_">request</span> () &#123;</span><br><span class="line">    <span class="keyword">var</span> [error, res] = <span class="keyword">await</span> uni.<span class="title function_">request</span>(&#123;</span><br><span class="line">        <span class="attr">url</span>: <span class="string">&#x27;https://www.example.com/request&#x27;</span></span><br><span class="line">    &#125;);</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(res.<span class="property">data</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="数据绑定及事件处理同-Vue-js-规范，同时补充了App及页面的生命周期"><a href="#数据绑定及事件处理同-Vue-js-规范，同时补充了App及页面的生命周期" class="headerlink" title="数据绑定及事件处理同 Vue.js 规范，同时补充了App及页面的生命周期"></a>数据绑定及事件处理同 Vue.js 规范，同时补充了App及页面的生命周期</h3><h3 id="条件编译，跨端兼容"><a href="#条件编译，跨端兼容" class="headerlink" title="条件编译，跨端兼容"></a>条件编译，跨端兼容</h3><h4 id="条件编译"><a href="#条件编译" class="headerlink" title="条件编译"></a>条件编译</h4><p><img src="/Lutianyao/blog/img/18.png" alt="Image text"></p><h4 id="APP-PLUS条件编译"><a href="#APP-PLUS条件编译" class="headerlink" title="APP-PLUS条件编译"></a>APP-PLUS条件编译</h4><p><img src="/Lutianyao/blog/img/16.png" alt="Image text"></p><h4 id="MP-WEIXIN条件编译"><a href="#MP-WEIXIN条件编译" class="headerlink" title="MP-WEIXIN条件编译"></a>MP-WEIXIN条件编译</h4><p><img src="/Lutianyao/blog/img/17.png" alt="Image text"></p>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
          <category> uni-app </category>
          
      </categories>
      
      
        <tags>
            
            <tag> uni-app </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>快速入门</title>
      <link href="/Lutianyao/blog/2023/02/11/02.%E5%89%8D%E7%AB%AF/04.uni-app/01.%E5%BF%AB%E9%80%9F%E5%85%A5%E9%97%A8/"/>
      <url>/Lutianyao/blog/2023/02/11/02.%E5%89%8D%E7%AB%AF/04.uni-app/01.%E5%BF%AB%E9%80%9F%E5%85%A5%E9%97%A8/</url>
      
        <content type="html"><![CDATA[<h1 id="快速入门"><a href="#快速入门" class="headerlink" title="快速入门"></a>快速入门</h1><h3 id="什么是uni-app"><a href="#什么是uni-app" class="headerlink" title="什么是uni-app"></a>什么是uni-app</h3><p><strong>uni-app</strong> 是一个使用 Vue.js 开发所有前端应用的框架，开发者编写一套代码，可发布到iOS、Android、Web（响应式）、以及各种小程序（微信&#x2F;支付宝&#x2F;百度&#x2F;头条&#x2F;QQ&#x2F;快手&#x2F;钉钉&#x2F;淘宝）、快应用等多个平台。</p><h3 id="开发环境"><a href="#开发环境" class="headerlink" title="开发环境"></a>开发环境</h3><p>HBuilderX：<a href="https://www.dcloud.io/hbuilderx.html">官方IDE下载地址</a><br>HBuilderX是通用的前端开发工具，但为uni-app做了特别强化。</p><h3 id="创建uni-app"><a href="#创建uni-app" class="headerlink" title="创建uni-app"></a>创建uni-app</h3><h6 id="通过vue-cli命令创建"><a href="#通过vue-cli命令创建" class="headerlink" title="通过vue-cli命令创建"></a>通过vue-cli命令创建</h6><p>1、环境安装</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install -g @vue/cli</span><br></pre></td></tr></table></figure><p>2、创建uni-app</p><p>使用正式版（对应HBuilderX最新正式版）</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vue create -p dcloudio/uni-preset-vue my-project</span><br></pre></td></tr></table></figure><p>3、选择模板，选择默认模板</p><p><img src="/Lutianyao/blog/img/8.png" alt="img"></p><h3 id="运行uni-app"><a href="#运行uni-app" class="headerlink" title="运行uni-app"></a>运行uni-app</h3><p>1、浏览器运行：进入hello-uniapp项目，点击工具栏的运行 -&gt; 运行到浏览器 -&gt; 选择浏览器，即可在浏览器里面体验uni-app 的 H5 版。</p><p><img src="/Lutianyao/blog/img/3.png" alt="img"></p><p>2、真机运行：连接手机，开启USB调试，进入hello-uniapp项目，点击工具栏的运行 -&gt; 真机运行 -&gt; 选择运行的设备，即可在该设备里面体验uni-app。</p><p><img src="/Lutianyao/blog/img/4.png" alt="img"></p><p>3、在微信开发者工具里运行：进入hello-uniapp项目，点击工具栏的运行 -&gt; 运行到小程序模拟器 -&gt; 微信开发者工具，即可在微信开发者工具里面体验uni-app。</p><p><img src="/Lutianyao/blog/img/5.png" alt="img"></p><h5 id="注意第一次使用，需要先配置小程序ide的相关路径，才能运行成功如下图所示"><a href="#注意第一次使用，需要先配置小程序ide的相关路径，才能运行成功如下图所示" class="headerlink" title="注意第一次使用，需要先配置小程序ide的相关路径，才能运行成功如下图所示"></a>注意第一次使用，需要先配置小程序ide的相关路径，才能运行成功如下图所示</h5><p><img src="/Lutianyao/blog/img/6.png" alt="img"></p><h5 id="微信开发者工具设置需要开启服务端口，如下图"><a href="#微信开发者工具设置需要开启服务端口，如下图" class="headerlink" title="微信开发者工具设置需要开启服务端口，如下图"></a>微信开发者工具设置需要开启服务端口，如下图</h5><p><img src="/Lutianyao/blog/img/7.png" alt="img"></p><h3 id="目录结构"><a href="#目录结构" class="headerlink" title="目录结构"></a>目录结构</h3><p><img src="/Lutianyao/blog/img/9.png" alt="img"></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">node_modules node依赖工具包目录</span><br><span class="line">src    源码目录</span><br><span class="line"></span><br><span class="line">┌─uniCloud              云空间目录，阿里云为uniCloud-aliyun,腾讯云为uniCloud-tcb（详见uniCloud）</span><br><span class="line">│─components            符合vue组件规范的uni-app组件目录</span><br><span class="line">│  └─comp-a.vue         可复用的a组件</span><br><span class="line">├─hybrid                App端存放本地html文件的目录，详见</span><br><span class="line">├─platforms             存放各平台专用页面的目录，详见</span><br><span class="line">├─pages                 业务页面文件存放的目录</span><br><span class="line">│  ├─index</span><br><span class="line">│  │  └─index.vue       index页面</span><br><span class="line">│  └─list</span><br><span class="line">│     └─list.vue        list页面</span><br><span class="line">├─static                存放应用引用的本地静态资源（如图片、视频等）的目录，注意：静态资源只能存放于此</span><br><span class="line">├─uni_modules           存放[uni_module](/uni_modules)规范的插件。</span><br><span class="line">├─wxcomponents          存放小程序组件的目录，详见</span><br><span class="line">├─main.js               Vue初始化入口文件</span><br><span class="line">├─App.vue               应用配置，用来配置App全局样式以及监听 应用生命周期</span><br><span class="line">├─manifest.json         配置应用名称、appid、logo、版本等打包信息，详见</span><br><span class="line">└─pages.json            配置页面路由、导航条、选项卡等页面类信息，详见</span><br></pre></td></tr></table></figure><h3 id="项目发行小程序和打包生成APP"><a href="#项目发行小程序和打包生成APP" class="headerlink" title="项目发行小程序和打包生成APP"></a>项目发行小程序和打包生成APP</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">找到pages文件夹编辑index页面</span><br><span class="line">第一个运行到在微信开发者工具里运行，查看是否正常</span><br><span class="line">   </span><br><span class="line">第二个原生APP云打包生成后缀为.apk手机安装文件</span><br><span class="line"></span><br></pre></td></tr></table></figure><h5 id="小程序打包页面"><a href="#小程序打包页面" class="headerlink" title="小程序打包页面"></a>小程序打包页面</h5><p><img src="/Lutianyao/blog/img/15.png" alt="img"></p><h5 id="小程序打包之后生成的二维码"><a href="#小程序打包之后生成的二维码" class="headerlink" title="小程序打包之后生成的二维码"></a>小程序打包之后生成的二维码</h5><p><img src="/Lutianyao/blog/img/11.png" alt="img"></p><h5 id="小程序运行的页面"><a href="#小程序运行的页面" class="headerlink" title="小程序运行的页面"></a>小程序运行的页面</h5><p> <img src="/Lutianyao/blog/img/10.png" alt="img"></p><h5 id="APP打包页面"><a href="#APP打包页面" class="headerlink" title="APP打包页面"></a>APP打包页面</h5><p><img src="/Lutianyao/blog/img/13.png" alt="img"></p><h5 id="APP打包成功之后生成下载-apk安装文件链接"><a href="#APP打包成功之后生成下载-apk安装文件链接" class="headerlink" title="APP打包成功之后生成下载.apk安装文件链接"></a>APP打包成功之后生成下载.apk安装文件链接</h5><p><img src="/Lutianyao/blog/img/14.png" alt="img"></p><h5 id="手机端APP运行的页面"><a href="#手机端APP运行的页面" class="headerlink" title="手机端APP运行的页面"></a>手机端APP运行的页面</h5><p><img src="/Lutianyao/blog/img/12.jpg" alt="img"></p>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
          <category> uni-app </category>
          
      </categories>
      
      
        <tags>
            
            <tag> uni-app </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>授权登录</title>
      <link href="/Lutianyao/blog/2023/02/11/02.%E5%89%8D%E7%AB%AF/03.%E5%B0%8F%E7%A8%8B%E5%BA%8F%E5%BC%80%E5%8F%91/08.%E6%8E%88%E6%9D%83%E7%99%BB%E5%BD%95/"/>
      <url>/Lutianyao/blog/2023/02/11/02.%E5%89%8D%E7%AB%AF/03.%E5%B0%8F%E7%A8%8B%E5%BA%8F%E5%BC%80%E5%8F%91/08.%E6%8E%88%E6%9D%83%E7%99%BB%E5%BD%95/</url>
      
        <content type="html"><![CDATA[<h1 id="授权登录"><a href="#授权登录" class="headerlink" title="授权登录"></a>授权登录</h1><p>小程序可以通过微信官方提供的登录能力方便地获取微信提供的用户身份标识，快速建立小程序内的用户体系</p><h2 id="登录流程时序"><a href="#登录流程时序" class="headerlink" title="登录流程时序"></a>登录流程时序</h2><p>​<img src="/Lutianyao/blog/img/WeChat08.png" alt="img"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">1、通过wx.login接口获取code</span><br><span class="line">2、再通过wx.request()接口把code发送到后端获取登录凭证</span><br><span class="line">3、后端通过appid，appsecret和code发送请求到auth.code2Session接口</span><br><span class="line">4、后端获取接口返回来的信息后再把它返回前端</span><br><span class="line">5、前端获取返回的信息判断是否登录</span><br></pre></td></tr></table></figure><h3 id="1、通过wx-login接口获取code"><a href="#1、通过wx-login接口获取code" class="headerlink" title="1、通过wx.login接口获取code"></a>1、通过wx.login接口获取code</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">view</span> <span class="attr">class</span>=<span class="string">&quot;container&quot;</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">button</span> <span class="attr">bindtap</span>=<span class="string">&quot;onlogin&quot;</span>&gt;</span>授权登录<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_">onlogin</span>(<span class="params"></span>)&#123;</span><br><span class="line">    wx.<span class="title function_">login</span>(&#123;</span><br><span class="line">      <span class="attr">success</span>:<span class="keyword">function</span>(<span class="params">res</span>)&#123;</span><br><span class="line">        <span class="keyword">const</span> code = res.<span class="property">code</span>;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;)</span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure><h3 id="2、再通过wx-request-接口把code发送到后端获取登录凭证"><a href="#2、再通过wx-request-接口把code发送到后端获取登录凭证" class="headerlink" title="2、再通过wx.request()接口把code发送到后端获取登录凭证"></a>2、再通过wx.request()接口把code发送到后端获取登录凭证</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_">onlogin</span>(<span class="params"></span>)&#123;</span><br><span class="line">    wx.<span class="title function_">login</span>(&#123;</span><br><span class="line">      <span class="attr">success</span>:<span class="keyword">function</span>(<span class="params">res</span>)&#123;</span><br><span class="line">        <span class="keyword">const</span> code = res.<span class="property">code</span>;</span><br><span class="line">        wx.<span class="title function_">request</span>(&#123;</span><br><span class="line">          <span class="attr">url</span>: <span class="string">&#x27;http://www.kk.com/admin/admin.php&#x27;</span>,</span><br><span class="line">          <span class="attr">data</span>:&#123;</span><br><span class="line">            <span class="attr">code</span>:code</span><br><span class="line">          &#125;,</span><br><span class="line">          <span class="attr">header</span>:&#123;<span class="comment">// 设置头部信息</span></span><br><span class="line">            <span class="string">&#x27;content-type&#x27;</span>: <span class="string">&#x27;application/x-www-form-urlencoded&#x27;</span></span><br><span class="line">          &#125;,</span><br><span class="line">          <span class="attr">method</span>: <span class="string">&#x27;POST&#x27;</span>,<span class="comment">// 提交方法</span></span><br><span class="line">          <span class="attr">success</span>:<span class="keyword">function</span>(<span class="params">res</span>)&#123;</span><br><span class="line">            <span class="variable language_">console</span>.<span class="title function_">log</span>(res)</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;)</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;)</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><h3 id="3、后端通过appid，appsecret和code发送请求到auth-code2Session接口"><a href="#3、后端通过appid，appsecret和code发送请求到auth-code2Session接口" class="headerlink" title="3、后端通过appid，appsecret和code发送请求到auth.code2Session接口"></a>3、后端通过appid，appsecret和code发送请求到auth.code2Session接口</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 接口地址：https://api.weixin.qq.com/sns/jscode2session?appid=APPID&amp;secret=SECRET&amp;js_code=JSCODE&amp;grant_type=authorization_code</span></span><br><span class="line"></span><br><span class="line"><span class="variable">$code</span> = <span class="variable">$_POST</span>[<span class="string">&#x27;code&#x27;</span>];</span><br><span class="line">    <span class="variable">$url</span> = <span class="string">&quot;https://api.weixin.qq.com/sns/jscode2session?appid=填写自己appid&amp;secret=填写自己的密钥&amp;js_code=<span class="subst">$code</span>&amp;grant_type=authorization_code&quot;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="variable">$json</span> = <span class="title function_ invoke__">https_request</span>(<span class="variable">$url</span>);</span><br><span class="line"></span><br><span class="line">    <span class="variable">$data</span> = <span class="title function_ invoke__">json_decode</span>(<span class="variable">$json</span>,<span class="literal">true</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 返回数据</span></span><br><span class="line">    <span class="keyword">if</span>(<span class="variable">$data</span>[<span class="string">&#x27;errcode&#x27;</span>] == <span class="number">0</span>)&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="title function_ invoke__">json_encode</span>(<span class="variable">$data</span>);</span><br><span class="line">        <span class="keyword">exit</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">https_request</span>(<span class="params"><span class="variable">$url</span>,<span class="variable">$data</span> = <span class="literal">null</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="title function_ invoke__">function_exists</span>(<span class="string">&#x27;curl_init&#x27;</span>))&#123;</span><br><span class="line">        <span class="variable">$curl</span> = <span class="title function_ invoke__">curl_init</span>();</span><br><span class="line">            <span class="title function_ invoke__">curl_setopt</span>(<span class="variable">$curl</span>, CURLOPT_URL, <span class="variable">$url</span>);</span><br><span class="line">            <span class="title function_ invoke__">curl_setopt</span>(<span class="variable">$curl</span>, CURLOPT_SSL_VERIFYPEER, <span class="literal">FALSE</span>);</span><br><span class="line">            <span class="title function_ invoke__">curl_setopt</span>(<span class="variable">$curl</span>, CURLOPT_SSL_VERIFYHOST, <span class="literal">FALSE</span>);</span><br><span class="line">            <span class="title function_ invoke__">curl_setopt</span>(<span class="variable">$curl</span>, CURLOPT_SSLVERSION, CURL_SSLVERSION_TLSv1);</span><br><span class="line">            <span class="keyword">if</span> (!<span class="keyword">empty</span>(<span class="variable">$data</span>))&#123;</span><br><span class="line">                <span class="title function_ invoke__">curl_setopt</span>(<span class="variable">$curl</span>, CURLOPT_POST, <span class="number">1</span>);</span><br><span class="line">                <span class="title function_ invoke__">curl_setopt</span>(<span class="variable">$curl</span>, CURLOPT_POSTFIELDS, <span class="variable">$data</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="title function_ invoke__">curl_setopt</span>(<span class="variable">$curl</span>, CURLOPT_RETURNTRANSFER, <span class="number">1</span>);</span><br><span class="line">            <span class="variable">$output</span> = <span class="title function_ invoke__">curl_exec</span>(<span class="variable">$curl</span>);</span><br><span class="line">            <span class="title function_ invoke__">curl_close</span>(<span class="variable">$curl</span>);</span><br><span class="line">            <span class="keyword">return</span> <span class="variable">$output</span>;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><h3 id="4、后端获取接口返回来的信息"><a href="#4、后端获取接口返回来的信息" class="headerlink" title="4、后端获取接口返回来的信息"></a>4、后端获取接口返回来的信息</h3><p>调用auth.code2Session接口成功后会返回一个用户唯一标识<code>openid</code></p><p><code>openid</code>的作用：在微信小程序的开发过程中，往往需要将用户信息录入自己的数据库中，就得有一个唯一标记区分用户，这个标记就是openid。当一个用户使用了某个微信小程序，微信后台会产生一个openid，并且是唯一的，所以可以通过这个来区分用户。</p><pre><code>后端判断该openid是否存在于数据库1、存在则返回登陆成功2、不存在则说明用户未绑定，需要绑定</code></pre><h3 id="5、前端获取后端返回的信息判断是否登录"><a href="#5、前端获取后端返回的信息判断是否登录" class="headerlink" title="5、前端获取后端返回的信息判断是否登录"></a>5、前端获取后端返回的信息判断是否登录</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_">onlogin</span>(<span class="params"></span>)&#123;</span><br><span class="line">    wx.<span class="title function_">login</span>(&#123;</span><br><span class="line">      <span class="attr">success</span>:<span class="keyword">function</span>(<span class="params">res</span>)&#123;</span><br><span class="line">        <span class="keyword">const</span> code = res.<span class="property">code</span>;</span><br><span class="line">        wx.<span class="title function_">request</span>(&#123;</span><br><span class="line">          <span class="attr">url</span>: <span class="string">&#x27;http://www.kk.com/admin/admin.php&#x27;</span>,</span><br><span class="line">          <span class="attr">data</span>:&#123;</span><br><span class="line">            <span class="attr">code</span>:code</span><br><span class="line">          &#125;,</span><br><span class="line">          <span class="attr">header</span>:&#123;<span class="comment">// 设置头部信息</span></span><br><span class="line">            <span class="string">&#x27;content-type&#x27;</span>: <span class="string">&#x27;application/x-www-form-urlencoded&#x27;</span></span><br><span class="line">          &#125;,</span><br><span class="line">          <span class="attr">method</span>: <span class="string">&#x27;POST&#x27;</span>,<span class="comment">// 提交方法</span></span><br><span class="line">          <span class="attr">success</span>:<span class="keyword">function</span>(<span class="params">res</span>)&#123;</span><br><span class="line">            <span class="variable language_">console</span>.<span class="title function_">log</span>(res)</span><br><span class="line">            <span class="keyword">if</span>(res.<span class="property">data</span>=<span class="string">&#x27;&#x27;</span>)&#123;</span><br><span class="line">              wx.<span class="title function_">showToast</span>(&#123;</span><br><span class="line">                <span class="attr">title</span>: <span class="string">&#x27;登录成功&#x27;</span>,</span><br><span class="line">              &#125;)</span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">              wx.<span class="title function_">showToast</span>(&#123;</span><br><span class="line">                <span class="attr">title</span>: <span class="string">&#x27;登录失败&#x27;</span>,</span><br><span class="line">              &#125;)</span><br><span class="line">            &#125;</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;)</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;)</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
          <category> 小程序开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 小程序 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>小程序API</title>
      <link href="/Lutianyao/blog/2023/02/11/02.%E5%89%8D%E7%AB%AF/03.%E5%B0%8F%E7%A8%8B%E5%BA%8F%E5%BC%80%E5%8F%91/07.%E5%B0%8F%E7%A8%8B%E5%BA%8FAPI/"/>
      <url>/Lutianyao/blog/2023/02/11/02.%E5%89%8D%E7%AB%AF/03.%E5%B0%8F%E7%A8%8B%E5%BA%8F%E5%BC%80%E5%8F%91/07.%E5%B0%8F%E7%A8%8B%E5%BA%8FAPI/</url>
      
        <content type="html"><![CDATA[<h1 id="小程序API"><a href="#小程序API" class="headerlink" title="小程序API"></a>小程序API</h1><p>微信小程序开发框架提供了丰富的原生API。可以方便地调用微信提供的功能，如获取用户信息、本地存储、支付等。</p><h2 id="路由"><a href="#路由" class="headerlink" title="路由"></a>路由</h2><h3 id="wx-navigateTo"><a href="#wx-navigateTo" class="headerlink" title="wx.navigateTo"></a>wx.navigateTo</h3><p>保留当前页面，跳转到应用内的某个页面。但是不能跳到 tabbar 页面。使用 <a href="https://developers.weixin.qq.com/miniprogram/dev/api/route/wx.navigateBack.html">wx.navigateBack</a> 可以返回到原页面。小程序中页面栈最多十层。</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- test.wxmml --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">view</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span> <span class="attr">bindtap</span>=<span class="string">&quot;navTo&quot;</span>&gt;</span>点击跳转<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// test.js</span></span><br><span class="line"><span class="title class_">Page</span>(&#123;</span><br><span class="line">  <span class="comment">// 跳转事件</span></span><br><span class="line">  <span class="title function_">navTo</span>(<span class="params"></span>)&#123;</span><br><span class="line">    <span class="comment">// 跳转到index页面</span></span><br><span class="line">    wx.<span class="title function_">navigateTo</span>(&#123;</span><br><span class="line">      <span class="attr">url</span>: <span class="string">&#x27;/pages/index/index&#x27;</span>,</span><br><span class="line">    &#125;)</span><br><span class="line">    <span class="comment">// </span></span><br><span class="line">    <span class="attr">success</span>: <span class="keyword">function</span>(<span class="params">res</span>) &#123;</span><br><span class="line">       <span class="comment">// 通过eventChannel向被打开页面传送数据</span></span><br><span class="line">       res.<span class="property">eventChannel</span>.<span class="title function_">emit</span>(<span class="string">&#x27;test&#x27;</span>, &#123; <span class="attr">data</span>: <span class="string">&#x27;test&#x27;</span> &#125;)</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// index.js</span></span><br><span class="line"><span class="title function_">onLoad</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">const</span> eventChannel = <span class="variable language_">this</span>.<span class="title function_">getOpenerEventChannel</span>()</span><br><span class="line">    eventChannel.<span class="title function_">on</span>(<span class="string">&#x27;test&#x27;</span>, <span class="keyword">function</span>(<span class="params">data</span>) &#123;</span><br><span class="line">      <span class="variable language_">console</span>.<span class="title function_">log</span>(data)</span><br><span class="line">    &#125;)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="wx-navigateBack"><a href="#wx-navigateBack" class="headerlink" title="wx.navigateBack"></a>wx.navigateBack</h5><p>关闭当前页面，返回上一页面或多级页面。可通过 <a href="https://developers.weixin.qq.com/miniprogram/dev/reference/api/getCurrentPages.html">getCurrentPages</a> 获取当前的页面栈，决定需要返回几层。</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">index.wxml</span></span><br><span class="line"><span class="comment">--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">view</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">button</span> <span class="attr">bindtap</span>=<span class="string">&quot;onnavigateBack&quot;</span>&gt;</span>onnavigateBack<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">index.js</span></span><br><span class="line"><span class="comment">--&gt;</span></span><br><span class="line">onnavigateBack()&#123;</span><br><span class="line">    wx.navigateBack(&#123;</span><br><span class="line">      delta: 1,</span><br><span class="line">    &#125;)</span><br><span class="line">  &#125;,</span><br></pre></td></tr></table></figure><h5 id="其他路由API"><a href="#其他路由API" class="headerlink" title="其他路由API"></a>其他路由API</h5><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">wx.switchTab跳转到 tabBar 页面，并关闭其他所有非 tabBar 页面参数</span><br><span class="line">wx.reLaunch关闭所有页面，打开到应用内的某个页面</span><br><span class="line">wx.redirectTO关闭当前页面，跳转到应用内的某个页面。但是不允许跳转到 tabbar 页面</span><br></pre></td></tr></table></figure><h2 id="界面-交互-下拉刷新"><a href="#界面-交互-下拉刷新" class="headerlink" title="界面(交互,下拉刷新)"></a>界面(交互,下拉刷新)</h2><h3 id="wx-showModal"><a href="#wx-showModal" class="headerlink" title="wx.showModal"></a>wx.showModal</h3><p>显示模态对话框</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- test.wxml --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">view</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">button</span> <span class="attr">bindtap</span>=<span class="string">&quot;onshowModal&quot;</span>&gt;</span>模态对话框<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// test.js</span></span><br><span class="line"><span class="title class_">Page</span>(&#123;</span><br><span class="line">    <span class="title function_">onshowModal</span>(<span class="params"></span>)&#123;</span><br><span class="line">    wx.<span class="title function_">showModal</span>(&#123;</span><br><span class="line">      <span class="attr">title</span>: <span class="string">&#x27;提示&#x27;</span>,</span><br><span class="line">      <span class="attr">content</span>: <span class="string">&#x27;这是一个模态弹窗&#x27;</span>,</span><br><span class="line">      success (res) &#123;</span><br><span class="line">        <span class="keyword">if</span> (res.<span class="property">confirm</span>) &#123;</span><br><span class="line">          <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;用户点击确定&#x27;</span>)</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (res.<span class="property">cancel</span>) &#123;</span><br><span class="line">          <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;用户点击取消&#x27;</span>)</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;)</span><br><span class="line">  &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h3 id="wx-showToast"><a href="#wx-showToast" class="headerlink" title="wx.showToast"></a>wx.showToast</h3><p>显示消息提示框</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- test.wxml --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">view</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">button</span> <span class="attr">bindtap</span>=<span class="string">&quot;onshowToast&quot;</span>&gt;</span>模态对话框<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// test.js</span></span><br><span class="line"><span class="title class_">Page</span>(&#123;</span><br><span class="line">    <span class="title function_">onshowModal</span>(<span class="params"></span>)&#123;</span><br><span class="line">    wx.<span class="title function_">showModal</span>(&#123;</span><br><span class="line">      <span class="attr">title</span>: <span class="string">&#x27;提示&#x27;</span>,</span><br><span class="line">      <span class="attr">content</span>: <span class="string">&#x27;这是一个模态弹窗&#x27;</span>,</span><br><span class="line">      success (res) &#123;</span><br><span class="line">        <span class="keyword">if</span> (res.<span class="property">confirm</span>) &#123;</span><br><span class="line">          <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;用户点击确定&#x27;</span>)</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (res.<span class="property">cancel</span>) &#123;</span><br><span class="line">          <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;用户点击取消&#x27;</span>)</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;)</span><br><span class="line">  &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h5 id="wx-showLoading"><a href="#wx-showLoading" class="headerlink" title="wx.showLoading"></a>wx.showLoading</h5><p>显示 loading 提示框。需主动调用 wx.hideLoading 才能关闭提示框</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">view</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">button</span> <span class="attr">bindtap</span>=<span class="string">&quot;onloading&quot;</span>&gt;</span>loading<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_">onloading</span>(<span class="params"></span>)&#123;</span><br><span class="line">    wx.<span class="title function_">showLoading</span>(&#123;</span><br><span class="line">      <span class="attr">title</span>: <span class="string">&#x27;加载中&#x27;</span>,</span><br><span class="line">      <span class="attr">success</span>:<span class="keyword">function</span>(<span class="params">res</span>)&#123;<span class="comment">// 回调成功</span></span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(res);</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;懒加载中&#x27;</span>)</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">    <span class="built_in">setTimeout</span>(<span class="keyword">function</span>(<span class="params"></span>)&#123;</span><br><span class="line">      wx.<span class="title function_">hideLoading</span>(&#123;<span class="comment">// 隐藏 loading 提示框</span></span><br><span class="line">        <span class="attr">success</span>: <span class="function">(<span class="params">res</span>) =&gt;</span> &#123;<span class="comment">// 回调成功</span></span><br><span class="line">          <span class="variable language_">console</span>.<span class="title function_">log</span>(res)</span><br><span class="line">          <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;关闭懒加载&#x27;</span>)</span><br><span class="line">        &#125;,</span><br><span class="line">      &#125;)</span><br><span class="line">    &#125;,<span class="number">2000</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="wx-startPullDownRefresh"><a href="#wx-startPullDownRefresh" class="headerlink" title="wx.startPullDownRefresh"></a>wx.startPullDownRefresh</h5><p>开始下拉刷新。调用后触发下拉刷新动画，效果与用户手动下拉刷新一致。</p><h5 id="wx-stopPullDownRefresh"><a href="#wx-stopPullDownRefresh" class="headerlink" title="wx.stopPullDownRefresh"></a>wx.stopPullDownRefresh</h5><p>停止当前页面下拉刷新</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">view</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">button</span> <span class="attr">bindtap</span>=<span class="string">&quot;onrefresh&quot;</span>&gt;</span>点击刷新<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_">refresh</span>(<span class="params"></span>)&#123;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;当有下拉刷新的时候，调用该方法&#x27;</span>);</span><br><span class="line">&#125;,</span><br><span class="line"><span class="title function_">onrefresh</span>(<span class="params"></span>)&#123;</span><br><span class="line">    <span class="variable language_">this</span>.<span class="title function_">refresh</span>();<span class="comment">// 调用方法</span></span><br><span class="line">    wx.<span class="title function_">startPullDownRefresh</span>(&#123;</span><br><span class="line">      <span class="attr">success</span>: <span class="function">(<span class="params">res</span>) =&gt;</span> &#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(res)</span><br><span class="line">      &#125;,</span><br><span class="line">    &#125;)</span><br><span class="line">    <span class="built_in">setTimeout</span>(<span class="keyword">function</span>(<span class="params"></span>)&#123;</span><br><span class="line">      wx.<span class="title function_">stopPullDownRefresh</span>()</span><br><span class="line">    &#125;,<span class="number">2000</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// json</span></span><br><span class="line"><span class="attr">&quot;enablePullDownRefresh&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span></span><br><span class="line"><span class="attr">&quot;backgroundTextStyle&quot;</span><span class="punctuation">:</span> <span class="string">&quot;dark&quot;</span></span><br></pre></td></tr></table></figure><h2 id="网络请求"><a href="#网络请求" class="headerlink" title="网络请求"></a>网络请求</h2><h3 id="wx-request-Object-object"><a href="#wx-request-Object-object" class="headerlink" title="wx.request(Object object)"></a>wx.request(Object object)</h3><p>发起 HTTPS 网络请求。使用前请注意阅读<a href="https://developers.weixin.qq.com/miniprogram/dev/framework/ability/network.html">相关说明</a>。</p><h3 id="data-参数说明"><a href="#data-参数说明" class="headerlink" title="data 参数说明"></a>data 参数说明</h3><p>最终发送给服务器的数据是 String 类型，如果传入的 data 不是 String 类型，会被转换成 String 。</p><ol><li>对于 <code>GET</code> 方法的数据，会将数据转换成 query string</li><li>对于 <code>POST</code> 方法且 <code>header[&#39;content-type&#39;]</code> 为 <code>application/json</code> 的数据，会对数据进行 JSON 序列化</li><li>对于 <code>POST</code> 方法且 <code>header[&#39;content-type&#39;]</code> 为 <code>application/x-www-form-urlencoded</code> 的数据，会将数据转换成 query string</li></ol><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- test.wxml --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">view</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">button</span> <span class="attr">bindtap</span>=<span class="string">&quot;onrequest&quot;</span>&gt;</span>请求数据<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// test.js</span></span><br><span class="line"><span class="title class_">Page</span>(&#123;</span><br><span class="line">    <span class="title function_">onrequest</span>(<span class="params"></span>)&#123;</span><br><span class="line">        wx.<span class="title function_">request</span>(&#123;</span><br><span class="line">          <span class="attr">url</span>: <span class="string">&#x27;http://www.kk.com/admin/admin.php&#x27;</span>, <span class="comment">// 接口地址</span></span><br><span class="line">          <span class="attr">data</span>: &#123;<span class="comment">// 请求的参数</span></span><br><span class="line">            <span class="attr">id</span>: <span class="number">2</span>,</span><br><span class="line">            <span class="attr">action</span>:<span class="string">&#x27;weixin&#x27;</span></span><br><span class="line">          &#125;,</span><br><span class="line">          <span class="attr">header</span>:&#123;<span class="comment">// 设置头部信息</span></span><br><span class="line">            <span class="string">&#x27;content-type&#x27;</span>: <span class="string">&#x27;application/x-www-form-urlencoded&#x27;</span></span><br><span class="line">          &#125;,</span><br><span class="line">          <span class="attr">method</span>: <span class="string">&#x27;POST&#x27;</span>,<span class="comment">// 提交方法</span></span><br><span class="line">          <span class="attr">success</span>:<span class="keyword">function</span>(<span class="params">data</span>)&#123;</span><br><span class="line">            <span class="variable language_">console</span>.<span class="title function_">log</span>(data.<span class="property">data</span>)</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;)</span><br><span class="line">  &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h3 id="wx-uploadFile"><a href="#wx-uploadFile" class="headerlink" title="wx.uploadFile"></a>wx.uploadFile</h3><p>将本地资源上传到服务器。客户端发起一个 HTTPS POST 请求，其中 <code>content-type</code> 为 <code>multipart/form-data</code></p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">view</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">button</span> <span class="attr">bindtap</span>=<span class="string">&quot;onupload&quot;</span>&gt;</span>上传图片<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 上传图片事件</span></span><br><span class="line">  <span class="title function_">onupload</span>(<span class="params"></span>)&#123;</span><br><span class="line">    wx.<span class="title function_">chooseImage</span>(&#123;<span class="comment">// 从本地相册选择图片或使用相机拍照</span></span><br><span class="line">      <span class="attr">count</span>: <span class="number">1</span>,<span class="comment">// 最多可以选择的图片张数</span></span><br><span class="line">      <span class="attr">success</span>:<span class="keyword">function</span>(<span class="params">res</span>)&#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(res);</span><br><span class="line">        <span class="keyword">const</span> tempFilePaths = res.<span class="property">tempFilePaths</span></span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(tempFilePaths[<span class="number">0</span>])</span><br><span class="line">        wx.<span class="title function_">uploadFile</span>(&#123;</span><br><span class="line">          <span class="attr">filePath</span>: tempFilePaths[<span class="number">0</span>],<span class="comment">// 要上传文件资源的路径 (本地路径)</span></span><br><span class="line">          <span class="attr">name</span>: <span class="string">&#x27;photo&#x27;</span>,<span class="comment">// 后端通过该值获取到文件内容</span></span><br><span class="line">          <span class="attr">url</span>: <span class="string">&#x27;http://www.kk.com/admin/admin.php&#x27;</span>,<span class="comment">// 上传的地址</span></span><br><span class="line">          <span class="attr">success</span>:<span class="keyword">function</span>(<span class="params">res</span>)&#123;</span><br><span class="line">            <span class="variable language_">console</span>.<span class="title function_">log</span>(res);</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;)</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;)</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><h2 id="数据缓存"><a href="#数据缓存" class="headerlink" title="数据缓存"></a>数据缓存</h2><h3 id="wx-setStorageSync-设置本地缓存"><a href="#wx-setStorageSync-设置本地缓存" class="headerlink" title="wx.setStorageSync() 设置本地缓存"></a>wx.setStorageSync() 设置本地缓存</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">view</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">bindtap</span>=<span class="string">&quot;storage&quot;</span>&gt;</span></span><br><span class="line">        点击存储</span><br><span class="line">    <span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="title class_">Page</span>(&#123;</span><br><span class="line">    <span class="title function_">storage</span>(<span class="params"></span>)&#123;</span><br><span class="line">        wx.<span class="title function_">setStorage</span>(&#123;</span><br><span class="line">            <span class="attr">key</span>:<span class="string">&#x27;key&#x27;</span>,</span><br><span class="line">            <span class="attr">data</span>:<span class="string">&#x27;111&#x27;</span></span><br><span class="line">        &#125;)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h3 id="wx-getStorageSync-获取本地缓存"><a href="#wx-getStorageSync-获取本地缓存" class="headerlink" title="wx.getStorageSync() 获取本地缓存"></a>wx.getStorageSync() 获取本地缓存</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">view</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">button</span> <span class="attr">bindtap</span>=<span class="string">&quot;getstorage&quot;</span>&gt;</span></span><br><span class="line">        点击获取</span><br><span class="line">  <span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_">getstorage</span>(<span class="params"></span>)&#123;</span><br><span class="line">   <span class="keyword">const</span> value = wx.<span class="title function_">getStorageSync</span>(<span class="string">&#x27;key&#x27;</span>)</span><br><span class="line">   <span class="variable language_">console</span>.<span class="title function_">log</span>(value)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="wx-removeStorageSync"><a href="#wx-removeStorageSync" class="headerlink" title="wx.removeStorageSync"></a>wx.removeStorageSync</h5><p>从本地缓存中移除指定 key</p><h5 id="wx-clearStorageSync"><a href="#wx-clearStorageSync" class="headerlink" title="wx.clearStorageSync"></a>wx.clearStorageSync</h5><p>清理本地数据缓存</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">view</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">button</span> <span class="attr">bindtap</span>=<span class="string">&quot;onremove&quot;</span>&gt;</span>删除缓存<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_">onremove</span>(<span class="params"></span>)&#123;</span><br><span class="line">    wx.<span class="title function_">removeStorage</span>(&#123;</span><br><span class="line">      <span class="attr">key</span>: <span class="string">&#x27;key&#x27;</span>,</span><br><span class="line">      success (res) &#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;删除成功&#x27;</span>)</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><a href="https://developers.weixin.qq.com/miniprogram/dev/api/"><strong>想了解更多API请点击</strong></a></p>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
          <category> 小程序开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 小程序 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>小程序组件</title>
      <link href="/Lutianyao/blog/2023/02/11/02.%E5%89%8D%E7%AB%AF/03.%E5%B0%8F%E7%A8%8B%E5%BA%8F%E5%BC%80%E5%8F%91/06.%E5%B0%8F%E7%A8%8B%E5%BA%8F%E7%BB%84%E4%BB%B6/"/>
      <url>/Lutianyao/blog/2023/02/11/02.%E5%89%8D%E7%AB%AF/03.%E5%B0%8F%E7%A8%8B%E5%BA%8F%E5%BC%80%E5%8F%91/06.%E5%B0%8F%E7%A8%8B%E5%BA%8F%E7%BB%84%E4%BB%B6/</url>
      
        <content type="html"><![CDATA[<h1 id="小程序组件"><a href="#小程序组件" class="headerlink" title="小程序组件"></a>小程序组件</h1><p>微信小程序内置了很多组件，开发中可以直接使用他们来展示响应的内容</p><h3 id="视图容器"><a href="#视图容器" class="headerlink" title="视图容器"></a>视图容器</h3><h4 id="scroll-view"><a href="#scroll-view" class="headerlink" title="scroll-view"></a>scroll-view</h4><p>滚动组件，可滚动视图区域</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- wxml --&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- scroll-view横向滚动 </span></span><br><span class="line"><span class="comment">--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">scroll-view</span> <span class="attr">class</span>=<span class="string">&quot;scroll-view&quot;</span> <span class="attr">scroll-x</span>=<span class="string">&quot;&#123;&#123;true&#125;&#125;&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">view</span> <span class="attr">class</span>=<span class="string">&quot;scroll-item red&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">view</span> <span class="attr">class</span>=<span class="string">&quot;scroll-item green&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">view</span> <span class="attr">class</span>=<span class="string">&quot;scroll-item yellow&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">view</span> <span class="attr">class</span>=<span class="string">&quot;scroll-item black&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">view</span> <span class="attr">class</span>=<span class="string">&quot;scroll-item blue&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">view</span> <span class="attr">class</span>=<span class="string">&quot;scroll-item orange&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">scroll-view</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- scroll-view纵向滚动 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">scroll-view</span> <span class="attr">class</span>=<span class="string">&quot;scroll-view-y&quot;</span> <span class="attr">scroll-into-view</span>=<span class="string">&quot;yellow&quot;</span> <span class="attr">scroll-y</span>=<span class="string">&quot;&#123;&#123;true&#125;&#125;&quot;</span> &gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">view</span> <span class="attr">class</span>=<span class="string">&quot;scroll-item-y red&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">view</span> <span class="attr">class</span>=<span class="string">&quot;scroll-item-y green&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">view</span> <span class="attr">id</span>=<span class="string">&quot;yellow&quot;</span> <span class="attr">class</span>=<span class="string">&quot;scroll-item-y yellow&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">view</span> <span class="attr">class</span>=<span class="string">&quot;scroll-item-y black&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">view</span> <span class="attr">class</span>=<span class="string">&quot;scroll-item-y blue&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">view</span> <span class="attr">class</span>=<span class="string">&quot;scroll-item-y orange&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">scroll-view</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* wxsss */</span></span><br><span class="line"><span class="selector-class">.scroll-view</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">100%</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">100px</span>;</span><br><span class="line">  <span class="attribute">white-space</span>: nowrap;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.scroll-view</span> <span class="selector-class">.scroll-item</span> &#123;</span><br><span class="line">  <span class="attribute">display</span>: inline-block;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">100px</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">100px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.red</span> &#123;</span><br><span class="line">  <span class="attribute">background</span>: red;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.green</span> &#123;</span><br><span class="line">  <span class="attribute">background</span>: green;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.yellow</span> &#123;</span><br><span class="line">  <span class="attribute">background</span>: yellow;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.black</span> &#123;</span><br><span class="line">  <span class="attribute">background</span>: black;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.blue</span> &#123;</span><br><span class="line">  <span class="attribute">background</span>: blue;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.orange</span> &#123;</span><br><span class="line">  <span class="attribute">background</span>: orange;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/* scroll-view纵向滚动 */</span></span><br><span class="line"><span class="selector-class">.scroll-view-y</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">100%</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">300px</span>;</span><br><span class="line">  <span class="attribute">background</span>: palegoldenrod;</span><br><span class="line">  <span class="attribute">white-space</span>: nowrap;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.scroll-view-y</span> <span class="selector-class">.scroll-item-y</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">100%</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">180px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.red</span> &#123;</span><br><span class="line">  <span class="attribute">background</span>: red;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.green</span> &#123;</span><br><span class="line">  <span class="attribute">background</span>: green;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.yellow</span> &#123;</span><br><span class="line">  <span class="attribute">background</span>: yellow;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.black</span> &#123;</span><br><span class="line">  <span class="attribute">background</span>: black;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.blue</span> &#123;</span><br><span class="line">  <span class="attribute">background</span>: blue;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.orange</span> &#123;</span><br><span class="line">  <span class="attribute">background</span>: orange;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="swiper"><a href="#swiper" class="headerlink" title="swiper"></a>swiper</h4><p>轮播图组件</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- wxml --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">view</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">swiper</span> <span class="attr">indicator-dots</span>=<span class="string">&quot;true&quot;</span> <span class="attr">indicator-active-color</span>=<span class="string">&quot;red&quot;</span> <span class="attr">autoplay</span>=<span class="string">&quot;true&quot;</span> <span class="attr">interval</span>=<span class="string">&quot;1000&quot;</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 图片链接来自百度图片 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">view</span> <span class="attr">wx:for</span>=<span class="string">&quot;&#123;&#123;image&#125;&#125;&quot;</span> <span class="attr">wx:for-item</span>=<span class="string">&quot;item&quot;</span> <span class="attr">wx:key</span>=<span class="string">&quot;key&quot;</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">swiper-item</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">image</span> <span class="attr">src</span>=<span class="string">&quot;&#123;&#123;item&#125;&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">image</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">swiper-item</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">swiper</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* wxss */</span></span><br><span class="line">image&#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">100%</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">100%</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// js</span></span><br><span class="line"><span class="attr">data</span>: &#123;</span><br><span class="line">    <span class="attr">image</span>:[</span><br><span class="line">      <span class="string">&#x27;https://t7.baidu.com/it/u=2604797219,1573897854&amp;fm=193&amp;f=GIF&#x27;</span>,</span><br><span class="line">      <span class="string">&#x27;https://t7.baidu.com/it/u=2942499027,2479446682&amp;fm=193&amp;f=GIF&#x27;</span>,</span><br><span class="line">      <span class="string">&#x27;https://t7.baidu.com/it/u=3165657288,4248157545&amp;fm=193&amp;f=GIF&#x27;</span></span><br><span class="line">    ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="view"><a href="#view" class="headerlink" title="view"></a>view</h5><p>视图容器</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">view</span> <span class="attr">class</span>=<span class="string">&quot;test&quot;</span>&gt;</span></span><br><span class="line">  1</span><br><span class="line"><span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.test</span>&#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">200px</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">200px</span>;</span><br><span class="line">  <span class="attribute">background-color</span>: aqua;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="基础内容"><a href="#基础内容" class="headerlink" title="基础内容"></a>基础内容</h3><h4 id="icon"><a href="#icon" class="headerlink" title="icon"></a>icon</h4><p>图标。组件属性的长度单位默认为px</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">view</span> <span class="attr">class</span>=<span class="string">&quot;group&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">block</span> <span class="attr">wx:for</span>=<span class="string">&quot;&#123;&#123;iconSize&#125;&#125;&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">icon</span> <span class="attr">type</span>=<span class="string">&quot;success&quot;</span> <span class="attr">size</span>=<span class="string">&quot;&#123;&#123;item&#125;&#125;&quot;</span>/&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">block</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">view</span> <span class="attr">class</span>=<span class="string">&quot;group&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">block</span> <span class="attr">wx:for</span>=<span class="string">&quot;&#123;&#123;iconType&#125;&#125;&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">icon</span> <span class="attr">type</span>=<span class="string">&quot;&#123;&#123;item&#125;&#125;&quot;</span> <span class="attr">size</span>=<span class="string">&quot;40&quot;</span>/&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">block</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">view</span> <span class="attr">class</span>=<span class="string">&quot;group&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">block</span> <span class="attr">wx:for</span>=<span class="string">&quot;&#123;&#123;iconColor&#125;&#125;&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">icon</span> <span class="attr">type</span>=<span class="string">&quot;success&quot;</span> <span class="attr">size</span>=<span class="string">&quot;40&quot;</span> <span class="attr">color</span>=<span class="string">&quot;&#123;&#123;item&#125;&#125;&quot;</span>/&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">block</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.intro</span> &#123;</span><br><span class="line">  <span class="attribute">margin</span>: <span class="number">30px</span>;</span><br><span class="line">  <span class="attribute">text-align</span>: center;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="title class_">Page</span>(&#123;</span><br><span class="line">  <span class="attr">data</span>: &#123;</span><br><span class="line">    <span class="attr">iconSize</span>: [<span class="number">20</span>, <span class="number">30</span>, <span class="number">40</span>, <span class="number">50</span>, <span class="number">60</span>, <span class="number">70</span>],</span><br><span class="line">    <span class="attr">iconColor</span>: [</span><br><span class="line">      <span class="string">&#x27;red&#x27;</span>, <span class="string">&#x27;orange&#x27;</span>, <span class="string">&#x27;yellow&#x27;</span>, <span class="string">&#x27;green&#x27;</span>, <span class="string">&#x27;rgb(0,255,255)&#x27;</span>, <span class="string">&#x27;blue&#x27;</span>, <span class="string">&#x27;purple&#x27;</span></span><br><span class="line">    ],</span><br><span class="line">    <span class="attr">iconType</span>: [</span><br><span class="line">      <span class="string">&#x27;success&#x27;</span>, <span class="string">&#x27;success_no_circle&#x27;</span>, <span class="string">&#x27;info&#x27;</span>, <span class="string">&#x27;warn&#x27;</span>, <span class="string">&#x27;waiting&#x27;</span>, <span class="string">&#x27;cancel&#x27;</span>, <span class="string">&#x27;download&#x27;</span>, <span class="string">&#x27;search&#x27;</span>, <span class="string">&#x27;clear&#x27;</span></span><br><span class="line">    ]</span><br><span class="line">  &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h4 id="progress"><a href="#progress" class="headerlink" title="progress"></a>progress</h4><p>进度条。组件属性的长度单位默认为px</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">progress</span> <span class="attr">percent</span>=<span class="string">&quot;20&quot;</span> <span class="attr">show-info</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">progress</span> <span class="attr">percent</span>=<span class="string">&quot;40&quot;</span> <span class="attr">stroke-width</span>=<span class="string">&quot;12&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">progress</span> <span class="attr">percent</span>=<span class="string">&quot;60&quot;</span> <span class="attr">color</span>=<span class="string">&quot;pink&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">progress</span> <span class="attr">percent</span>=<span class="string">&quot;80&quot;</span> <span class="attr">active</span> /&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">progress &#123;<span class="attribute">margin</span>: <span class="number">10px</span>;&#125;</span><br></pre></td></tr></table></figure><h5 id="rich-text"><a href="#rich-text" class="headerlink" title="rich-text"></a>rich-text</h5><p>富文本</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">rich-text</span> <span class="attr">nodes</span>=<span class="string">&quot;&#123;&#123;nodes&#125;&#125;&quot;</span> <span class="attr">bindtap</span>=<span class="string">&quot;tap&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">rich-text</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="title class_">Page</span>(&#123;</span><br><span class="line">  <span class="attr">data</span>: &#123;</span><br><span class="line">    <span class="attr">nodes</span>: [&#123;</span><br><span class="line">      <span class="attr">name</span>: <span class="string">&#x27;div&#x27;</span>,</span><br><span class="line">      <span class="attr">attrs</span>: &#123;</span><br><span class="line">        <span class="attr">class</span>: <span class="string">&#x27;div_class&#x27;</span>,</span><br><span class="line">        <span class="attr">style</span>: <span class="string">&#x27;line-height: 60px; color: red;&#x27;</span></span><br><span class="line">      &#125;,</span><br><span class="line">      <span class="attr">children</span>: [&#123;</span><br><span class="line">        <span class="attr">type</span>: <span class="string">&#x27;text&#x27;</span>,</span><br><span class="line">        <span class="attr">text</span>: <span class="string">&#x27;Hello&amp;nbsp;World!&#x27;</span></span><br><span class="line">      &#125;]</span><br><span class="line">    &#125;],</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="title function_">tap</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;tap&#x27;</span>)</span><br><span class="line">  &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h5 id="text"><a href="#text" class="headerlink" title="text"></a>text</h5><p>文本</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">text</span>&gt;</span>文本<span class="tag">&lt;/<span class="name">text</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">text&#123;</span><br><span class="line">  <span class="attribute">color</span>: red;</span><br><span class="line">  <span class="attribute">background-color</span>: aqua;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="form表单"><a href="#form表单" class="headerlink" title="form表单"></a>form表单</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">form</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">&quot;name&quot;</span>&gt;</span>姓名<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!-- 输入框 --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">id</span>=<span class="string">&quot;name&quot;</span> <span class="attr">placeholder</span>=<span class="string">&quot;请输入姓名&quot;</span> /&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">&quot;pwd&quot;</span>&gt;</span>密码<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;password&quot;</span> <span class="attr">placeholder</span>=<span class="string">&quot;请输入密码&quot;</span> <span class="attr">id</span>=<span class="string">&quot;id&quot;</span>/&gt;</span></span><br><span class="line">  <span class="comment">&lt;!-- 关联属性 --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">label</span>&gt;</span>性别<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!-- 单项选择器 --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">radio-group</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">radio</span> <span class="attr">value</span>=<span class="string">&quot;1&quot;</span>&gt;</span>男<span class="tag">&lt;/<span class="name">radio</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">radio</span> <span class="attr">value</span>=<span class="string">&quot;2&quot;</span>&gt;</span>女<span class="tag">&lt;/<span class="name">radio</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">radio-group</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">label</span>&gt;</span>爱好<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!-- 多项选择器 --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">checkbox-group</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">checkbox</span> <span class="attr">value</span>=<span class="string">&quot;1&quot;</span>&gt;</span>看电影<span class="tag">&lt;/<span class="name">checkbox</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">checkbox</span> <span class="attr">value</span>=<span class="string">&quot;2&quot;</span>&gt;</span>打游戏<span class="tag">&lt;/<span class="name">checkbox</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">checkbox</span> <span class="attr">value</span>=<span class="string">&quot;3&quot;</span>&gt;</span>听音乐<span class="tag">&lt;/<span class="name">checkbox</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">checkbox-group</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!-- 滑动选择器 --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">slider</span> <span class="attr">max</span>=<span class="string">&quot;100&quot;</span> <span class="attr">min</span>=<span class="string">&quot;1&quot;</span> <span class="attr">show-value</span>=<span class="string">&quot;true&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">slider</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">view</span> <span class="attr">class</span>=<span class="string">&quot;section__title&quot;</span>&gt;</span>时间选择器<span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">picker</span> <span class="attr">mode</span>=<span class="string">&quot;time&quot;</span> <span class="attr">value</span>=<span class="string">&quot;&#123;&#123;time&#125;&#125;&quot;</span> <span class="attr">start</span>=<span class="string">&quot;09:01&quot;</span> <span class="attr">end</span>=<span class="string">&quot;21:01&quot;</span> <span class="attr">bindchange</span>=<span class="string">&quot;bindTimeChange&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">view</span> <span class="attr">class</span>=<span class="string">&quot;picker&quot;</span>&gt;</span></span><br><span class="line">      当前选择: &#123;&#123;time&#125;&#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">picker</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">label</span>&gt;</span>开关<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">switch</span>&gt;</span><span class="tag">&lt;/<span class="name">switch</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!-- 多行文本输入框 --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">textarea</span> <span class="attr">hold-keyboard</span>=<span class="string">&quot;true&quot;</span> <span class="attr">auto-focus</span>=<span class="string">&quot;true&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">textarea</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">bindTimeChange</span>: <span class="keyword">function</span>(<span class="params">e</span>) &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;picker发送选择改变，携带值为&#x27;</span>, e.<span class="property">detail</span>.<span class="property">value</span>)</span><br><span class="line">    <span class="variable language_">this</span>.<span class="title function_">setData</span>(&#123;</span><br><span class="line">      <span class="attr">time</span>: e.<span class="property">detail</span>.<span class="property">value</span></span><br><span class="line">    &#125;)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
          <category> 小程序开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 小程序 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>WXML语法</title>
      <link href="/Lutianyao/blog/2023/02/11/02.%E5%89%8D%E7%AB%AF/03.%E5%B0%8F%E7%A8%8B%E5%BA%8F%E5%BC%80%E5%8F%91/05.WXML%E8%AF%AD%E6%B3%95/"/>
      <url>/Lutianyao/blog/2023/02/11/02.%E5%89%8D%E7%AB%AF/03.%E5%B0%8F%E7%A8%8B%E5%BA%8F%E5%BC%80%E5%8F%91/05.WXML%E8%AF%AD%E6%B3%95/</url>
      
        <content type="html"><![CDATA[<h1 id="WXML语法"><a href="#WXML语法" class="headerlink" title="WXML语法"></a>WXML语法</h1><p>在开发PC端或者移动端的页面，一般都是用的是HTML构建页面的结构，但是在微信小程序这里就不一样了，这里有一套标记语言专门给微信小程序构建页面,它就是WXML（WeiXin Markup Language），WXML（WeiXin Markup Language）是框架设计的一套标签语言，结合<a href="https://developers.weixin.qq.com/miniprogram/dev/component/index.html">基础组件</a>、<a href="https://developers.weixin.qq.com/miniprogram/dev/framework/view/wxml/event.html">事件系统</a>，可以构建出小程序的页面的结构。</p><h3 id="基本语法"><a href="#基本语法" class="headerlink" title="基本语法"></a>基本语法</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--  index.wxml  页面结构</span></span><br><span class="line"><span class="comment">  跟HTML标签语法的类似，有成对标签：&lt;view&gt;&lt;/view&gt;...，也有单标签：&lt;input /&gt;...</span></span><br><span class="line"><span class="comment">  wxml的有些标签跟HTML的一样</span></span><br><span class="line"><span class="comment">--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">view</span> <span class="attr">class</span>=<span class="string">&quot;test&quot;</span>&gt;</span></span><br><span class="line"> &#123;&#123;message&#125;&#125;</span><br><span class="line">  <span class="tag">&lt;<span class="name">view</span> <span class="attr">class</span>=<span class="string">&quot;demo&quot;</span>&gt;</span>该标签跟HTML的div标签作用一样<span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">maxlength</span>=<span class="string">&quot;10&quot;</span> <span class="attr">placeholder</span>=<span class="string">&quot;请输入文字&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**  index.wxss   样式表</span></span><br><span class="line"><span class="comment">  它的语法跟css的语法很像</span></span><br><span class="line"><span class="comment">**/</span></span><br><span class="line"><span class="selector-class">.test</span>&#123;</span><br><span class="line">  <span class="attribute">color</span>: red;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.demo</span>&#123;</span><br><span class="line">  <span class="attribute">color</span>: green;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/** index.js  逻辑</span></span><br><span class="line"><span class="comment">它的语法跟JavaScript的语法一样</span></span><br><span class="line"><span class="comment">**/</span></span><br><span class="line"><span class="title class_">Page</span>(&#123;</span><br><span class="line">    <span class="attr">data</span>: &#123;</span><br><span class="line">        <span class="attr">msg</span>: <span class="string">&#x27;Holle Word&#x27;</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h3 id="数据绑定"><a href="#数据绑定" class="headerlink" title="数据绑定"></a>数据绑定</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--wxml--&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- </span></span><br><span class="line"><span class="comment">变量名是大小写敏感的，也就是说 &#123;&#123;name&#125;&#125; 和 &#123;&#123;NAME&#125;&#125; 是两个不同的变量。</span></span><br><span class="line"><span class="comment">注： &#123;&#123;&#125;&#125; 叫做Mustache 语法。</span></span><br><span class="line"><span class="comment">&#123;&#123;&#125;&#125; 具有两种功能：动态渲染、逻辑运算。</span></span><br><span class="line"><span class="comment">&#123;&#123;&#125;&#125; 中除了变量名，还可以放置数字、字符串，并且做一些逻辑运算：算数运算、字符串拼接、三元运算</span></span><br><span class="line"><span class="comment">--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">view</span>&gt;</span>&#123;&#123;message&#125;&#125;<span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// page.js</span></span><br><span class="line"><span class="title class_">Page</span>(&#123;</span><br><span class="line">  <span class="attr">data</span>: &#123;</span><br><span class="line">    <span class="attr">message</span>: <span class="string">&#x27;Hello MINA!&#x27;</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h5 id="组件属性-需要在双引号之内"><a href="#组件属性-需要在双引号之内" class="headerlink" title="组件属性(需要在双引号之内)"></a>组件属性(需要在双引号之内)</h5><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- wxml --&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">view</span> <span class="attr">id</span>=<span class="string">&quot;item-&#123;&#123;id&#125;&#125;&quot;</span>&gt;</span> <span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/** js **/</span></span><br><span class="line"><span class="title class_">Pages</span>(&#123;</span><br><span class="line">    <span class="attr">data</span>:&#123;</span><br><span class="line">        <span class="attr">id</span>:<span class="number">1</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h5 id="控制属性-需要在双引号之内"><a href="#控制属性-需要在双引号之内" class="headerlink" title="控制属性(需要在双引号之内)"></a>控制属性(需要在双引号之内)</h5><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- wxml --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">view</span> <span class="attr">wx:if</span>=<span class="string">&quot;&#123;&#123;condition&#125;&#125;&quot;</span>&gt;</span>Hello Word<span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/** js **/</span></span><br><span class="line"><span class="title class_">Pages</span>(&#123;</span><br><span class="line">    <span class="attr">data</span>:&#123;</span><br><span class="line">        <span class="attr">condition</span>:<span class="literal">false</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h5 id="关键字-需要在双引号之内"><a href="#关键字-需要在双引号之内" class="headerlink" title="关键字(需要在双引号之内)"></a>关键字(需要在双引号之内)</h5><p><code>true</code>：boolean 类型的 true，代表真值。</p><p><code>false</code>： boolean 类型的 false，代表假值。</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- wxml </span></span><br><span class="line"><span class="comment">特别注意：不要直接写 checked=&quot;false&quot;，其计算结果是一个字符串，转成 boolean 类型后代表真值。</span></span><br><span class="line"><span class="comment">--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">checkbox</span> <span class="attr">checked</span>=<span class="string">&quot;&#123;&#123;true&#125;&#125;&quot;</span>&gt;</span> <span class="tag">&lt;/<span class="name">checkbox</span>&gt;</span></span><br></pre></td></tr></table></figure><h5 id="运算"><a href="#运算" class="headerlink" title="运算"></a>运算</h5><p>可以在 <code>&#123;&#123;&#125;&#125;</code> 内进行简单的运算，支持的有如下几种方式：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">view</span> <span class="attr">hidden</span>=<span class="string">&quot;&#123;&#123;flag ? true : false&#125;&#125;&quot;</span>&gt;</span> Hidden <span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br></pre></td></tr></table></figure><h5 id="算数运算"><a href="#算数运算" class="headerlink" title="算数运算"></a>算数运算</h5><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- wxml --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">view</span>&gt;</span> &#123;&#123;a + b&#125;&#125; + &#123;&#123;c&#125;&#125; + d <span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/** js **/</span></span><br><span class="line"><span class="title class_">Pages</span>(&#123;</span><br><span class="line">    <span class="attr">data</span>:&#123;</span><br><span class="line">        <span class="attr">a</span>:<span class="number">1</span>,</span><br><span class="line">        <span class="attr">b</span>:<span class="number">2</span>,</span><br><span class="line">        <span class="attr">c</span>:<span class="number">3</span>,</span><br><span class="line">        <span class="attr">d</span>:<span class="number">4</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h5 id="逻辑判断"><a href="#逻辑判断" class="headerlink" title="逻辑判断"></a>逻辑判断</h5><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- wxml --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">view</span> <span class="attr">wx:if</span>=<span class="string">&quot;&#123;&#123;length &gt; 5&#125;&#125;&quot;</span>&gt;</span>test<span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/** js **/</span></span><br><span class="line"><span class="title class_">Pages</span>(&#123;</span><br><span class="line">    <span class="attr">data</span>:&#123;</span><br><span class="line">       <span class="attr">length</span>:<span class="number">6</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h5 id="字符串运算"><a href="#字符串运算" class="headerlink" title="字符串运算"></a>字符串运算</h5><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- wxml --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">view</span>&gt;</span>&#123;&#123;&quot;hello &quot; + name&#125;&#125;<span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/** js **/</span></span><br><span class="line"><span class="title class_">Pages</span>(&#123;</span><br><span class="line">    <span class="attr">data</span>:&#123;</span><br><span class="line">       <span class="attr">name</span>:<span class="string">&#x27;word&#x27;</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h5 id="数据路径运算"><a href="#数据路径运算" class="headerlink" title="数据路径运算"></a>数据路径运算</h5><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- wxml </span></span><br><span class="line"><span class="comment">注意：由于语法问题，复制下面代码片段要把空格去掉</span></span><br><span class="line"><span class="comment">--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">view</span>&gt;</span>&#123;&#123;object.key&#125;&#125; &#123;&#123;array[0]&#125;&#125;<span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 组合 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">view</span> <span class="attr">wx:for</span>=<span class="string">&quot;&#123;&#123;[zero, 1, 2, 3, 4]&#125;&#125;&quot;</span>&gt;</span> &#123;&#123;item&#125;&#125; <span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/** js **/</span></span><br><span class="line"><span class="title class_">Pages</span>(&#123;</span><br><span class="line">    <span class="attr">data</span>:&#123;</span><br><span class="line">       <span class="attr">object</span>: &#123;</span><br><span class="line">          <span class="attr">key</span>: <span class="string">&#x27;Hello &#x27;</span></span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="attr">array</span>: [<span class="string">&#x27;word&#x27;</span>],</span><br><span class="line">        <span class="attr">zero</span>: <span class="number">0</span></span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p><a href="https://developers.weixin.qq.com/miniprogram/dev/reference/wxml/data.html"><strong>更多关于数据绑定</strong></a></p><h3 id="列表渲染"><a href="#列表渲染" class="headerlink" title="列表渲染"></a>列表渲染</h3><h5 id="wx-for"><a href="#wx-for" class="headerlink" title="wx:for"></a>wx:for</h5><p>在组件上使用 <code>wx:for</code> 控制属性绑定一个数组，即可使用数组中各项的数据重复渲染该组件。</p><p>默认数组的当前项的下标变量名默认为 <code>index</code>，数组当前项的变量名默认为 <code>item</code></p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- wxml --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">view</span> <span class="attr">wx:for</span>=<span class="string">&quot;&#123;&#123;array&#125;&#125;&quot;</span>&gt;</span></span><br><span class="line">  &#123;&#123;index&#125;&#125;: &#123;&#123;item.message&#125;&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- </span></span><br><span class="line"><span class="comment">使用 wx:for-item 可以指定数组当前元素的变量名，</span></span><br><span class="line"><span class="comment">使用 wx:for-index 可以指定数组当前下标的变量名：</span></span><br><span class="line"><span class="comment">--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">view</span> <span class="attr">wx:for</span>=<span class="string">&quot;&#123;&#123;array&#125;&#125;&quot;</span> <span class="attr">wx:for-index</span>=<span class="string">&quot;idx&quot;</span> <span class="attr">wx:for-item</span>=<span class="string">&quot;itemName&quot;</span>&gt;</span></span><br><span class="line">  &#123;&#123;idx&#125;&#125;: &#123;&#123;itemName.message&#125;&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- </span></span><br><span class="line"><span class="comment">`wx:key` 的值以两种形式提供</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">1. 字符串，代表在 for 循环的 array 中 item 的某个 property，该 property 的值需要是列表中唯一的字符串或数字，且不能动态改变。</span></span><br><span class="line"><span class="comment">2. 保留关键字 `this` 代表在 for 循环中的 item 本身，这种表示需要 item 本身是一个唯一的字符串或者数字。</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">当数据改变触发渲染层重新渲染的时候，会校正带有 key 的组件，框架会确保他们被重新排序，而不是重新创建，以确保使组件保持自身的状态，并且提高列表渲染时的效率。</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">如不提供wx:key，会报一个warning， 如果明确知道该列表是静态，或者不必关注其顺序，可以选择忽略。</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">view</span> <span class="attr">wx:for</span>=<span class="string">&quot;&#123;&#123;array&#125;&#125;&quot;</span> <span class="attr">wx:key</span>=<span class="string">&quot;key&quot;</span> <span class="attr">wx:for-item</span>=<span class="string">&quot;itemName&quot;</span>&gt;</span></span><br><span class="line">  &#123;&#123;itemName.message&#125;&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/** js **/</span></span><br><span class="line"><span class="title class_">Pages</span>(&#123;</span><br><span class="line">    <span class="attr">data</span>:&#123;</span><br><span class="line">        <span class="attr">array</span>: [&#123;</span><br><span class="line">          <span class="attr">message</span>: <span class="string">&#x27;foo&#x27;</span>,</span><br><span class="line">        &#125;, &#123;</span><br><span class="line">          <span class="attr">message</span>: <span class="string">&#x27;bar&#x27;</span></span><br><span class="line">        &#125;]</span><br><span class="line">    &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h5 id="注意"><a href="#注意" class="headerlink" title="注意"></a>注意</h5><p>当 <code>wx:for</code> 的值为字符串时，会将字符串解析成字符串数组</p><p>花括号和引号之间如果有空格，将最终被解析成为字符串</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">view</span> <span class="attr">wx:for</span>=<span class="string">&quot;array&quot;</span>&gt;</span></span><br><span class="line">  &#123;&#123;item&#125;&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">view</span> <span class="attr">wx:for</span>=<span class="string">&quot;&#123;&#123;[1,2,3]&#125;&#125; &quot;</span>&gt;</span></span><br><span class="line">  &#123;&#123;item&#125;&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="条件渲染"><a href="#条件渲染" class="headerlink" title="条件渲染"></a>条件渲染</h3><h5 id="wx-if"><a href="#wx-if" class="headerlink" title="wx:if"></a>wx:if</h5><p>在框架中，使用 <code>wx:if=&quot;&quot;</code> 来判断是否需要渲染该代码块：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- wxml --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">view</span> <span class="attr">wx:if</span>=<span class="string">&quot;&#123;&#123;condition&#125;&#125;&quot;</span>&gt;</span>Hello Word<span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br></pre></td></tr></table></figure><p>也可以用 <code>wx:elif</code> 和 <code>wx:else</code> 来添加一个 else 块：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">view</span> <span class="attr">wx:if</span>=<span class="string">&quot;&#123;&#123;length &gt; 5&#125;&#125;&quot;</span>&gt;</span> 1 <span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">view</span> <span class="attr">wx:elif</span>=<span class="string">&quot;&#123;&#123;length &gt; 2&#125;&#125;&quot;</span>&gt;</span> 2 <span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">view</span> <span class="attr">wx:else</span>&gt;</span> 3 <span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/** js **/</span></span><br><span class="line"><span class="title class_">Pages</span>(&#123;</span><br><span class="line">    <span class="attr">data</span>:&#123;</span><br><span class="line">        <span class="attr">condition</span>:<span class="literal">false</span>,</span><br><span class="line">        <span class="attr">length</span>:<span class="number">4</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h5 id="wx-if-vs-hidden"><a href="#wx-if-vs-hidden" class="headerlink" title="wx:if vs hidden"></a><code>wx:if</code> vs <code>hidden</code></h5><p>因为 <code>wx:if</code> 之中的模板也可能包含数据绑定，所以当 <code>wx:if</code> 的条件值切换时，框架有一个局部渲染的过程，因为它会确保条件块在切换时销毁或重新渲染。</p><p>同时 <code>wx:if</code> 也是<strong>惰性的</strong>，如果在初始渲染条件为 <code>false</code>，框架什么也不做，在条件第一次变成真的时候才开始局部渲染。</p><p>相比之下，<code>hidden</code> 就简单的多，组件始终会被渲染，只是简单的控制显示与隐藏。</p><p>一般来说，<code>wx:if</code> 有更高的切换消耗而 <code>hidden</code> 有更高的初始渲染消耗。因此，如果需要频繁切换的情景下，用 <code>hidden</code> 更好，如果在运行时条件不大可能改变则 <code>wx:if</code> 较好。</p><h3 id="模板"><a href="#模板" class="headerlink" title="模板"></a>模板</h3><p>WXML提供模板（template），可以在模板中定义代码片段，然后在不同的地方调用。</p><h5 id="定义模板"><a href="#定义模板" class="headerlink" title="定义模板"></a>定义模板</h5><p>使用 name 属性，作为模板的名字。然后在<code>&lt;template/&gt;</code>内定义代码片段，如：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- wxml --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">template</span> <span class="attr">name</span>=<span class="string">&quot;msgItem&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">view</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">text</span>&gt;</span> &#123;&#123;index&#125;&#125;: &#123;&#123;msg&#125;&#125; <span class="tag">&lt;/<span class="name">text</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">text</span>&gt;</span> Time: &#123;&#123;time&#125;&#125; <span class="tag">&lt;/<span class="name">text</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br></pre></td></tr></table></figure><h5 id="使用模板"><a href="#使用模板" class="headerlink" title="使用模板"></a>使用模板</h5><p>使用 is 属性，声明需要的使用的模板，然后将模板所需要的 data 传入，如：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span> <span class="attr">is</span>=<span class="string">&quot;msgItem&quot;</span> <span class="attr">data</span>=<span class="string">&quot;&#123;&#123;...item&#125;&#125;&quot;</span>/&gt;</span></span><br></pre></td></tr></table></figure><p>is 属性可以使用 Mustache 语法，来动态决定具体需要渲染哪个模板：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span> <span class="attr">name</span>=<span class="string">&quot;odd&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">view</span>&gt;</span> odd <span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">template</span> <span class="attr">name</span>=<span class="string">&quot;even&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">view</span>&gt;</span> even <span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">block</span> <span class="attr">wx:for</span>=<span class="string">&quot;&#123;&#123;[1, 2, 3, 4, 5]&#125;&#125;&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">template</span> <span class="attr">is</span>=<span class="string">&quot;&#123;&#123;item % 2 == 0 ? &#x27;even&#x27; : &#x27;odd&#x27;&#125;&#125;&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">block</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="引用"><a href="#引用" class="headerlink" title="引用"></a>引用</h3><p>WXML 提供两种文件引用方式<code>import</code>和<code>include</code></p><h5 id="import"><a href="#import" class="headerlink" title="import"></a>import</h5><p><code>import</code>可以在该文件中使用目标文件定义的<code>template</code>，如：</p><p>在 item.wxml 中定义了一个叫<code>item</code>的<code>template</code>：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- test.wxml --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">template</span> <span class="attr">name</span>=<span class="string">&quot;item&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">text</span>&gt;</span>&#123;&#123;text&#125;&#125;<span class="tag">&lt;/<span class="name">text</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br></pre></td></tr></table></figure><p>在 index.wxml 中引用了 test.wxml，就可以使用<code>item</code>模板：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- test.wxml --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">import</span> <span class="attr">src</span>=<span class="string">&quot;../test/test.wxml&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">template</span> <span class="attr">is</span>=<span class="string">&quot;item&quot;</span> <span class="attr">data</span>=<span class="string">&quot;&#123;&#123;text: &#x27;forbar&#x27;&#125;&#125;&quot;</span>/&gt;</span></span><br></pre></td></tr></table></figure><h5 id="import-的作用域"><a href="#import-的作用域" class="headerlink" title="import 的作用域"></a>import 的作用域</h5><p>import 有作用域的概念，即只会 import 目标文件中定义的 template，而不会 import 目标文件 import 的 template。</p><p>如：C import B，B import A，在C中可以使用B定义的template，在B中可以使用A定义的template，但是C不能使用A定义的template。</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- test.wxml --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">template</span> <span class="attr">name</span>=<span class="string">&quot;A&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">text</span>&gt;</span> A template <span class="tag">&lt;/<span class="name">text</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">import</span> <span class="attr">src</span>=<span class="string">&quot;../test/test.wxml&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">template</span> <span class="attr">name</span>=<span class="string">&quot;B&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">text</span>&gt;</span> B template <span class="tag">&lt;/<span class="name">text</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- demo.wxml --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">import</span> <span class="attr">src</span>=<span class="string">&quot;../index/index.wxml&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">template</span> <span class="attr">is</span>=<span class="string">&quot;A&quot;</span>/&gt;</span>  <span class="comment">&lt;!-- Error! Can not use tempalte when not import A. --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">template</span> <span class="attr">is</span>=<span class="string">&quot;B&quot;</span>/&gt;</span></span><br></pre></td></tr></table></figure><h3 id="include"><a href="#include" class="headerlink" title="include"></a>include</h3><p><code>include</code> 可以将目标文件<strong>除了</strong> <code>&lt;template/&gt;</code> <code>&lt;wxs/&gt;</code> 外的整个代码引入，相当于是拷贝到 <code>include</code> 位置，如：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- index.wxml --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">include</span> <span class="attr">src</span>=<span class="string">&quot;header.wxml&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">view</span>&gt;</span> body <span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">include</span> <span class="attr">src</span>=<span class="string">&quot;footer.wxml&quot;</span>/&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- header.wxml --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">view</span>&gt;</span> header <span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- footer.wxml --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">view</span>&gt;</span> footer <span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
          <category> 小程序开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 小程序 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>生命周期</title>
      <link href="/Lutianyao/blog/2023/02/11/02.%E5%89%8D%E7%AB%AF/03.%E5%B0%8F%E7%A8%8B%E5%BA%8F%E5%BC%80%E5%8F%91/04.%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F/"/>
      <url>/Lutianyao/blog/2023/02/11/02.%E5%89%8D%E7%AB%AF/03.%E5%B0%8F%E7%A8%8B%E5%BA%8F%E5%BC%80%E5%8F%91/04.%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F/</url>
      
        <content type="html"><![CDATA[<h1 id="生命周期"><a href="#生命周期" class="headerlink" title="生命周期"></a>生命周期</h1><h2 id="什么是生命周期"><a href="#什么是生命周期" class="headerlink" title="什么是生命周期"></a>什么是生命周期</h2><p>​生命周期是指一个小程序从创建到销毁的一个过程。小程序的生命周期有两种；分别是应用生命周期，页面的生命周期。有时会把应用的生命周期和页面的生命周期混淆为一起，这两个其实应该是不同却又相互关联的生命周期</p><h3 id="小程序启动流程"><a href="#小程序启动流程" class="headerlink" title="小程序启动流程"></a>小程序启动流程</h3><p><img src="/Lutianyao/blog/img/WeChat07.png" alt="img"></p><h3 id="应用的生命周期函数"><a href="#应用的生命周期函数" class="headerlink" title="应用的生命周期函数"></a>应用的生命周期函数</h3><p>​首先小程序的生命周期函数是在<code>app.js</code>里面调用的，<code>APP(Object)</code>函数用来注册一个小程序。接受一个<code>Object</code>参数，指定其小程序的生命周期回调；在注册实例时，通常可以做以下事情：</p><p>​1.判断小程序的进入场景</p><p>​2.监听生命周期函数，在生命周期中执行对应的业务逻辑，比如在某个生命周期函数中获取微信用户的信息。</p><p>​3.因为App()实例只有一个，并且时全局共享的(单例对象)。所以可以将一些共享数据放在其中的globalData节点中</p><p><a href="https://developers.weixin.qq.com/miniprogram/dev/reference/api/App.html"><strong>更多应用生命周期函数</strong></a></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="title class_">App</span>(&#123;</span><br><span class="line">    <span class="comment">// 应用第一次启动就会触发事件</span></span><br><span class="line"><span class="attr">onLaunch</span>:<span class="keyword">function</span>(<span class="params">options</span>)&#123;</span><br><span class="line">        <span class="comment">// 在应用第一次启动的时候 获取个人信息</span></span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;onLaunch&quot;</span>)</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(options)</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="comment">// 应用被用户看到</span></span><br><span class="line">    <span class="attr">onShow</span>:<span class="keyword">function</span>(<span class="params"></span>)&#123;</span><br><span class="line">        <span class="comment">// 小程序启动，或从后台进入前台显示时触发</span></span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;onShow&quot;</span>)</span><br><span class="line">    &#125;，</span><br><span class="line">    <span class="comment">// 应用被隐藏</span></span><br><span class="line">    <span class="attr">onHide</span>:<span class="keyword">function</span>(<span class="params"></span>)&#123;</span><br><span class="line">    <span class="comment">// 小程序被切换到后台（包括微信自身被切换到后台或者小程序暂时被切换到后台）</span></span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;onHide&quot;</span>)</span><br><span class="line">  &#125;,</span><br><span class="line">    <span class="comment">// 应用的代码发生了错误的时候就会触发</span></span><br><span class="line">    <span class="attr">onError</span>:<span class="keyword">function</span>(<span class="params">msg</span>)&#123;</span><br><span class="line">        <span class="comment">// 在应用发生代码报错的时候,收集用户的错误信息,通过异步请求将错误的信息发送到后台</span></span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(msg)</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="comment">// 页面找不到就会触发 应用第一次启动的时候,如果找不到第一个入口页面,才会触发。如果在小程序里面使用wx.navigateTo等路由Api进行页面跳转，如果页面不存在只会报错，并不会触发onPageNotFound</span></span><br><span class="line">    <span class="attr">onPageNotFound</span>:<span class="keyword">function</span>(<span class="params">res</span>)&#123;</span><br><span class="line">    wx.<span class="title function_">redirectTo</span>(&#123;</span><br><span class="line">      <span class="attr">url</span>: <span class="string">&#x27;pages/...&#x27;</span>,</span><br><span class="line">    &#125;)  <span class="comment">// 如果是 tabbar 页面，请使用 wx.switchTab</span></span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;onPageNotFound&quot;</span>)</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(res)</span><br><span class="line">    &#125;,</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h3 id="页面的生命周期函数"><a href="#页面的生命周期函数" class="headerlink" title="页面的生命周期函数"></a>页面的生命周期函数</h3><p>注册小程序中的一个页面。接受一个 <code>Object</code> 类型参数，其指定页面的初始数据、生命周期回调、事件处理函数等。</p><p><a href="https://developers.weixin.qq.com/miniprogram/dev/reference/api/Page.html"><strong>更多页面的生命周期的函数</strong></a></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br></pre></td><td class="code"><pre><span class="line"><span class="title class_">Page</span>(&#123;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">    * 生命周期函数--监听页面加载</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">   <span class="attr">onLoad</span>: <span class="keyword">function</span> (<span class="params">options</span>) &#123;</span><br><span class="line">        <span class="comment">// 发送异步请求 初始化页面数据</span></span><br><span class="line">          <span class="variable language_">console</span>.<span class="title function_">log</span>(options);</span><br><span class="line">          <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="number">111</span>)</span><br><span class="line">   &#125;,</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">    * 生命周期函数--监听页面显示</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">   <span class="attr">onShow</span>: <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">     <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;onShow&quot;</span>);</span><br><span class="line">   &#125;,</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">    * 生命周期函数--监听页面初次渲染完成</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">   <span class="attr">onReady</span>: <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">     <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;onReady&quot;</span>);</span><br><span class="line">   &#125;,</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">    * 生命周期函数--监听页面隐藏</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">   <span class="attr">onHide</span>: <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">     <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;onHide&quot;</span>);</span><br><span class="line">   &#125;,</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">    * 生命周期函数--监听页面卸载</span></span><br><span class="line"><span class="comment">    * 页面被关闭的时候，与上一个同理，如果是页面跳转，并且被关闭就算作卸载，会被触发</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">   <span class="attr">onUnload</span>: <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">     <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;onUnload&quot;</span>);</span><br><span class="line">   &#125;,</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">    * 页面相关事件处理函数--监听用户下拉动作</span></span><br><span class="line"><span class="comment">    * 需要开启页面下拉功能  &quot;enablePullDownRefresh&quot;: true</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">   <span class="attr">onPullDownRefresh</span>: <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">     <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;onPullDownRefresh&quot;</span>);</span><br><span class="line">   &#125;,</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">    * 页面上拉触底事件的处理函数</span></span><br><span class="line"><span class="comment">    * 页面高度不够就不存在这个问题</span></span><br><span class="line"><span class="comment">    * 可用于上拉加载下一页数据</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">   <span class="attr">onReachBottom</span>: <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">     <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;onReachBottom&quot;</span>);</span><br><span class="line">   &#125;,</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">    * 用户点击右上角转发</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">   <span class="attr">onShareAppMessage</span>: <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">     <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;onShareAppMessage&quot;</span>);</span><br><span class="line">   &#125;,</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">    * 用户点击右上角转发到朋友圈</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">   <span class="attr">onShareTimeline</span>: <span class="keyword">function</span>(<span class="params"></span>)&#123;</span><br><span class="line">     <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;onShareTimeline&quot;</span>)</span><br><span class="line">   &#125;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">    * 用户点击右上角收藏</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">   <span class="attr">onAddToFavorites</span>:<span class="keyword">function</span>(<span class="params"></span>)&#123;</span><br><span class="line">     <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;onAddToFavorites&quot;</span>)</span><br><span class="line">   &#125;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">    * 页面滚动时触发</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">   <span class="attr">onPageScroll</span>: <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">     <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;onPageScroll&quot;</span>);</span><br><span class="line">   &#125;,</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">    * 页面尺寸发生改变时触发</span></span><br><span class="line"><span class="comment">    * 手机页面一般不会改变，大部分情况是手机发生了横屏竖屏切换时触发</span></span><br><span class="line"><span class="comment">    * 横屏切换需要添加&quot;pageOrientation&quot;:&quot;auto&quot;配置</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">   <span class="attr">onResize</span>: <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">     <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;onResize&quot;</span>);</span><br><span class="line">   &#125;,</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">   * 当前是 tab ⻚时，点击 tab 时触发</span></span><br><span class="line"><span class="comment">   * 只存在于tabbar页面上 即当前页面必须是tabbar页面，同时点击自己的tabitem才会触发</span></span><br><span class="line"><span class="comment">   */</span></span><br><span class="line">   <span class="attr">onTabItemTap</span>: <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">     <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;onTabItemTap&quot;</span>);</span><br><span class="line">   &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
          <category> 小程序开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 小程序 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>小程序配置</title>
      <link href="/Lutianyao/blog/2023/02/11/02.%E5%89%8D%E7%AB%AF/03.%E5%B0%8F%E7%A8%8B%E5%BA%8F%E5%BC%80%E5%8F%91/03.%E5%B0%8F%E7%A8%8B%E5%BA%8F%E9%85%8D%E7%BD%AE/"/>
      <url>/Lutianyao/blog/2023/02/11/02.%E5%89%8D%E7%AB%AF/03.%E5%B0%8F%E7%A8%8B%E5%BA%8F%E5%BC%80%E5%8F%91/03.%E5%B0%8F%E7%A8%8B%E5%BA%8F%E9%85%8D%E7%BD%AE/</url>
      
        <content type="html"><![CDATA[<h1 id="小程序配置"><a href="#小程序配置" class="headerlink" title="小程序配置"></a>小程序配置</h1><p>​小程序配置可以分为三种，分别是：全局配置，页面配置，sitemap配置</p><h3 id="全局配置"><a href="#全局配置" class="headerlink" title="全局配置"></a>全局配置</h3><p>​项目根目录下的<strong>app.json</strong>文件用来对微信到小程序进行全局配置。文件内容为一个JSON对象。app.json文件结构如下</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 注意：在app.json文件不能写注释，这是刚创建的小程序项目的app.json文件的结构</span></span><br><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;pages&quot;</span><span class="punctuation">:</span><span class="punctuation">[</span></span><br><span class="line">    <span class="string">&quot;pages/index/index&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="string">&quot;pages/logs/logs&quot;</span></span><br><span class="line">  <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;window&quot;</span><span class="punctuation">:</span><span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;backgroundTextStyle&quot;</span><span class="punctuation">:</span><span class="string">&quot;light&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;navigationBarBackgroundColor&quot;</span><span class="punctuation">:</span> <span class="string">&quot;#fff&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;navigationBarTitleText&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Weixin&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;navigationBarTextStyle&quot;</span><span class="punctuation">:</span><span class="string">&quot;black&quot;</span></span><br><span class="line">  <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;style&quot;</span><span class="punctuation">:</span> <span class="string">&quot;v2&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;sitemapLocation&quot;</span><span class="punctuation">:</span> <span class="string">&quot;sitemap.json&quot;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><h5 id="pages"><a href="#pages" class="headerlink" title="pages"></a>pages</h5><p>​在app.json文件的pages节点上新建或减少页面,如果要新建页面，可以在pages节点上新增页面会比视图操作更方便，在[]里面写”pages&#x2F;要创建文件夹名字&#x2F;要创建文件名字”。如果新建的页面放在第一个位置，它创建文件并且编译，pages 数组中第一个页面路径，就是小程序项目的默认首页，修改 pages 数组中路径的顺序（放在第一位的就会默认为首页），即可修改小程序的默认首页所以模拟器也显示该页面。</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line"><span class="attr">&quot;pages&quot;</span><span class="punctuation">:</span><span class="punctuation">[</span></span><br><span class="line">        <span class="string">&quot;pages/要创建文件夹名字/要创建文件名字&quot;</span><span class="punctuation">,</span></span><br><span class="line"><span class="string">&quot;pages/index/index&quot;</span><span class="punctuation">,</span></span><br><span class="line"><span class="string">&quot;pages/test/test&quot;</span></span><br><span class="line"><span class="punctuation">]</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><h5 id="window"><a href="#window" class="headerlink" title="window"></a>window</h5><p>​用于设置小程序的状态栏、导航条、标题、窗口背景色。</p><h6 id="样式属性"><a href="#样式属性" class="headerlink" title="样式属性"></a>样式属性</h6><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;window&quot;</span><span class="punctuation">:</span><span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;navigationBarBackgroundColor&quot;</span><span class="punctuation">:</span> <span class="string">&quot;#ffffff&quot;</span><span class="punctuation">,</span><span class="comment">// 导航栏背景颜色，</span></span><br><span class="line">        <span class="attr">&quot;navigationBarTextStyle&quot;</span><span class="punctuation">:</span> <span class="string">&quot;black&quot;</span><span class="punctuation">,</span><span class="comment">// 导航栏标题颜色，仅支持 `black` / `white`</span></span><br><span class="line">    <span class="attr">&quot;navigationBarTitleText&quot;</span><span class="punctuation">:</span> <span class="string">&quot;微信接口功能演示&quot;</span><span class="punctuation">,</span><span class="comment">// 导航栏标题文字内容</span></span><br><span class="line">    <span class="attr">&quot;backgroundColor&quot;</span><span class="punctuation">:</span> <span class="string">&quot;#eeeeee&quot;</span><span class="punctuation">,</span><span class="comment">// 窗口的背景色</span></span><br><span class="line">    <span class="attr">&quot;backgroundTextStyle&quot;</span><span class="punctuation">:</span> <span class="string">&quot;light&quot;</span> <span class="comment">// 下拉loading的样式</span></span><br><span class="line">    <span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 注 1：HexColor（十六进制颜色值），如&quot;#ff00ff&quot;</span></span><br><span class="line"><span class="comment">// 注 2：关于navigationStyle</span></span><br><span class="line"><span class="comment">// iOS/Android 客户端 7.0.0 以下版本，navigationStyle 只在 app.json 中生效。</span></span><br><span class="line"><span class="comment">// iOS/Android 客户端 6.7.2 版本开始，navigationStyle: custom 对 web-view 组件无效</span></span><br><span class="line"><span class="comment">// 开启 custom 后，低版本客户端需要做好兼容。开发者工具基础库版本切到 1.7.0（不代表最低版本，只供调试用）可方便切到旧视觉</span></span><br><span class="line"><span class="comment">// Windows 客户端 3.0 及以上版本，为了给用户提供更符合桌面软件的使用体验，统一了小程序窗口的导航栏，navigationStyle: custom 不再生效</span></span><br></pre></td></tr></table></figure><h5 id="tabBar"><a href="#tabBar" class="headerlink" title="tabBar"></a>tabBar</h5><p>​如果小程序是一个多 tab 应用（客户端窗口的底部或顶部有 tab 栏可以切换页面），可以通过 tabBar 配置项指定 tab 栏的表现，以及 tab 切换时显示的对应页面。</p><p>其中list是一个数组，<strong>只能配置最少 2 个、最多 5 个 tab</strong>。tab 按数组的顺序排序，每个项都是一个对象，其属性值如下：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line"><span class="attr">&quot;tabBar&quot;</span><span class="punctuation">:</span><span class="punctuation">&#123;</span></span><br><span class="line"><span class="attr">&quot;color&quot;</span><span class="punctuation">:</span> <span class="string">&quot;#a9b7b7&quot;</span><span class="punctuation">,</span></span><br><span class="line"><span class="attr">&quot;selectedColor&quot;</span><span class="punctuation">:</span> <span class="string">&quot;#11cd6e&quot;</span><span class="punctuation">,</span></span><br><span class="line"><span class="attr">&quot;borderStyle&quot;</span><span class="punctuation">:</span> <span class="string">&quot;black&quot;</span><span class="punctuation">,</span></span><br><span class="line"><span class="attr">&quot;list&quot;</span><span class="punctuation">:</span><span class="punctuation">[</span></span><br><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line"><span class="attr">&quot;pagePath&quot;</span><span class="punctuation">:</span> <span class="string">&quot;pages/index/index&quot;</span><span class="punctuation">,</span></span><br><span class="line"><span class="attr">&quot;text&quot;</span><span class="punctuation">:</span> <span class="string">&quot;首页&quot;</span><span class="punctuation">,</span></span><br><span class="line"><span class="attr">&quot;iconPath&quot;</span><span class="punctuation">:</span> <span class="string">&quot;images/tab/home.png&quot;</span><span class="punctuation">,</span></span><br><span class="line">     <span class="attr">&quot;selectedIconPath&quot;</span><span class="punctuation">:</span> <span class="string">&quot;/images/tab/home_1.png&quot;</span></span><br><span class="line"><span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line"><span class="attr">&quot;pagePath&quot;</span><span class="punctuation">:</span> <span class="string">&quot;pages/new/new&quot;</span><span class="punctuation">,</span></span><br><span class="line"><span class="attr">&quot;text&quot;</span><span class="punctuation">:</span> <span class="string">&quot;新闻&quot;</span><span class="punctuation">,</span></span><br><span class="line"><span class="attr">&quot;iconPath&quot;</span><span class="punctuation">:</span> <span class="string">&quot;images/tab/new.png&quot;</span><span class="punctuation">,</span></span><br><span class="line">     <span class="attr">&quot;selectedIconPath&quot;</span><span class="punctuation">:</span> <span class="string">&quot;/images/tab/new_1.png&quot;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">]</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><h3 id="页面配置"><a href="#页面配置" class="headerlink" title="页面配置"></a>页面配置</h3><p>​每一个小程序页面也可以使用 .json 文件来对本页面的窗口表现进行配置。页面中配置项在当前页面会覆盖 app.json 的 window 中相同的配置项。文件内容为一个 JSON 对象，有以下属性</p><h5 id="配置项"><a href="#配置项" class="headerlink" title="配置项"></a>配置项</h5><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;navigationBarBackgroundColor&quot;</span><span class="punctuation">:</span> <span class="string">&quot;#ff4001&quot;</span><span class="punctuation">,</span> <span class="comment">//导航栏背景颜色</span></span><br><span class="line">  <span class="attr">&quot;navigationBarTextStyle&quot;</span><span class="punctuation">:</span> <span class="string">&quot;white&quot;</span><span class="punctuation">,</span> <span class="comment">//导航栏标题颜色，仅支持 black / white</span></span><br><span class="line">  <span class="attr">&quot;navigationBarTitleText&quot;</span><span class="punctuation">:</span> <span class="string">&quot;购物车&quot;</span><span class="punctuation">,</span> <span class="comment">//导航栏标题文字内容</span></span><br><span class="line">  <span class="attr">&quot;backgroundColorTop&quot;</span><span class="punctuation">:</span> <span class="string">&quot;#efefef&quot;</span><span class="punctuation">,</span> <span class="comment">//窗口的背景色</span></span><br><span class="line">  <span class="attr">&quot;backgroundTextStyle&quot;</span><span class="punctuation">:</span> <span class="string">&quot;light&quot;</span><span class="punctuation">,</span> <span class="comment">//下拉 loading 的样式，仅支持 dark / light</span></span><br><span class="line">  <span class="attr">&quot;enablePullDownRefresh&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span><span class="comment">//是否开启当前页面下拉刷新。</span></span><br><span class="line">  <span class="attr">&quot;onReachBottomDistance&quot;</span><span class="punctuation">:</span> <span class="number">50</span><span class="punctuation">,</span> <span class="comment">//页面上拉触底事件触发时距页面底部距离，单位为px。</span></span><br><span class="line">  <span class="attr">&quot;disableScroll&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span> <span class="comment">//设置为 true 则页面整体不能上下滚动。只在页面配置中有效，无法在 app.json 中设置</span></span><br><span class="line">  <span class="attr">&quot;usingComponents&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span> <span class="comment">//页面自定义组件配置</span></span><br><span class="line">    <span class="attr">&quot;prolist&quot;</span><span class="punctuation">:</span> <span class="string">&quot;/components/prolist/prolist&quot;</span> <span class="comment">//组件路径</span></span><br><span class="line">  <span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><h3 id="sitemap-配置"><a href="#sitemap-配置" class="headerlink" title="sitemap 配置"></a>sitemap 配置</h3><p>小程序根目录下的 <code>sitemap.json</code> 文件用于配置小程序及其页面是否允许被微信索引，文件内容为一个 JSON 对象，如果没有 <code>sitemap.json</code> ，则默认为所有页面都允许被索引。</p><p><a href="https://developers.weixin.qq.com/miniprogram/dev/reference/configuration/sitemap.html"><strong>小程序官方sitemap.json配置</strong></a></p><h3 id="小程序官方文档"><a href="#小程序官方文档" class="headerlink" title="小程序官方文档"></a><a href="https://developers.weixin.qq.com/miniprogram/dev/reference/configuration/app.html">小程序官方文档</a></h3>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
          <category> 小程序开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 小程序 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>目录结构</title>
      <link href="/Lutianyao/blog/2023/02/11/02.%E5%89%8D%E7%AB%AF/03.%E5%B0%8F%E7%A8%8B%E5%BA%8F%E5%BC%80%E5%8F%91/02.%E7%9B%AE%E5%BD%95%E7%BB%93%E6%9E%84/"/>
      <url>/Lutianyao/blog/2023/02/11/02.%E5%89%8D%E7%AB%AF/03.%E5%B0%8F%E7%A8%8B%E5%BA%8F%E5%BC%80%E5%8F%91/02.%E7%9B%AE%E5%BD%95%E7%BB%93%E6%9E%84/</url>
      
        <content type="html"><![CDATA[<h1 id="目录结构"><a href="#目录结构" class="headerlink" title="目录结构"></a>目录结构</h1><p>微信小程序的目录结构可以分为三个部分：框架全局文件，框架页面文件和工具类文件，结构如下</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">|--pages···················[目录] 存放所有的小程序页面</span><br><span class="line"> |--index··················[目录] index页面</span><br><span class="line">   |--index.js·············[文件] index页面的逻辑</span><br><span class="line">   |--index.json···········[文件] index页面的配置</span><br><span class="line">   |--index.wxml···········[文件] index页面的结构</span><br><span class="line">   |--index.wxss···········[文件] index页面的样式</span><br><span class="line"> |--logs···················[目录] logs页面</span><br><span class="line">   |--logs.js··············[文件] logs页面的逻辑</span><br><span class="line">   |--logs.json············[文件] logs页面的配置</span><br><span class="line">   |--logs.wxml············[文件] logs页面的结构</span><br><span class="line">   |--logs.wxss············[文件] logs页面的样式</span><br><span class="line">|--utils···················[目录] 存放小程序中用到的工具函数</span><br><span class="line">|--app.js··················[文件] 小程序的全局逻辑</span><br><span class="line">|--app.json················[文件] 小程序的全局公共配置</span><br><span class="line">|--app.wxss················[文件] 小程序的全局公共样式</span><br><span class="line">|--project.config.json·····[文件]开发工具文件</span><br><span class="line">|--sitemap.json············[文件] 索引配置</span><br></pre></td></tr></table></figure><h3 id="框架全局文件"><a href="#框架全局文件" class="headerlink" title="框架全局文件"></a>框架全局文件</h3><p>​一个小程序的主体部分由3个文件组成，作为全局文件，必须放在项目的根目录中，框架全局文件包括3个文件；app.js小程序逻辑(定义全</p><p>局数据以及定义函数文件)，app.json小程序公共设置，app.wxss小程序公共样式表。它们对所有页面都有效。</p><p><strong>1.app.js小程序逻辑</strong></p><p>​整个微信小程序相关的全局js，这里有监听整个小程序的生命周期函数和全局变量；</p><p><strong>2.app.json小程序公共设置</strong></p><p>​是对整个小程序的静态全局配置，我们可以在这个文件中配置小程序是由哪些页面组成（路由），配置小程序的窗口背景色、配置导航条样式，配置默认标题，可以配置整个项目的样式，超时时间，加载的插件等等；(注意该文件不可添加任何注释)；</p><p><strong>3.app.wxss文件小程序公共样式表</strong></p><p>​整个小程序的样式文件，我个人认为这个文件就是设置整个项目的css文件。针对每个页面的css文件的内容不同，加载到对应页面的css样式时，当前页面的wxss文件会覆盖app.wxss文件（跟普通的css样式的覆盖规则类似）。</p><p><strong>4.project.config.json 开发工具文件</strong></p><p>​这个其实是每个开发者工具生成的项目都有的，但和项目内容实际没有特别大关联，主要是记录相关工具的配置的，在工具上做的任何配置都会写入到这个文件，当重新安装工具或者换电脑工作时，只要载入同一个项目的代码包，开发者工具就自动会帮你恢复到当时你开发项目时的个性化配置，其中会包括编辑器的颜色、代码上传时自动压缩等等一系列选项。</p><p><strong>5.sitemap.json 索引文件</strong></p><p>​这个可以配置是否允许被微信索引，具体看微信官方文档-sitemap 配置</p><h3 id="工具类文件"><a href="#工具类文件" class="headerlink" title="工具类文件"></a>工具类文件</h3><p><strong>utils目录</strong></p><p>​这里面存的都是一些公用的js，就当作web后端项目的工具类就好啦，提供公共方法减少冗余和维护难度的；</p><h3 id="框架页面文件"><a href="#框架页面文件" class="headerlink" title="框架页面文件"></a>框架页面文件</h3><p>​这个目录下放的其实就是一个个的微信端的页面了其中的index文件夹、logs文件夹其实都是单独的页面；小程序一个页面由四个文件组成，分别是：</p><table><thead><tr><th>文件类型</th><th>必需</th><th>作用</th></tr></thead><tbody><tr><td>js</td><td>是</td><td>页面逻辑</td></tr><tr><td>wxml</td><td>是</td><td>页面结构</td></tr><tr><td>json</td><td>否</td><td>页面配置</td></tr><tr><td>wxss</td><td>否</td><td>页面样式表</td></tr></tbody></table><p><strong>注意：为了方便开发者减少配置项，描述页面的四个文件必须具有相同的路径与文件名。</strong></p><h3 id="允许上传的文件"><a href="#允许上传的文件" class="headerlink" title="允许上传的文件"></a>允许上传的文件</h3><p>在项目目录中，以下文件会经过编译，因此上传之后无法直接访问到：*.js、app.json、*.wxml、*.wxss（其中 wxml 和 wxss 文件仅针对在 app.json 中配置了的页面）。除此之外，只有后缀名在白名单内的文件可以被上传，不在白名单列表内文件在开发工具能被访问到，但无法被上传。具体白名单列表如下：</p><ol><li>wxs</li><li>png</li><li>jpg</li><li>jpeg</li><li>gif</li><li>svg</li><li>json</li><li>cer</li><li>mp3</li><li>aac</li><li>m4a</li><li>mp4</li><li>wav</li><li>ogg</li><li>silk</li><li>wasm</li><li>br</li></ol>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
          <category> 小程序开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 小程序 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>快速入门</title>
      <link href="/Lutianyao/blog/2023/02/11/02.%E5%89%8D%E7%AB%AF/03.%E5%B0%8F%E7%A8%8B%E5%BA%8F%E5%BC%80%E5%8F%91/01.%E5%BF%AB%E9%80%9F%E5%85%A5%E9%97%A8/"/>
      <url>/Lutianyao/blog/2023/02/11/02.%E5%89%8D%E7%AB%AF/03.%E5%B0%8F%E7%A8%8B%E5%BA%8F%E5%BC%80%E5%8F%91/01.%E5%BF%AB%E9%80%9F%E5%85%A5%E9%97%A8/</url>
      
        <content type="html"><![CDATA[<h1 id="快速入门"><a href="#快速入门" class="headerlink" title="快速入门"></a>快速入门</h1><h3 id="什么是微信小程序"><a href="#什么是微信小程序" class="headerlink" title="什么是微信小程序"></a>什么是微信小程序</h3><p>微信小程序，简称为<strong>小程序</strong>，英文名是<strong>Mini Program</strong>，是一种不需要下载安装即可使用的应用，它实现了应用“触手可及”的梦想，用户扫一扫或搜一下即可打开应用。用户不用关心是否安装太多应用的问题。应用将无处不在，随时可用，但又无需安装卸载。对于开发者而言，小程序开发门槛相对较低，难度不及APP，能够满足简单的基础应用，适合生活服务类线下商铺以及非刚需低频应用的转换。对于用户来说，能够节约使用时间成本和手机内存空间；对于开发者来说也能节约开发和推广成本。</p><p>微信小程序是运用最广、知名度最高的小程序，往往大家理解的小程序就是微信小程序，微信小程序也是最早公测的小程序，2017年1月9日，微信团队宣布微信小程序正式上线。</p><p>现在比较流行的有微信小程序、QQ小程序、支付宝小程序、百度小程序等。</p><h3 id="小程序设计局限性"><a href="#小程序设计局限性" class="headerlink" title="小程序设计局限性"></a>小程序设计局限性</h3><ul><li><p>数量：每个应用最多能同时打开5个页面（包含页面跳转）</p></li><li><p>大小：小程序支持不超过8M的源码文件（分包加载，单个分包不超过2M）</p></li><li><p>逻辑：过于复杂逻辑存在不可控的异常问题</p></li></ul><h3 id="申请小程序"><a href="#申请小程序" class="headerlink" title="申请小程序"></a>申请小程序</h3><p>微信小程序的注册地址和微信公众号是一样的，在微信公众平台 <a href="https://mp.weixin.qq.com/">https://mp.weixin.qq.com/</a></p><p>主体类型为企业、政府、媒体、其他组织或个人的开发者均可以申请小程序账号</p><h3 id="开发"><a href="#开发" class="headerlink" title="开发"></a>开发</h3><p>进入小程序后台</p><p><strong>在开发中的开发设置，记录自己的AppID，还有AppSecret也记录，最好记录在文档或者不易丢失的地方，</strong></p><p>然后下载小程序开发者工具</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">稳定版：使用较多，基本稳定</span><br><span class="line">预发布版：通过微信内部测试，稳定性尚可</span><br><span class="line">开发版：缺陷修复更新快，稳定性差</span><br></pre></td></tr></table></figure><p><img src="/Lutianyao/blog/img/WeChat06.png" alt="img"></p><p><strong>下载地址</strong>： <a href="https://developers.weixin.qq.com/miniprogram/dev/devtools/download.html">https://developers.weixin.qq.com/miniprogram/dev/devtools/download.html</a></p><p><strong>打开之后使用自己的微信扫描登录</strong></p><p>​<img src="/Lutianyao/blog/img/WeChat02.png" alt="img"></p><p><strong>登录后跳出一个项目管理的窗口，可以新增项目和导入项目，删除项目</strong></p><p>​<img src="/Lutianyao/blog/img/WeChat03.png" alt="img"></p><p><strong>新建一个项目</strong></p><p>​<img src="/Lutianyao/blog/img/WeChat04.png" alt="img"></p><p><strong>新建项目后会打开新的窗口</strong></p><p><img src="/Lutianyao/blog/img/WeChat05.png" alt="img"></p><p><strong>编译预览</strong></p><p>点击工具上的编译按钮，可以在工具的左侧模拟器界面看到这个小程序的表现，也可以点击预览按钮，通过微信的扫一扫在手机上体验你的第一个小程序。OK，你已经成功创建了你的第一个小程序，并且在微信客户端上体验到它流畅的表现。</p><p><strong>注意</strong></p><p>本地开发:详情-&gt;不检验合法域名…. 前面选项打勾,那么在本地开发的时候就不需要SSL证书的域名,但是配置到小程序后台就必须要配置域名的SSL证书</p>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
          <category> 小程序开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 小程序 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>开发插件</title>
      <link href="/Lutianyao/blog/2023/02/11/02.%E5%89%8D%E7%AB%AF/01.%E9%A1%B9%E7%9B%AE%E6%90%AD%E5%BB%BA/06.%E5%BC%80%E5%8F%91%E6%8F%92%E4%BB%B6/"/>
      <url>/Lutianyao/blog/2023/02/11/02.%E5%89%8D%E7%AB%AF/01.%E9%A1%B9%E7%9B%AE%E6%90%AD%E5%BB%BA/06.%E5%BC%80%E5%8F%91%E6%8F%92%E4%BB%B6/</url>
      
        <content type="html"><![CDATA[<h1 id="开发插件"><a href="#开发插件" class="headerlink" title="开发插件"></a>开发插件</h1><h3 id="开发自定义插件"><a href="#开发自定义插件" class="headerlink" title="开发自定义插件"></a>开发自定义插件</h3><blockquote><p>src&#x2F;services&#x2F;demo.js (新建自定义插件)</p></blockquote><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 插件是自包含的代码，通常向 Vue 添加全局级功能。</span></span><br><span class="line"><span class="comment">// 它可以是公开 install() 方法的 object，也可以是 function</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">  <span class="title function_">install</span>(<span class="params">app, options</span>)</span><br><span class="line">  &#123;</span><br><span class="line">     <span class="comment">//定义全局</span></span><br><span class="line">     app.<span class="property">config</span>.<span class="property">globalProperties</span>.<span class="property">$demo</span> = <span class="function">() =&gt;</span> &#123;</span><br><span class="line">       <span class="keyword">return</span> <span class="string">&#x27;自定义插件&#x27;</span>;</span><br><span class="line">     &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>src&#x2F;main.js (全局挂载)</p></blockquote><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//加载自定义插件</span></span><br><span class="line"><span class="keyword">import</span> demo <span class="keyword">from</span> <span class="string">&#x27;./services/demo&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> app = <span class="title function_">createApp</span>(<span class="title class_">App</span>)</span><br><span class="line">    .<span class="title function_">use</span>(demo)</span><br><span class="line">    .<span class="title function_">mount</span>(<span class="string">&#x27;#app&#x27;</span>)</span><br></pre></td></tr></table></figure><blockquote><p>调用</p></blockquote><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> </span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">async</span> <span class="title function_">created</span>(<span class="params"></span>)</span><br><span class="line">&#123;</span><br><span class="line">  <span class="comment">//调用自定义插件</span></span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="variable language_">this</span>.$demo())</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="vue3-cookies"><a href="#vue3-cookies" class="headerlink" title="vue3-cookies"></a>vue3-cookies</h3><blockquote><p>Vue中操作Cookie插件：<a href="https://www.npmjs.com/package/vue3-cookies">https://www.npmjs.com/package/vue3-cookies</a></p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">npm install vue3-cookies --save</span><br><span class="line"></span><br><span class="line">yarn add vue3-cookies -S</span><br></pre></td></tr></table></figure><blockquote><p>挂载：src&#x2F;main.js</p></blockquote><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="title class_">VueCookies</span> <span class="keyword">from</span> <span class="string">&#x27;vue3-cookies&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> app = <span class="title function_">createApp</span>(<span class="title class_">App</span>)</span><br><span class="line">    .<span class="title function_">use</span>(<span class="title class_">VueCookies</span>)</span><br><span class="line">    .<span class="title function_">mount</span>(<span class="string">&#x27;#app&#x27;</span>)</span><br></pre></td></tr></table></figure><blockquote><p>使用</p></blockquote><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">    <span class="keyword">async</span> <span class="title function_">created</span>(<span class="params"></span>)</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="comment">//设置cookie</span></span><br><span class="line">      <span class="variable language_">this</span>.<span class="property">$cookies</span>.<span class="title function_">set</span>(<span class="string">&#x27;LoginUser&#x27;</span>, <span class="string">&#x27;用户信息&#x27;</span>)</span><br><span class="line"></span><br><span class="line">      <span class="comment">//获取cookie</span></span><br><span class="line">      <span class="variable language_">this</span>.<span class="property">$cookies</span>.<span class="title function_">get</span>(<span class="string">&#x27;LoginUser&#x27;</span>)</span><br><span class="line"></span><br><span class="line">      <span class="comment">//删除</span></span><br><span class="line">      <span class="variable language_">this</span>.<span class="property">$cookies</span>.<span class="title function_">remove</span>(<span class="string">&#x27;LoginUser&#x27;</span>)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
          <category> 项目搭建 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> vue </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>UI框架引入</title>
      <link href="/Lutianyao/blog/2023/02/11/02.%E5%89%8D%E7%AB%AF/01.%E9%A1%B9%E7%9B%AE%E6%90%AD%E5%BB%BA/05.UI%E6%A1%86%E6%9E%B6%E5%BC%95%E5%85%A5/"/>
      <url>/Lutianyao/blog/2023/02/11/02.%E5%89%8D%E7%AB%AF/01.%E9%A1%B9%E7%9B%AE%E6%90%AD%E5%BB%BA/05.UI%E6%A1%86%E6%9E%B6%E5%BC%95%E5%85%A5/</url>
      
        <content type="html"><![CDATA[<h1 id="UI框架引入"><a href="#UI框架引入" class="headerlink" title="UI框架引入"></a>UI框架引入</h1><h3 id="Vant移动端UI框架"><a href="#Vant移动端UI框架" class="headerlink" title="Vant移动端UI框架"></a>Vant移动端UI框架</h3><p><a href="https://vant-contrib.gitee.io/vant/v3/#/zh-CN">https://vant-contrib.gitee.io/vant/v3/#/zh-CN</a></p><h3 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h3><blockquote><p>使用 NPM 或者 Yarn 安装</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"># Vue 2 项目，安装 Vant 2：</span><br><span class="line">npm i vant -S</span><br><span class="line"></span><br><span class="line"># Vue 3 项目，安装 Vant 3：</span><br><span class="line">npm i vant@next -S</span><br></pre></td></tr></table></figure><h3 id="导入所有组件"><a href="#导入所有组件" class="headerlink" title="导入所有组件"></a>导入所有组件</h3><blockquote><p>src&#x2F;main.js</p></blockquote><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; createApp &#125; <span class="keyword">from</span> <span class="string">&#x27;vue&#x27;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">Vant</span> <span class="keyword">from</span> <span class="string">&#x27;vant&#x27;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="string">&#x27;vant/lib/index.css&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> app = <span class="title function_">createApp</span>();</span><br><span class="line">app.<span class="title function_">use</span>(<span class="title class_">Vant</span>);</span><br></pre></td></tr></table></figure><h3 id="使用组件"><a href="#使用组件" class="headerlink" title="使用组件"></a>使用组件</h3><blockquote><p>我们随便找个组件来使用一下</p></blockquote><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">van-button</span> <span class="attr">type</span>=<span class="string">&quot;primary&quot;</span>&gt;</span>主要按钮<span class="tag">&lt;/<span class="name">van-button</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">van-tag</span> <span class="attr">type</span>=<span class="string">&quot;success&quot;</span>&gt;</span>标签<span class="tag">&lt;/<span class="name">van-tag</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">van-switch</span> <span class="attr">v-model</span>=<span class="string">&quot;true&quot;</span> /&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
          <category> 项目搭建 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> vue </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>接口封装</title>
      <link href="/Lutianyao/blog/2023/02/11/02.%E5%89%8D%E7%AB%AF/01.%E9%A1%B9%E7%9B%AE%E6%90%AD%E5%BB%BA/04.%E6%8E%A5%E5%8F%A3%E5%B0%81%E8%A3%85/"/>
      <url>/Lutianyao/blog/2023/02/11/02.%E5%89%8D%E7%AB%AF/01.%E9%A1%B9%E7%9B%AE%E6%90%AD%E5%BB%BA/04.%E6%8E%A5%E5%8F%A3%E5%B0%81%E8%A3%85/</url>
      
        <content type="html"><![CDATA[<h1 id="接口封装"><a href="#接口封装" class="headerlink" title="接口封装"></a>接口封装</h1><h3 id="使用场景"><a href="#使用场景" class="headerlink" title="使用场景"></a>使用场景</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">在Vue项目开发当中，经常会去调用后端的接口，所以在Vue搭建的过程中，需要对接口请求进行封装</span><br><span class="line"></span><br><span class="line">在封装的过程中需要去安装 axios 这个插件，来帮助我们发送http请求</span><br><span class="line"></span><br><span class="line">下面就是封装的过程</span><br></pre></td></tr></table></figure><h3 id="安装axios"><a href="#安装axios" class="headerlink" title="安装axios"></a>安装axios</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yarn add axios -S</span><br></pre></td></tr></table></figure><h3 id="请求服务封装"><a href="#请求服务封装" class="headerlink" title="请求服务封装"></a>请求服务封装</h3><blockquote><p>src&#x2F;services&#x2F;request.js</p></blockquote><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//引入axios异步请求插件</span></span><br><span class="line"><span class="keyword">import</span> axios <span class="keyword">from</span> <span class="string">&#x27;axios&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> cancel ,promiseArr = &#123;&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title class_">CancelToken</span> = axios.<span class="property">CancelToken</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//请求拦截器</span></span><br><span class="line">axios.<span class="property">interceptors</span>.<span class="property">request</span>.<span class="title function_">use</span>(<span class="function"><span class="params">config</span> =&gt;</span> &#123;</span><br><span class="line">    <span class="comment">//发起请求时，取消掉当前正在进行的相同请求</span></span><br><span class="line">    <span class="keyword">if</span> (promiseArr[config.<span class="property">url</span>]) &#123;</span><br><span class="line">        promiseArr[config.<span class="property">url</span>](<span class="string">&#x27;操作取消&#x27;</span>)</span><br><span class="line">        promiseArr[config.<span class="property">url</span>] = cancel</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        promiseArr[config.<span class="property">url</span>] = cancel</span><br><span class="line">    &#125;</span><br><span class="line">      <span class="keyword">return</span> config</span><br><span class="line">&#125;, <span class="function"><span class="params">error</span> =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="title class_">Promise</span>.<span class="title function_">reject</span>(error)</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="comment">//响应拦截器即异常处理</span></span><br><span class="line">axios.<span class="property">interceptors</span>.<span class="property">response</span>.<span class="title function_">use</span>(</span><br><span class="line">  <span class="function"><span class="params">response</span> =&gt;</span> &#123;</span><br><span class="line">      <span class="comment">// return response</span></span><br><span class="line">      <span class="keyword">return</span> response.<span class="property">data</span></span><br><span class="line">  &#125;, </span><br><span class="line">  <span class="function"><span class="params">err</span> =&gt;</span> &#123;</span><br><span class="line">      <span class="keyword">if</span> (err &amp;&amp; err.<span class="property">response</span>) &#123;</span><br><span class="line">        <span class="keyword">switch</span> (err.<span class="property">response</span>.<span class="property">status</span>) &#123;</span><br><span class="line">          <span class="keyword">case</span> <span class="number">400</span>:</span><br><span class="line">            err.<span class="property">message</span> = <span class="string">&#x27;错误请求&#x27;</span></span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">          <span class="keyword">case</span> <span class="number">401</span>:</span><br><span class="line">            err.<span class="property">message</span> = <span class="string">&#x27;未授权，请重新登录&#x27;</span></span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">          <span class="keyword">case</span> <span class="number">403</span>:</span><br><span class="line">            err.<span class="property">message</span> = <span class="string">&#x27;拒绝访问&#x27;</span></span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">          <span class="keyword">case</span> <span class="number">404</span>:</span><br><span class="line">            err.<span class="property">message</span> = <span class="string">&#x27;请求错误,未找到该资源&#x27;</span></span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">          <span class="keyword">case</span> <span class="number">405</span>:</span><br><span class="line">            err.<span class="property">message</span> = <span class="string">&#x27;请求方法未允许&#x27;</span></span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">          <span class="keyword">case</span> <span class="number">408</span>:</span><br><span class="line">            err.<span class="property">message</span> = <span class="string">&#x27;请求超时&#x27;</span></span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">          <span class="keyword">case</span> <span class="number">500</span>:</span><br><span class="line">            err.<span class="property">message</span> = <span class="string">&#x27;服务器端出错&#x27;</span></span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">          <span class="keyword">case</span> <span class="number">501</span>:</span><br><span class="line">            err.<span class="property">message</span> = <span class="string">&#x27;网络未实现&#x27;</span></span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">          <span class="keyword">case</span> <span class="number">502</span>:</span><br><span class="line">            err.<span class="property">message</span> = <span class="string">&#x27;网络错误&#x27;</span></span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">          <span class="keyword">case</span> <span class="number">503</span>:</span><br><span class="line">            err.<span class="property">message</span> = <span class="string">&#x27;服务不可用&#x27;</span></span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">          <span class="keyword">case</span> <span class="number">504</span>:</span><br><span class="line">            err.<span class="property">message</span> = <span class="string">&#x27;网络超时&#x27;</span></span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">          <span class="keyword">case</span> <span class="number">505</span>:</span><br><span class="line">            err.<span class="property">message</span> = <span class="string">&#x27;http版本不支持该请求&#x27;</span></span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">          <span class="attr">default</span>:</span><br><span class="line">            err.<span class="property">message</span> = <span class="string">`连接错误<span class="subst">$&#123;err.response.status&#125;</span>`</span></span><br><span class="line">        &#125;</span><br><span class="line">      &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        err.<span class="property">message</span> = <span class="string">&quot;连接到服务器失败&quot;</span></span><br><span class="line">      &#125;</span><br><span class="line">      <span class="variable language_">console</span>.<span class="title function_">err</span>(err.<span class="property">message</span>)</span><br><span class="line">        <span class="keyword">return</span> <span class="title class_">Promise</span>.<span class="title function_">resolve</span>(err.<span class="property">response</span>)</span><br><span class="line">  &#125;</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="comment">//请求的默认前缀 只要是发出去请求就会 默认带上这个前缀</span></span><br><span class="line">axios.<span class="property">defaults</span>.<span class="property">baseURL</span> = <span class="string">&#x27;/api&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//设置默认请求头 异步的</span></span><br><span class="line">axios.<span class="property">defaults</span>.<span class="property">headers</span> = &#123;</span><br><span class="line">    <span class="string">&#x27;X-Requested-With&#x27;</span>: <span class="string">&#x27;XMLHttpRequest&#x27;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//设置超时请求时间</span></span><br><span class="line">axios.<span class="property">defaults</span>.<span class="property">timeout</span> = <span class="number">10000</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//get请求</span></span><br><span class="line"><span class="keyword">let</span> <span class="title function_">GET</span> = (<span class="params">data = &#123;&#125;</span>) =&gt; &#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">Promise</span>(<span class="function">(<span class="params">resolve,reject</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="title function_">axios</span>(&#123;</span><br><span class="line">      <span class="attr">method</span>: <span class="string">&#x27;get&#x27;</span>,</span><br><span class="line">      <span class="attr">url</span>:data.<span class="property">url</span>,</span><br><span class="line">      <span class="attr">params</span>: data.<span class="property">params</span>,</span><br><span class="line">      <span class="attr">cancelToken</span>: <span class="keyword">new</span> <span class="title class_">CancelToken</span>(<span class="function"><span class="params">c</span> =&gt;</span> &#123;</span><br><span class="line">        cancel = c</span><br><span class="line">      &#125;)</span><br><span class="line">    &#125;).<span class="title function_">then</span>(<span class="function"><span class="params">res</span> =&gt;</span> &#123;</span><br><span class="line">      <span class="title function_">resolve</span>(res)</span><br><span class="line">    &#125;)</span><br><span class="line">  &#125;)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//post请求</span></span><br><span class="line"><span class="keyword">let</span> <span class="title function_">POST</span> = (<span class="params">data = &#123;&#125;</span>) =&gt;</span><br><span class="line">&#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">Promise</span>(<span class="function">(<span class="params">resolve,reject</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="title function_">axios</span>(&#123;</span><br><span class="line">      <span class="attr">method</span>: <span class="string">&#x27;post&#x27;</span>,</span><br><span class="line">      <span class="attr">url</span>:data.<span class="property">url</span>,</span><br><span class="line">      <span class="attr">data</span>:data.<span class="property">params</span>,</span><br><span class="line">      <span class="attr">cancelToken</span>: <span class="keyword">new</span> <span class="title class_">CancelToken</span>(<span class="function"><span class="params">c</span> =&gt;</span> &#123;</span><br><span class="line">        cancel = c</span><br><span class="line">      &#125;)</span><br><span class="line">    &#125;).<span class="title function_">then</span>(<span class="function"><span class="params">res</span> =&gt;</span> &#123;</span><br><span class="line">      <span class="title function_">resolve</span>(res)</span><br><span class="line">    &#125;)</span><br><span class="line">  &#125;)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 文件上传请求</span></span><br><span class="line"><span class="keyword">let</span> <span class="title function_">UPLOAD</span> = (<span class="params">data = &#123;&#125;</span>) =&gt;</span><br><span class="line">&#123;</span><br><span class="line">  <span class="comment">//封装表单数据对象</span></span><br><span class="line">  <span class="keyword">var</span> <span class="title class_">RequestData</span> = <span class="keyword">new</span> <span class="title class_">FormData</span>()</span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span>(<span class="title class_">JSON</span>.<span class="title function_">stringify</span>(data.<span class="property">params</span>) != <span class="string">&quot;&#123;&#125;&quot;</span>)</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">var</span> key <span class="keyword">in</span> data.<span class="property">params</span>)</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="title class_">RequestData</span>.<span class="title function_">append</span>(key, data.<span class="property">params</span>[key])</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">Promise</span>(<span class="function">(<span class="params">resolve,reject</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="title function_">axios</span>(&#123;</span><br><span class="line">      <span class="attr">method</span>: <span class="string">&#x27;post&#x27;</span>,</span><br><span class="line">      <span class="attr">url</span>:data.<span class="property">url</span>,</span><br><span class="line">      <span class="attr">data</span>:<span class="title class_">RequestData</span>,</span><br><span class="line">      <span class="attr">headers</span>:&#123;<span class="string">&#x27;Content-Type&#x27;</span>: <span class="string">&#x27;multipart/form-data&#x27;</span>&#125;,</span><br><span class="line">      <span class="attr">cancelToken</span>: <span class="keyword">new</span> <span class="title class_">CancelToken</span>(<span class="function"><span class="params">c</span> =&gt;</span> &#123;</span><br><span class="line">        cancel = c</span><br><span class="line">      &#125;)</span><br><span class="line">    &#125;).<span class="title function_">then</span>(<span class="function"><span class="params">res</span> =&gt;</span> &#123;</span><br><span class="line">      <span class="title function_">resolve</span>(res)</span><br><span class="line">    &#125;)</span><br><span class="line">  &#125;)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> &#123;</span><br><span class="line">  <span class="variable constant_">GET</span>,</span><br><span class="line">  <span class="variable constant_">POST</span>,</span><br><span class="line">  <span class="variable constant_">UPLOAD</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>接口的目录结构</p></blockquote><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">services/  存放自定义封装的服务文件</span><br><span class="line">request.js axios二次封装的请求服务库</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">api/</span><br><span class="line">user/</span><br><span class="line">address.js</span><br><span class="line">base.js</span><br><span class="line">index.js</span><br><span class="line"></span><br><span class="line">product/</span><br><span class="line">product.js</span><br><span class="line">index.js</span><br><span class="line"></span><br><span class="line">index.js</span><br></pre></td></tr></table></figure><p>由此可见我们发现每个目录下面都有一个<code>index.js</code>这个文件，那么这个文件就是每个接口的入口文件</p><h3 id="总入口文件"><a href="#总入口文件" class="headerlink" title="总入口文件"></a>总入口文件</h3><blockquote><p>src&#x2F;api&#x2F;index.js</p></blockquote><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 引入每个目录下面的index.js文件</span></span><br><span class="line"><span class="keyword">const</span> <span class="title class_">ModulesFile</span> = <span class="keyword">import</span>.<span class="property">meta</span>.<span class="title function_">globEager</span>(<span class="string">&quot;./*/index.js&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">//接口集合</span></span><br><span class="line"><span class="keyword">var</span> <span class="title class_">ApiList</span> = &#123;&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//提取对象下的值 同步</span></span><br><span class="line"><span class="title class_">Object</span>.<span class="title function_">values</span>(<span class="title class_">ModulesFile</span>).<span class="title function_">map</span>(<span class="keyword">async</span> mod =&gt; &#123;</span><br><span class="line">    <span class="keyword">if</span>(mod.<span class="property">default</span>)</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="comment">//合并对象 循环多次合并</span></span><br><span class="line">      <span class="title class_">ApiList</span> = <span class="title class_">Object</span>.<span class="title function_">assign</span>(<span class="title class_">ApiList</span>, mod.<span class="property">default</span>)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="comment">//让vue应用(app)继承接口服务  当使用.use挂载的时候， install函数就会被执行</span></span><br><span class="line"><span class="title class_">ApiList</span>.<span class="property">install</span> = <span class="function">(<span class="params">app</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="comment">//定义全局</span></span><br><span class="line">    app.<span class="property">config</span>.<span class="property">globalProperties</span>.<span class="property">$api</span> = <span class="title class_">ApiList</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//导出接口集合</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="title class_">ApiList</span></span><br></pre></td></tr></table></figure><h3 id="每个独立接口模块下面的index-js"><a href="#每个独立接口模块下面的index-js" class="headerlink" title="每个独立接口模块下面的index.js"></a>每个独立接口模块下面的index.js</h3><blockquote><p>src&#x2F;api&#x2F;user&#x2F;index.js</p></blockquote><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//引入当前目录下面所有的文件</span></span><br><span class="line"><span class="keyword">const</span> <span class="title class_">ModulesFile</span> = <span class="keyword">import</span>.<span class="property">meta</span>.<span class="title function_">globEager</span>(<span class="string">&#x27;./*.js&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">//接口列表</span></span><br><span class="line"><span class="keyword">var</span> <span class="title class_">ApiList</span> = &#123;&#125;</span><br><span class="line"></span><br><span class="line"><span class="title class_">Object</span>.<span class="title function_">values</span>(<span class="title class_">ModulesFile</span>).<span class="title function_">map</span>(<span class="keyword">async</span> mod =&gt; &#123;</span><br><span class="line">    <span class="keyword">if</span>(mod.<span class="property">default</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">//合并对象 循环多次合并</span></span><br><span class="line">        <span class="title class_">ApiList</span> = <span class="title class_">Object</span>.<span class="title function_">assign</span>(<span class="title class_">ApiList</span>,mod.<span class="property">default</span>)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="title class_">ApiList</span></span><br></pre></td></tr></table></figure><h3 id="其他的接口文件"><a href="#其他的接口文件" class="headerlink" title="其他的接口文件"></a>其他的接口文件</h3><blockquote><p>src&#x2F;api&#x2F;user&#x2F;base.js</p></blockquote><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//引入封装的公共的请求插件</span></span><br><span class="line"><span class="keyword">import</span> &#123;<span class="variable constant_">GET</span>, <span class="variable constant_">POST</span>, <span class="variable constant_">UPLOAD</span>&#125; <span class="keyword">from</span> <span class="string">&#x27;@/services/request.js&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">    <span class="title function_">register</span>(<span class="params">data = &#123;&#125;</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">//注册接口</span></span><br><span class="line">        <span class="comment">//api/user/base/register</span></span><br><span class="line">        <span class="keyword">return</span> <span class="title function_">POST</span>(&#123;</span><br><span class="line">            <span class="attr">url</span>:<span class="string">&#x27;/user/base/register&#x27;</span>,</span><br><span class="line">            <span class="attr">params</span>:data</span><br><span class="line">        &#125;)</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="title function_">login</span>(<span class="params">data = &#123;&#125;</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">//登录接口</span></span><br><span class="line">        <span class="keyword">return</span> <span class="title function_">POST</span>(&#123;</span><br><span class="line">            <span class="attr">url</span>:<span class="string">&#x27;/user/base/login&#x27;</span>,</span><br><span class="line">            <span class="attr">params</span>:data</span><br><span class="line">        &#125;)</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="title function_">profile</span>(<span class="params">data = &#123;&#125;</span>) </span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">//更改用户资料接口</span></span><br><span class="line">        <span class="keyword">return</span> <span class="title function_">UPLOAD</span>(&#123;</span><br><span class="line">            <span class="attr">url</span>:<span class="string">&#x27;/user/base/profile&#x27;</span>,</span><br><span class="line">            <span class="attr">params</span>:data</span><br><span class="line">        &#125;)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="全局挂载"><a href="#全局挂载" class="headerlink" title="全局挂载"></a>全局挂载</h3><blockquote><p>src&#x2F;main.js</p></blockquote><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//加载接口</span></span><br><span class="line"><span class="keyword">import</span> api <span class="keyword">from</span> <span class="string">&#x27;./api/index.js&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//挂载</span></span><br><span class="line"><span class="keyword">const</span> app = <span class="title function_">createApp</span>(<span class="title class_">App</span>)</span><br><span class="line">    .<span class="title function_">use</span>(api)</span><br><span class="line">    .<span class="title function_">mount</span>(<span class="string">&#x27;#app&#x27;</span>)</span><br></pre></td></tr></table></figure><h3 id="在业务中使用"><a href="#在业务中使用" class="headerlink" title="在业务中使用"></a>在业务中使用</h3><blockquote><p>src&#x2F;components&#x2F;home.vue</p></blockquote><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line"><span class="keyword">async</span> <span class="title function_">created</span>(<span class="params"></span>)</span><br><span class="line">&#123;</span><br><span class="line">  <span class="comment">//接口请求</span></span><br><span class="line">  <span class="keyword">var</span> result = <span class="keyword">await</span> <span class="variable language_">this</span>.<span class="property">$api</span>.<span class="title class_">ProductIndex</span>()</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(result)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
          <category> 项目搭建 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> vue </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>路由封装</title>
      <link href="/Lutianyao/blog/2023/02/11/02.%E5%89%8D%E7%AB%AF/01.%E9%A1%B9%E7%9B%AE%E6%90%AD%E5%BB%BA/03.%E8%B7%AF%E7%94%B1%E5%B0%81%E8%A3%85/"/>
      <url>/Lutianyao/blog/2023/02/11/02.%E5%89%8D%E7%AB%AF/01.%E9%A1%B9%E7%9B%AE%E6%90%AD%E5%BB%BA/03.%E8%B7%AF%E7%94%B1%E5%B0%81%E8%A3%85/</url>
      
        <content type="html"><![CDATA[<h1 id="路由封装"><a href="#路由封装" class="headerlink" title="路由封装"></a>路由封装</h1><h3 id="安装VueRouter4"><a href="#安装VueRouter4" class="headerlink" title="安装VueRouter4"></a>安装VueRouter4</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install vue-router@4 -S</span><br></pre></td></tr></table></figure><blockquote><p>快速入门使用</p></blockquote><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//引入路由对象</span></span><br><span class="line"><span class="keyword">import</span> &#123; createRouter, createWebHashHistory &#125; <span class="keyword">from</span> <span class="string">&quot;vue-router&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//引入组件</span></span><br><span class="line"><span class="keyword">import</span> home <span class="keyword">from</span> <span class="string">&#x27;../components/home.vue&#x27;</span></span><br><span class="line"><span class="keyword">import</span> user <span class="keyword">from</span> <span class="string">&#x27;../components/user.vue&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//创建路由</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="title function_">createRouter</span>(&#123;</span><br><span class="line">    <span class="attr">history</span>: <span class="title function_">createWebHashHistory</span>(), <span class="comment">//路由的模式</span></span><br><span class="line">    <span class="attr">linkExactActiveClass</span>: <span class="string">&#x27;active&#x27;</span>,  <span class="comment">//点击路由跳转的底部样式标量</span></span><br><span class="line">    <span class="comment">//路由列表</span></span><br><span class="line">    <span class="attr">routes</span>: [</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="comment">//默认首页</span></span><br><span class="line">            <span class="attr">path</span>: <span class="string">&#x27;/&#x27;</span>,</span><br><span class="line">            <span class="attr">name</span>: <span class="string">&#x27;home&#x27;</span>,</span><br><span class="line">            <span class="attr">component</span>: home</span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="attr">path</span>: <span class="string">&#x27;/user&#x27;</span>,</span><br><span class="line">            <span class="attr">name</span>: <span class="string">&#x27;user&#x27;</span>,</span><br><span class="line">            <span class="attr">component</span>: user</span><br><span class="line">        &#125;</span><br><span class="line">    ]</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h3 id="使用场景"><a href="#使用场景" class="headerlink" title="使用场景"></a>使用场景</h3><p>当我们在使用vue-router来进行路由封装的时候，就会需要用到该功能点<br>在用vue-router的时候会遇到需要引入当前文件夹下的所有文件例如引入module文件夹下所有的js文件<br>通常可以再module文件夹下建一个index.js 文件，然后在index文件里统一 export导出<br>但其实可以更方便，import.meta.globEager这个ES6方法可以满足需求，不需要再每次都要在index文件里导出了<br>这样操作我们还有一个好处就是可以让路由封装的路径与Components组件目录的路径一致</p><blockquote><p>组件的目录结构</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">components/</span><br><span class="line">user/</span><br><span class="line">base/</span><br><span class="line">index.vue</span><br><span class="line">login.vue</span><br><span class="line">profile.vue</span><br><span class="line">register.vue</span><br><span class="line"></span><br><span class="line">address/</span><br><span class="line">index.vue</span><br><span class="line">add.vue</span><br><span class="line">edit.vue</span><br></pre></td></tr></table></figure><blockquote><p>路由的目录结构</p></blockquote><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">routers/</span><br><span class="line">user/</span><br><span class="line">base.js</span><br><span class="line">address.js</span><br><span class="line">order.js</span><br><span class="line">index.js</span><br><span class="line"></span><br><span class="line">product/</span><br><span class="line">cart.js</span><br><span class="line">product.js</span><br><span class="line">type.js</span><br><span class="line">index.js</span><br><span class="line"></span><br><span class="line">index.js</span><br></pre></td></tr></table></figure><p>由此可见我们发现每个目录下面都有一个<code>index.js</code>这个文件，那么这个文件就是每个路由模块的入口文件</p><h3 id="总入口文件"><a href="#总入口文件" class="headerlink" title="总入口文件"></a>总入口文件</h3><blockquote><p>src&#x2F;routers&#x2F;index.js</p></blockquote><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//引入路由对象</span></span><br><span class="line"><span class="keyword">import</span> &#123; createRouter, createWebHashHistory &#125; <span class="keyword">from</span> <span class="string">&quot;vue-router&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 设置一个默认首页</span></span><br><span class="line"><span class="keyword">import</span> home <span class="keyword">from</span> <span class="string">&#x27;@/components/home.vue&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 引入每个目录下面的index.js文件</span></span><br><span class="line"><span class="keyword">const</span> <span class="title class_">ModulesFile</span> = <span class="keyword">import</span>.<span class="property">meta</span>.<span class="title function_">globEager</span>(<span class="string">&quot;./*/index.js&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 总路由集合</span></span><br><span class="line"><span class="keyword">const</span> <span class="title class_">RouterList</span> = []</span><br><span class="line"></span><br><span class="line"><span class="comment">//提取每个对象下的值 同步获取</span></span><br><span class="line"><span class="title class_">Object</span>.<span class="title function_">values</span>(<span class="title class_">ModulesFile</span>).<span class="title function_">map</span>(<span class="keyword">async</span> mod =&gt; &#123;</span><br><span class="line">  <span class="keyword">if</span>(mod.<span class="property">default</span>)</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="title class_">RouterList</span>.<span class="title function_">push</span>(...mod.<span class="property">default</span>)</span><br><span class="line">  &#125;</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="title class_">RouterList</span>.<span class="title function_">push</span>(&#123;</span><br><span class="line">  <span class="attr">path</span>:<span class="string">&#x27;/&#x27;</span>, <span class="comment">//传参选项 query</span></span><br><span class="line">  <span class="attr">name</span>:<span class="string">&#x27;home&#x27;</span>, <span class="comment">//传参选项 params</span></span><br><span class="line">  <span class="attr">component</span>: home,</span><br><span class="line">  <span class="comment">// meta:&#123; //自定义参数</span></span><br><span class="line">  <span class="comment">//   Auth:true, //自定义命名 比如Auth为true就是需要登录 否则不需要登录</span></span><br><span class="line">  <span class="comment">// &#125;</span></span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 创建一个总路由对象</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="title function_">createRouter</span>(&#123;</span><br><span class="line">  <span class="attr">history</span>: <span class="title function_">createWebHashHistory</span>(),  <span class="comment">//history模式 并且不会有/# </span></span><br><span class="line">  <span class="attr">linkExactActiveClass</span>:<span class="string">&#x27;active&#x27;</span>,  <span class="comment">//激活链接状态class名称</span></span><br><span class="line">  <span class="attr">routes</span>:<span class="title class_">RouterList</span>,   <span class="comment">//routes 很容易写成 routers !!!!!!!!!</span></span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h3 id="每个独立路由模块下面的index-js"><a href="#每个独立路由模块下面的index-js" class="headerlink" title="每个独立路由模块下面的index.js"></a>每个独立路由模块下面的index.js</h3><blockquote><p>src&#x2F;routers&#x2F;user&#x2F;index.js</p></blockquote><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 引入当前目录下面的所有文件</span></span><br><span class="line"><span class="keyword">const</span> <span class="title class_">ModulesFile</span> = <span class="keyword">import</span>.<span class="property">meta</span>.<span class="title function_">globEager</span>(<span class="string">&#x27;./*.js&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 路由集合</span></span><br><span class="line"><span class="keyword">const</span> <span class="title class_">RouterList</span> = []</span><br><span class="line"></span><br><span class="line"><span class="comment">//提取每个对象下的值 同步获取</span></span><br><span class="line"><span class="title class_">Object</span>.<span class="title function_">values</span>(<span class="title class_">ModulesFile</span>).<span class="title function_">map</span>(<span class="keyword">async</span> mod =&gt; &#123;</span><br><span class="line">  <span class="keyword">if</span>(mod.<span class="property">default</span>)</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="title class_">RouterList</span>.<span class="title function_">push</span>(...mod.<span class="property">default</span>)</span><br><span class="line">  &#125;</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="comment">//定义父组件</span></span><br><span class="line"><span class="keyword">const</span> layout = &#123;</span><br><span class="line">  <span class="attr">template</span>:<span class="string">`&lt;router-view&gt;&lt;/router-view&gt;`</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//导出</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> [</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="attr">path</span>:<span class="string">&#x27;/user&#x27;</span>, <span class="comment">// 父路由</span></span><br><span class="line">    <span class="attr">component</span>:layout,</span><br><span class="line">    <span class="comment">//子路由分组   /user/order/xxxx</span></span><br><span class="line">    <span class="attr">children</span>:<span class="title class_">RouterList</span></span><br><span class="line">  &#125;</span><br><span class="line">]</span><br></pre></td></tr></table></figure><h3 id="其他的路由文件"><a href="#其他的路由文件" class="headerlink" title="其他的路由文件"></a>其他的路由文件</h3><blockquote><p>src&#x2F;routers&#x2F;user&#x2F;base.js</p></blockquote><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//引入组件</span></span><br><span class="line"><span class="keyword">import</span> index <span class="keyword">from</span> <span class="string">&#x27;@/components/user/base/index.vue&#x27;</span></span><br><span class="line"><span class="keyword">import</span> login <span class="keyword">from</span> <span class="string">&#x27;@/components/user/base/login.vue&#x27;</span></span><br><span class="line"><span class="keyword">import</span> register <span class="keyword">from</span> <span class="string">&#x27;@/components/user/base/register.vue&#x27;</span></span><br><span class="line"><span class="keyword">import</span> profile <span class="keyword">from</span> <span class="string">&#x27;@/components/user/base/profile.vue&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> [</span><br><span class="line">    <span class="comment">//会员中心</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">// /user/base/index</span></span><br><span class="line">        <span class="attr">path</span>:<span class="string">&#x27;base/index&#x27;</span>,</span><br><span class="line">        <span class="attr">name</span>:<span class="string">&#x27;BaseIndex&#x27;</span>,</span><br><span class="line">        <span class="attr">component</span>:index,</span><br><span class="line">        <span class="attr">meta</span>:&#123; <span class="comment">//如果路由中存在这个属性 就代表需要登录才能访问</span></span><br><span class="line">            <span class="attr">auth</span>:<span class="literal">true</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">//基本资料</span></span><br><span class="line">        <span class="attr">path</span>:<span class="string">&#x27;base/profile&#x27;</span>,</span><br><span class="line">        <span class="attr">name</span>:<span class="string">&#x27;BaseProfile&#x27;</span>,</span><br><span class="line">        <span class="attr">component</span>:profile,</span><br><span class="line">        <span class="attr">meta</span>:&#123;</span><br><span class="line">            <span class="attr">auth</span>:<span class="literal">true</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">//登录界面</span></span><br><span class="line">        <span class="attr">path</span>:<span class="string">&#x27;base/login&#x27;</span>,</span><br><span class="line">        <span class="attr">name</span>:<span class="string">&#x27;BaseLogin&#x27;</span>,</span><br><span class="line">        <span class="attr">component</span>:login</span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">//注册界面</span></span><br><span class="line">        <span class="attr">path</span>:<span class="string">&#x27;base/register&#x27;</span>,</span><br><span class="line">        <span class="attr">name</span>:<span class="string">&#x27;BaseRegister&#x27;</span>,</span><br><span class="line">        <span class="attr">component</span>:register</span><br><span class="line">    &#125;</span><br><span class="line">]</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
          <category> 项目搭建 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> vue </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Vite配置</title>
      <link href="/Lutianyao/blog/2023/02/11/02.%E5%89%8D%E7%AB%AF/01.%E9%A1%B9%E7%9B%AE%E6%90%AD%E5%BB%BA/02.Vite%E9%85%8D%E7%BD%AE/"/>
      <url>/Lutianyao/blog/2023/02/11/02.%E5%89%8D%E7%AB%AF/01.%E9%A1%B9%E7%9B%AE%E6%90%AD%E5%BB%BA/02.Vite%E9%85%8D%E7%BD%AE/</url>
      
        <content type="html"><![CDATA[<h1 id="Vite配置"><a href="#Vite配置" class="headerlink" title="Vite配置"></a>Vite配置</h1><h3 id="Vite构建工具"><a href="#Vite构建工具" class="headerlink" title="Vite构建工具"></a>Vite构建工具</h3><p><a href="https://vitejs.cn/">https://vitejs.cn/</a></p><h3 id="Vite配置-1"><a href="#Vite配置-1" class="headerlink" title="Vite配置"></a>Vite配置</h3><blockquote><p>vite.config.js</p></blockquote><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; defineConfig &#125; <span class="keyword">from</span> <span class="string">&#x27;vite&#x27;</span></span><br><span class="line"><span class="keyword">import</span> vue <span class="keyword">from</span> <span class="string">&#x27;@vitejs/plugin-vue&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//引入路径模块</span></span><br><span class="line"><span class="keyword">const</span> path = <span class="built_in">require</span>(<span class="string">&#x27;path&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">// https://vitejs.dev/config/</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="title function_">defineConfig</span>(&#123;</span><br><span class="line">  <span class="attr">resolve</span>: &#123;</span><br><span class="line">    <span class="attr">alias</span>: &#123;</span><br><span class="line">      <span class="string">&quot;@&quot;</span>: path.<span class="title function_">resolve</span>(__dirname, <span class="string">&quot;src&quot;</span>),</span><br><span class="line">      <span class="string">&quot;components&quot;</span>: path.<span class="title function_">resolve</span>(__dirname, <span class="string">&quot;src/components&quot;</span>),</span><br><span class="line">      <span class="string">&#x27;vue&#x27;</span>: <span class="string">&#x27;vue/dist/vue.esm-bundler.js&#x27;</span> <span class="comment">// 定义vue的别名，如果使用其他的插件，可能会用到别名</span></span><br><span class="line">      <span class="comment">// &quot;styles&quot;: path.resolve(__dirname, &quot;src/styles&quot;),</span></span><br><span class="line">      <span class="comment">// &quot;plugins&quot;: path.resolve(__dirname, &quot;src/plugins&quot;),</span></span><br><span class="line">      <span class="comment">// &quot;views&quot;: path.resolve(__dirname, &quot;src/views&quot;),</span></span><br><span class="line">      <span class="comment">// &quot;layouts&quot;: path.resolve(__dirname, &quot;src/layouts&quot;),</span></span><br><span class="line">      <span class="comment">// &quot;utils&quot;: path.resolve(__dirname, &quot;src/utils&quot;),</span></span><br><span class="line">      <span class="comment">// &quot;apis&quot;: path.resolve(__dirname, &quot;src/apis&quot;),</span></span><br><span class="line">      <span class="comment">// &quot;dirs&quot;: path.resolve(__dirname, &quot;src/directives&quot;),</span></span><br><span class="line">    &#125;,</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">server</span>: &#123;</span><br><span class="line">    <span class="attr">proxy</span>: &#123;</span><br><span class="line">      <span class="comment">//设置代理请求 当代理商识别你的请求如果前缀是 /api的话 就会自动转移</span></span><br><span class="line">      <span class="string">&#x27;/api&#x27;</span>: &#123;</span><br><span class="line">        <span class="attr">target</span>: <span class="string">&#x27;http://www.ask.com/api&#x27;</span>,</span><br><span class="line">        <span class="attr">changeOrigin</span>:<span class="literal">true</span>,  <span class="comment">//跨域</span></span><br><span class="line">        <span class="comment">//替换掉api前缀 防止多个api地址</span></span><br><span class="line">        <span class="attr">rewrite</span>: <span class="function">(<span class="params">path</span>) =&gt;</span> path.<span class="title function_">replace</span>(<span class="regexp">/^\/api/</span>, <span class="string">&#x27;&#x27;</span>)</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">hmr</span>: &#123;</span><br><span class="line">      <span class="attr">overlay</span>: <span class="literal">false</span>,</span><br><span class="line">    &#125;,</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">plugins</span>: [<span class="title function_">vue</span>()],</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
          <category> 项目搭建 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> vue </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>脚手架安装</title>
      <link href="/Lutianyao/blog/2023/02/11/02.%E5%89%8D%E7%AB%AF/01.%E9%A1%B9%E7%9B%AE%E6%90%AD%E5%BB%BA/01.%E8%84%9A%E6%89%8B%E6%9E%B6%E5%AE%89%E8%A3%85/"/>
      <url>/Lutianyao/blog/2023/02/11/02.%E5%89%8D%E7%AB%AF/01.%E9%A1%B9%E7%9B%AE%E6%90%AD%E5%BB%BA/01.%E8%84%9A%E6%89%8B%E6%9E%B6%E5%AE%89%E8%A3%85/</url>
      
        <content type="html"><![CDATA[<h1 id="脚手架安装"><a href="#脚手架安装" class="headerlink" title="脚手架安装"></a>脚手架安装</h1><h3 id="全局安装脚手架"><a href="#全局安装脚手架" class="headerlink" title="全局安装脚手架"></a>全局安装脚手架</h3><blockquote><ul><li>   Yarn安装</li></ul></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yarn global add @vue/cli</span><br></pre></td></tr></table></figure><blockquote><ul><li>   NPM安装</li></ul></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install -g @vue/cli</span><br></pre></td></tr></table></figure><h3 id="查看安装是否成功"><a href="#查看安装是否成功" class="headerlink" title="查看安装是否成功"></a>查看安装是否成功</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vue --version</span><br></pre></td></tr></table></figure><h3 id="创建项目"><a href="#创建项目" class="headerlink" title="创建项目"></a>创建项目</h3><blockquote><p>利用Vite构建工具来创建项目</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"># npm 6.x</span><br><span class="line">npm init vite@latest &lt;project-name&gt; --template vue</span><br><span class="line"></span><br><span class="line"># npm 7+，需要加上额外的双短横线</span><br><span class="line">npm init vite@latest &lt;project-name&gt; -- --template vue</span><br><span class="line"></span><br><span class="line">cd &lt;project-name&gt;</span><br><span class="line"></span><br><span class="line">npm install</span><br><span class="line"></span><br><span class="line">npm run dev</span><br></pre></td></tr></table></figure><blockquote><p>Yarn安装</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">yarn create vite &lt;project-name&gt; --template vue</span><br><span class="line">cd &lt;project-name&gt;</span><br><span class="line">yarn</span><br><span class="line">yarn dev</span><br></pre></td></tr></table></figure><h3 id="目录结构"><a href="#目录结构" class="headerlink" title="目录结构"></a>目录结构</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">/project</span><br><span class="line">.gitignoregit仓库忽略文件</span><br><span class="line">index.html页面入口文件</span><br><span class="line">package.json安装包依赖文件</span><br><span class="line">vite.config.jsvite配置文件</span><br><span class="line">node_modules/依赖包</span><br><span class="line">public/公共访问目录</span><br><span class="line">dist/打包目录</span><br><span class="line">src/开发逻辑目录</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">/src</span><br><span class="line">App.vue项目入口文件</span><br><span class="line">main.js项目的核心文件</span><br><span class="line">assets/放置一些图片，如logo等</span><br><span class="line">components/组件目录</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
          <category> 项目搭建 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> vue </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>路由</title>
      <link href="/Lutianyao/blog/2023/02/09/02.%E5%89%8D%E7%AB%AF/02.Vue/08.%E8%B7%AF%E7%94%B1/"/>
      <url>/Lutianyao/blog/2023/02/09/02.%E5%89%8D%E7%AB%AF/02.Vue/08.%E8%B7%AF%E7%94%B1/</url>
      
        <content type="html"><![CDATA[<h2 id="路由构建"><a href="#路由构建" class="headerlink" title="路由构建"></a>路由构建</h2><h3 id="页面结构"><a href="#页面结构" class="headerlink" title="页面结构"></a>页面结构</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">h1</span>&gt;</span>路由操作<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!-- 路由渲染组件 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">router-view</span>&gt;</span><span class="tag">&lt;/<span class="name">router-view</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">br</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!-- 路由跳转组件 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">router-link</span> <span class="attr">to</span>=<span class="string">&quot;/list1&quot;</span>&gt;</span>跳转列表1路由<span class="tag">&lt;/<span class="name">router-link</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">router-link</span> <span class="attr">to</span>=<span class="string">&quot;/list2&quot;</span>&gt;</span>跳转列表2路由<span class="tag">&lt;/<span class="name">router-link</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;./vue.min.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--要引入路由组件--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;./vue-router.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="逻辑结构"><a href="#逻辑结构" class="headerlink" title="逻辑结构"></a>逻辑结构</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//路由组件</span></span><br><span class="line"><span class="keyword">const</span> <span class="title class_">List1</span> = &#123; <span class="attr">template</span>: <span class="string">&#x27;&lt;div&gt;列表1&lt;/div&gt;&#x27;</span> &#125;</span><br><span class="line"><span class="keyword">const</span> <span class="title class_">List2</span> = &#123; <span class="attr">template</span>: <span class="string">&#x27;&lt;div&gt;列表2&lt;/div&gt;&#x27;</span> &#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//定义路由列表</span></span><br><span class="line"><span class="keyword">const</span> routes = [</span><br><span class="line">    &#123; <span class="attr">path</span>: <span class="string">&#x27;/list1&#x27;</span>, <span class="attr">component</span>: <span class="title class_">List1</span> &#125;,</span><br><span class="line">    &#123; <span class="attr">path</span>: <span class="string">&#x27;/list2&#x27;</span>, <span class="attr">component</span>: <span class="title class_">List2</span> &#125;,</span><br><span class="line">]</span><br><span class="line"></span><br><span class="line"><span class="comment">//创建路由对象</span></span><br><span class="line"><span class="keyword">const</span> router = <span class="keyword">new</span> <span class="title class_">VueRouter</span>(&#123;</span><br><span class="line">    routes</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="comment">//在全局中加载路由</span></span><br><span class="line"><span class="keyword">var</span> app = <span class="keyword">new</span> <span class="title class_">Vue</span>(&#123;</span><br><span class="line">    <span class="attr">el</span>:<span class="string">&#x27;#app&#x27;</span>,</span><br><span class="line">    router</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h2 id="动态传参"><a href="#动态传参" class="headerlink" title="动态传参"></a>动态传参</h2><h3 id="页面结构-1"><a href="#页面结构-1" class="headerlink" title="页面结构"></a>页面结构</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">h1</span>&gt;</span>路由操作<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span>&gt;</span></span><br><span class="line">            接收 query 参数的时候 需要使用 path属性<span class="tag">&lt;<span class="name">br</span> /&gt;</span></span><br><span class="line">            接收 params 参数的时候 需要使用 name属性<span class="tag">&lt;<span class="name">br</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!-- 路由渲染组件 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">router-view</span>&gt;</span><span class="tag">&lt;/<span class="name">router-view</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">br</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!-- 路由跳转组件 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">router-link</span> <span class="attr">to</span>=<span class="string">&quot;/list&quot;</span>&gt;</span>跳转到列表路由(无参数)<span class="tag">&lt;/<span class="name">router-link</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">router-link</span> <span class="attr">:to</span>=<span class="string">&quot;&#123;path:&#x27;/list&#x27;, query:&#123;keyword:123&#125;&#125;&quot;</span>&gt;</span>跳转到列表路由(有参数)<span class="tag">&lt;/<span class="name">router-link</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">router-link</span> <span class="attr">:to</span>=<span class="string">&quot;&#123;name:&#x27;info&#x27;, params:&#123;id:100&#125;&#125;&quot;</span>&gt;</span>跳转到详细页面路由<span class="tag">&lt;/<span class="name">router-link</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;./vue.min.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--要引入路由组件--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;./vue-router.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="逻辑结构-1"><a href="#逻辑结构-1" class="headerlink" title="逻辑结构"></a>逻辑结构</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//路由组件</span></span><br><span class="line"><span class="keyword">const</span> <span class="title class_">List</span> = &#123; </span><br><span class="line">    <span class="attr">template</span>: <span class="string">`</span></span><br><span class="line"><span class="string">        &lt;div&gt;</span></span><br><span class="line"><span class="string">            列表页面</span></span><br><span class="line"><span class="string">            接收query参数 &#123;&#123;$route.query&#125;&#125;</span></span><br><span class="line"><span class="string">        &lt;/div&gt;</span></span><br><span class="line"><span class="string">    `</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title class_">Info</span> = &#123; </span><br><span class="line">    <span class="attr">template</span>: <span class="string">`</span></span><br><span class="line"><span class="string">        &lt;div&gt;</span></span><br><span class="line"><span class="string">            详细界面</span></span><br><span class="line"><span class="string">            接收params参数 &#123;&#123;$route.params&#125;&#125;</span></span><br><span class="line"><span class="string">        &lt;/div&gt;</span></span><br><span class="line"><span class="string">    `</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//定义路由列表</span></span><br><span class="line"><span class="keyword">const</span> routes = [</span><br><span class="line">    &#123; <span class="attr">path</span>: <span class="string">&#x27;/list&#x27;</span>, <span class="attr">component</span>: <span class="title class_">List</span> &#125;,</span><br><span class="line">    &#123; <span class="attr">path</span>: <span class="string">&#x27;/info/:id&#x27;</span>, <span class="attr">component</span>: <span class="title class_">Info</span>, <span class="attr">name</span>: <span class="string">&#x27;info&#x27;</span> &#125;,</span><br><span class="line">]</span><br><span class="line"></span><br><span class="line"><span class="comment">//创建路由对象</span></span><br><span class="line"><span class="keyword">const</span> router = <span class="keyword">new</span> <span class="title class_">VueRouter</span>(&#123;</span><br><span class="line">    routes</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="comment">//在全局中加载路由</span></span><br><span class="line"><span class="keyword">var</span> app = <span class="keyword">new</span> <span class="title class_">Vue</span>(&#123;</span><br><span class="line">    <span class="attr">el</span>:<span class="string">&#x27;#app&#x27;</span>,</span><br><span class="line">    router</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h2 id="路由嵌套"><a href="#路由嵌套" class="headerlink" title="路由嵌套"></a>路由嵌套</h2><h3 id="页面结构-2"><a href="#页面结构-2" class="headerlink" title="页面结构"></a>页面结构</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 路由渲染组件 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">router-view</span>&gt;</span><span class="tag">&lt;/<span class="name">router-view</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!-- 跳转路由 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">router-link</span> <span class="attr">to</span>=<span class="string">&quot;/user&quot;</span>&gt;</span>会员中心<span class="tag">&lt;/<span class="name">router-link</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">router-link</span> <span class="attr">to</span>=<span class="string">&quot;/user/address&quot;</span>&gt;</span>会员中心下面的收货地址<span class="tag">&lt;/<span class="name">router-link</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">br</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;./vue.min.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--要引入路由组件--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;./vue-router.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="逻辑结构-2"><a href="#逻辑结构-2" class="headerlink" title="逻辑结构"></a>逻辑结构</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="title class_">User</span> = &#123;</span><br><span class="line">    <span class="attr">template</span>:<span class="string">`</span></span><br><span class="line"><span class="string">        &lt;div&gt;</span></span><br><span class="line"><span class="string">            &lt;h1&gt;会员中心页面&lt;/h1&gt;</span></span><br><span class="line"><span class="string">            &lt;router-view&gt;&lt;/router-view&gt;</span></span><br><span class="line"><span class="string">        &lt;/div&gt;</span></span><br><span class="line"><span class="string">    `</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title class_">Address</span> = &#123;</span><br><span class="line">    <span class="attr">template</span>: <span class="string">`&lt;h1&gt;子路由收货地址页面&lt;/h1&gt;`</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//创建路由对象</span></span><br><span class="line"><span class="keyword">const</span> router = <span class="keyword">new</span> <span class="title class_">VueRouter</span>(&#123;</span><br><span class="line">    <span class="attr">routes</span>: [</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="attr">path</span>: <span class="string">&#x27;/user&#x27;</span>,</span><br><span class="line">            <span class="attr">component</span>: <span class="title class_">User</span>,</span><br><span class="line">            <span class="attr">children</span>: [</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="attr">path</span>:<span class="string">&#x27;address&#x27;</span>,</span><br><span class="line">                    <span class="attr">component</span>:<span class="title class_">Address</span></span><br><span class="line">                &#125;</span><br><span class="line">            ]</span><br><span class="line">        &#125;</span><br><span class="line">    ]</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="comment">//在全局中加载路由</span></span><br><span class="line"><span class="keyword">var</span> app = <span class="keyword">new</span> <span class="title class_">Vue</span>(&#123;</span><br><span class="line">    <span class="attr">el</span>:<span class="string">&#x27;#app&#x27;</span>,</span><br><span class="line">    router</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h2 id="操作方法"><a href="#操作方法" class="headerlink" title="操作方法"></a>操作方法</h2><h3 id="页面结构-3"><a href="#页面结构-3" class="headerlink" title="页面结构"></a>页面结构</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">h1</span>&gt;</span>操作方法<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!-- 路由渲染组件 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">router-view</span>&gt;</span><span class="tag">&lt;/<span class="name">router-view</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">br</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;demo1&quot;</span>&gt;</span>按钮跳转首页<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;demo2&quot;</span>&gt;</span>按钮跳转会员中心<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;demo3&quot;</span>&gt;</span>刷新界面<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;./vue.min.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--要引入路由组件--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;./vue-router.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="逻辑结构-3"><a href="#逻辑结构-3" class="headerlink" title="逻辑结构"></a>逻辑结构</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="title class_">Home</span> = &#123;</span><br><span class="line">    <span class="attr">template</span>: <span class="string">`&lt;h1&gt;首页&lt;/h1&gt;`</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title class_">User</span> = &#123;</span><br><span class="line">    <span class="attr">template</span>: <span class="string">`&lt;h1&gt;会员中心&lt;/h1&gt;`</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//创建路由对象</span></span><br><span class="line"><span class="keyword">const</span> router = <span class="keyword">new</span> <span class="title class_">VueRouter</span>(&#123;</span><br><span class="line">    <span class="attr">routes</span>: [</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="attr">path</span>: <span class="string">&#x27;/&#x27;</span>,</span><br><span class="line">            <span class="attr">component</span>: <span class="title class_">Home</span>,</span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="attr">path</span>: <span class="string">&#x27;/user&#x27;</span>,</span><br><span class="line">            <span class="attr">component</span>: <span class="title class_">User</span>,</span><br><span class="line">        &#125;,</span><br><span class="line">    ]</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="comment">//在全局中加载路由</span></span><br><span class="line"><span class="keyword">var</span> app = <span class="keyword">new</span> <span class="title class_">Vue</span>(&#123;</span><br><span class="line">    <span class="attr">el</span>:<span class="string">&#x27;#app&#x27;</span>,</span><br><span class="line">    router,</span><br><span class="line">    <span class="attr">methods</span>:&#123;</span><br><span class="line">        <span class="title function_">demo1</span>(<span class="params"></span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="variable language_">this</span>.<span class="property">$router</span>.<span class="title function_">push</span>(<span class="string">&#x27;/&#x27;</span>)</span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="title function_">demo2</span>(<span class="params"></span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="comment">//普通跳转</span></span><br><span class="line">            <span class="comment">// this.$router.push(&#x27;/user&#x27;)</span></span><br><span class="line"></span><br><span class="line">            <span class="comment">//带params参数跳转</span></span><br><span class="line">            <span class="comment">// this.$router.push(&#123;name: &#x27;/user&#x27;, params:&#123;id:&#x27;参数值&#x27;&#125;&#125;)</span></span><br><span class="line"></span><br><span class="line">            <span class="comment">//带query参数跳转</span></span><br><span class="line">            <span class="variable language_">this</span>.<span class="property">$router</span>.<span class="title function_">push</span>(&#123;<span class="attr">path</span>: <span class="string">&#x27;/user&#x27;</span>, <span class="attr">query</span>:&#123;<span class="attr">keyword</span>:<span class="string">&#x27;参数值&#x27;</span>&#125;&#125;)</span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="title function_">demo3</span>(<span class="params"></span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="comment">//刷新当前界面</span></span><br><span class="line">            <span class="variable language_">this</span>.<span class="property">$router</span>.<span class="title function_">go</span>(<span class="number">0</span>)</span><br><span class="line"></span><br><span class="line">            <span class="comment">//后退</span></span><br><span class="line">            <span class="comment">// this.$router.go(-1)</span></span><br><span class="line"></span><br><span class="line">            <span class="comment">// 前进</span></span><br><span class="line">            <span class="comment">// this.$router.go(1)</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h2 id="路由守卫"><a href="#路由守卫" class="headerlink" title="路由守卫"></a>路由守卫</h2><h3 id="页面结构-4"><a href="#页面结构-4" class="headerlink" title="页面结构"></a>页面结构</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">h1</span>&gt;</span>路由守卫<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!-- 路由渲染组件 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">router-view</span>&gt;</span><span class="tag">&lt;/<span class="name">router-view</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">br</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">router-link</span> <span class="attr">to</span>=<span class="string">&quot;/&quot;</span>&gt;</span>跳转首页<span class="tag">&lt;/<span class="name">router-link</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">router-link</span> <span class="attr">to</span>=<span class="string">&quot;/user&quot;</span>&gt;</span>跳转会员中心<span class="tag">&lt;/<span class="name">router-link</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">router-link</span> <span class="attr">to</span>=<span class="string">&quot;/product&quot;</span>&gt;</span>跳转产品页<span class="tag">&lt;/<span class="name">router-link</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;./vue.min.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--要引入路由组件--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;./vue-router.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="逻辑结构-4"><a href="#逻辑结构-4" class="headerlink" title="逻辑结构"></a>逻辑结构</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="title class_">Home</span> = &#123;</span><br><span class="line">    <span class="attr">template</span>: <span class="string">`&lt;h1&gt;首页&lt;/h1&gt;`</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title class_">User</span> = &#123;</span><br><span class="line">    <span class="attr">template</span>: <span class="string">`&lt;h1&gt;会员中心&lt;/h1&gt;`</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title class_">Product</span> = &#123;</span><br><span class="line">    <span class="attr">template</span>: <span class="string">`&lt;h1&gt;产品中心&lt;/h1&gt;`</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title class_">Login</span> = &#123;</span><br><span class="line">    <span class="attr">template</span>: <span class="string">`&lt;h1&gt;登录界面&lt;/h1&gt;`</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//创建路由对象</span></span><br><span class="line"><span class="keyword">const</span> router = <span class="keyword">new</span> <span class="title class_">VueRouter</span>(&#123;</span><br><span class="line">    <span class="attr">routes</span>: [</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="attr">path</span>: <span class="string">&#x27;/&#x27;</span>,</span><br><span class="line">            <span class="attr">component</span>: <span class="title class_">Home</span>,</span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="attr">path</span>: <span class="string">&#x27;/user&#x27;</span>,</span><br><span class="line">            <span class="attr">component</span>: <span class="title class_">User</span>,</span><br><span class="line">            <span class="comment">//给这个路由添加自定义信息</span></span><br><span class="line">            <span class="attr">meta</span>: &#123;</span><br><span class="line">                <span class="title class_">IsLogin</span>: <span class="literal">true</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="attr">path</span>: <span class="string">&#x27;/product&#x27;</span>,</span><br><span class="line">            <span class="attr">component</span>: <span class="title class_">Product</span>,</span><br><span class="line">            <span class="comment">// 组件内的守卫</span></span><br><span class="line">            <span class="title function_">beforeRouteEnter</span>(<span class="params">to, <span class="keyword">from</span>, next</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="comment">//进入路由前</span></span><br><span class="line">                <span class="comment">// 在渲染该组件的对应路由被 confirm 前调用</span></span><br><span class="line">                <span class="comment">// 不！能！获取组件实例 `this`</span></span><br><span class="line">                <span class="comment">// 因为当守卫执行前，组件实例还没被创建</span></span><br><span class="line">            &#125;,</span><br><span class="line">            <span class="title function_">beforeRouteUpdate</span>(<span class="params">to, <span class="keyword">from</span>, next</span>) </span><br><span class="line">            &#123;</span><br><span class="line">                <span class="comment">//更新路由前</span></span><br><span class="line">                <span class="comment">// vue(2.2版本 新增)</span></span><br><span class="line">                <span class="comment">// 在当前路由改变，但是该组件被复用时调用</span></span><br><span class="line">                <span class="comment">// 举例来说，对于一个带有动态参数的路径 /foo/:id，在 /foo/1 和 /foo/2 之间跳转的时候，</span></span><br><span class="line">                <span class="comment">// 由于会渲染同样的 Foo 组件，因此组件实例会被复用。而这个钩子就会在这个情况下被调用。</span></span><br><span class="line">                <span class="comment">// 可以访问组件实例 `this`</span></span><br><span class="line">            &#125;,</span><br><span class="line">            <span class="title function_">beforeRouteLeave</span>(<span class="params">to, <span class="keyword">from</span>, next</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="comment">//离开路由前</span></span><br><span class="line">                <span class="comment">// 导航离开该组件的对应路由时调用</span></span><br><span class="line">                <span class="comment">// 可以访问组件实例 `this`</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="attr">path</span>: <span class="string">&#x27;/login&#x27;</span>,</span><br><span class="line">            <span class="attr">component</span>: <span class="title class_">Login</span>,</span><br><span class="line">        &#125;,</span><br><span class="line">    ]</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="comment">//全局前置路由守卫</span></span><br><span class="line">router.<span class="title function_">beforeEach</span>(<span class="function">(<span class="params">to, <span class="keyword">from</span>, next</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="comment">//to 这个参数代表 去到哪个路由</span></span><br><span class="line">    <span class="comment">//from 这个参数代表 从哪里来</span></span><br><span class="line">    <span class="comment">//next 这个参数代表 是否可以去到下一步</span></span><br><span class="line">    <span class="comment">//我们可以根据to当中是否有meta信息来判断当前的路由是否需要登录</span></span><br><span class="line">    <span class="comment">//这个就是我们常见的判断是否有登录</span></span><br><span class="line">    <span class="keyword">var</span> <span class="title class_">IsLogin</span> = to.<span class="property">meta</span>.<span class="property">IsLogin</span> ? to.<span class="property">meta</span>.<span class="property">IsLogin</span> : <span class="literal">false</span></span><br><span class="line">    <span class="comment">//如果IsLogin=true 就说明是需要登录的，否则就不需要登录</span></span><br><span class="line">    <span class="keyword">if</span>(<span class="title class_">IsLogin</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">// 需要登录去到登录界面</span></span><br><span class="line">        <span class="title function_">next</span>(<span class="string">&#x27;/login&#x27;</span>)</span><br><span class="line">    &#125;<span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">//不需要登录直接去到下一步</span></span><br><span class="line">        <span class="title function_">next</span>()</span><br><span class="line">    &#125;</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="comment">//全局后置路由守卫</span></span><br><span class="line">router.<span class="title function_">afterEach</span>(<span class="function">(<span class="params">to, <span class="keyword">from</span></span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="comment">// 你也可以注册全局后置钩子，然而和守卫不同的是，这些钩子不会接受 next 函数也不会改变导航本身</span></span><br><span class="line">    <span class="comment">// console.log(&#x27;全局后置路由守卫&#x27;)</span></span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="comment">//在全局中加载路由</span></span><br><span class="line"><span class="keyword">var</span> app = <span class="keyword">new</span> <span class="title class_">Vue</span>(&#123;</span><br><span class="line">    <span class="attr">el</span>:<span class="string">&#x27;#app&#x27;</span>,</span><br><span class="line">    router,</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h3 id="脚手架中使用方式"><a href="#脚手架中使用方式" class="headerlink" title="脚手架中使用方式"></a>脚手架中使用方式</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> app = <span class="title function_">createApp</span>(<span class="title class_">App</span>)</span><br><span class="line">    .<span class="title function_">use</span>(router)  <span class="comment">//挂载路由</span></span><br><span class="line">    .<span class="title function_">use</span>(<span class="title class_">Vant</span>)   <span class="comment">//挂载UI组件</span></span><br><span class="line">    .<span class="title function_">use</span>(api)  <span class="comment">//挂载接口   === install</span></span><br><span class="line">    .<span class="title function_">use</span>(<span class="title class_">VueCookies</span>)</span><br><span class="line">    .<span class="title function_">mount</span>(<span class="string">&#x27;#app&#x27;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//添加路由守卫做判断是否有无登录</span></span><br><span class="line">router.<span class="title function_">beforeEach</span>(<span class="keyword">async</span> (to, <span class="keyword">from</span>, next) =&gt; &#123;</span><br><span class="line">    <span class="keyword">if</span>(to.<span class="property">meta</span>.<span class="property">auth</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">//需要登录</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">//判断是否有无cookie </span></span><br><span class="line">        <span class="keyword">var</span> <span class="title class_">LoginUser</span> = app.<span class="property">$cookies</span>.<span class="title function_">get</span>(<span class="string">&#x27;LoginUser&#x27;</span>)</span><br><span class="line"></span><br><span class="line">        <span class="comment">//没有登录就跳转到登录界面</span></span><br><span class="line">        <span class="keyword">if</span>(!<span class="title class_">LoginUser</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="title function_">next</span>(<span class="string">&#x27;/user/base/login&#x27;</span>)</span><br><span class="line">            <span class="keyword">return</span></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//获取id</span></span><br><span class="line">        <span class="keyword">var</span> userid = <span class="title class_">LoginUser</span>.<span class="property">id</span> ? <span class="title class_">LoginUser</span>.<span class="property">id</span> : <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//接口请求</span></span><br><span class="line">        <span class="keyword">var</span> result = <span class="keyword">await</span> api.<span class="title function_">check</span>(&#123;<span class="attr">userid</span>:userid&#125;)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(result.<span class="property">code</span> == <span class="number">0</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="comment">//验证失败</span></span><br><span class="line">            app.<span class="property">$cookies</span>.<span class="title function_">remove</span>(<span class="string">&#x27;LoginUser&#x27;</span>)</span><br><span class="line"></span><br><span class="line">            <span class="comment">//跳转了</span></span><br><span class="line">            <span class="title function_">next</span>(<span class="string">&#x27;/user/base/login&#x27;</span>)</span><br><span class="line">            <span class="keyword">return</span></span><br><span class="line">        &#125;<span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="comment">//验证成功</span></span><br><span class="line">            <span class="comment">//覆盖cookie</span></span><br><span class="line">            app.<span class="property">$cookies</span>.<span class="title function_">set</span>(<span class="string">&#x27;LoginUser&#x27;</span>, result.<span class="property">data</span>)</span><br><span class="line"></span><br><span class="line">            <span class="comment">//让他去到该去的路由</span></span><br><span class="line">            <span class="title function_">next</span>()</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;<span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">//不需要登录,直接跳转路由</span></span><br><span class="line">        <span class="title function_">next</span>()</span><br><span class="line">    &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h2 id="路由模式"><a href="#路由模式" class="headerlink" title="路由模式"></a>路由模式</h2><pre><code>    Hash: 使用URL的hash值来作为路由。支持所有浏览器 这种为默认模式 URL中带有#的    History: 当你使用 history 模式时，URL 就像正常链接，例如 http://yoursite.com/user/id，也好看！    Abstract： 支持所有javascript运行模式。如果发现没有浏览器的API，路由会自动强制进入这个模式</code></pre><h3 id="linkActiveClass"><a href="#linkActiveClass" class="headerlink" title="linkActiveClass"></a>linkActiveClass</h3><pre><code>    linkActiveClass 该配置为激活状态时动态添加的class名称</code></pre><h3 id="页面结构-5"><a href="#页面结构-5" class="headerlink" title="页面结构"></a>页面结构</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">h1</span>&gt;</span>路由守卫<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!-- 路由渲染组件 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">router-view</span>&gt;</span><span class="tag">&lt;/<span class="name">router-view</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">br</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">router-link</span> <span class="attr">to</span>=<span class="string">&quot;/&quot;</span>&gt;</span>跳转首页<span class="tag">&lt;/<span class="name">router-link</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">router-link</span> <span class="attr">to</span>=<span class="string">&quot;/user&quot;</span>&gt;</span>跳转会员中心<span class="tag">&lt;/<span class="name">router-link</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">router-link</span> <span class="attr">to</span>=<span class="string">&quot;/product&quot;</span>&gt;</span>跳转产品页<span class="tag">&lt;/<span class="name">router-link</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;./vue.min.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--要引入路由组件--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;./vue-router.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="逻辑结构-5"><a href="#逻辑结构-5" class="headerlink" title="逻辑结构"></a>逻辑结构</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="title class_">Home</span> = &#123;</span><br><span class="line">    <span class="attr">template</span>: <span class="string">`&lt;h1&gt;首页&lt;/h1&gt;`</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title class_">User</span> = &#123;</span><br><span class="line">    <span class="attr">template</span>: <span class="string">`&lt;h1&gt;会员中心&lt;/h1&gt;`</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title class_">Product</span> = &#123;</span><br><span class="line">    <span class="attr">template</span>: <span class="string">`&lt;h1&gt;产品中心&lt;/h1&gt;`</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//创建路由对象</span></span><br><span class="line"><span class="keyword">const</span> router = <span class="keyword">new</span> <span class="title class_">VueRouter</span>(&#123;</span><br><span class="line">    <span class="attr">mode</span>: <span class="string">&#x27;hash&#x27;</span>, <span class="comment">//默认模式</span></span><br><span class="line">    <span class="attr">linkActiveClass</span>:<span class="string">&#x27;active&#x27;</span>, <span class="comment">//路由跳转时动态添加样式</span></span><br><span class="line">    <span class="attr">routes</span>: [</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="attr">path</span>: <span class="string">&#x27;/&#x27;</span>,</span><br><span class="line">            <span class="attr">component</span>: <span class="title class_">Home</span>,</span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="attr">path</span>: <span class="string">&#x27;/user&#x27;</span>,</span><br><span class="line">            <span class="attr">component</span>: <span class="title class_">User</span>,</span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="attr">path</span>: <span class="string">&#x27;/product&#x27;</span>,</span><br><span class="line">            <span class="attr">component</span>: <span class="title class_">Product</span>,</span><br><span class="line">        &#125;,</span><br><span class="line">    ]</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="comment">//在全局中加载路由</span></span><br><span class="line"><span class="keyword">var</span> app = <span class="keyword">new</span> <span class="title class_">Vue</span>(&#123;</span><br><span class="line">    <span class="attr">el</span>:<span class="string">&#x27;#app&#x27;</span>,</span><br><span class="line">    router,</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
          <category> Vue </category>
          
      </categories>
      
      
        <tags>
            
            <tag> vue </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>组件</title>
      <link href="/Lutianyao/blog/2022/11/13/02.%E5%89%8D%E7%AB%AF/02.Vue/07.%E7%BB%84%E4%BB%B6/"/>
      <url>/Lutianyao/blog/2022/11/13/02.%E5%89%8D%E7%AB%AF/02.Vue/07.%E7%BB%84%E4%BB%B6/</url>
      
        <content type="html"><![CDATA[<h2 id="定义组件"><a href="#定义组件" class="headerlink" title="定义组件"></a>定义组件</h2><h3 id="页面结构"><a href="#页面结构" class="headerlink" title="页面结构"></a>页面结构</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">test</span>&gt;</span><span class="tag">&lt;/<span class="name">test</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">demo</span>&gt;</span><span class="tag">&lt;/<span class="name">demo</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">hello-world</span>&gt;</span><span class="tag">&lt;/<span class="name">hello-world</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="逻辑结构"><a href="#逻辑结构" class="headerlink" title="逻辑结构"></a>逻辑结构</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//在外部定义组件</span></span><br><span class="line"><span class="title class_">Vue</span>.<span class="title function_">component</span>(<span class="string">&#x27;demo&#x27;</span>, &#123;</span><br><span class="line">    <span class="attr">template</span>: <span class="string">&#x27;&lt;h1&gt;这是在外部定义的自定义组件&lt;/h1&gt;&#x27;</span></span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="comment">//驼峰写法的组件</span></span><br><span class="line"><span class="title class_">Vue</span>.<span class="title function_">component</span>(<span class="string">&#x27;HelloWorld&#x27;</span>, &#123;</span><br><span class="line">    <span class="attr">template</span>:<span class="string">&#x27;&lt;h1&gt;驼峰写法的组件&lt;/h1&gt;&#x27;</span></span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> app = <span class="keyword">new</span> <span class="title class_">Vue</span>(&#123;</span><br><span class="line">    <span class="attr">el</span>: <span class="string">&#x27;#app&#x27;</span>,</span><br><span class="line">    <span class="comment">//内部自定义组件</span></span><br><span class="line">    <span class="attr">components</span>: &#123;</span><br><span class="line">        <span class="attr">test</span>:&#123;</span><br><span class="line">            <span class="attr">template</span>: <span class="string">&#x27;&lt;h1&gt;这是一个自定义组件&lt;/h1&gt;&#x27;</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h2 id="组件的基本结构"><a href="#组件的基本结构" class="headerlink" title="组件的基本结构"></a>组件的基本结构</h2><h3 id="页面结构-1"><a href="#页面结构-1" class="headerlink" title="页面结构"></a>页面结构</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">demo</span>&gt;</span><span class="tag">&lt;/<span class="name">demo</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">template</span> <span class="attr">id</span>=<span class="string">&quot;demo&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span>&gt;</span>data-数据：&#123;&#123;nickname&#125;&#125;<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span>&gt;</span>computed-计算属性：&#123;&#123;price&#125;&#125;<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;ClickMe&quot;</span>&gt;</span>组件的绑定事件<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="逻辑结构-1"><a href="#逻辑结构-1" class="headerlink" title="逻辑结构"></a>逻辑结构</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> app = <span class="keyword">new</span> <span class="title class_">Vue</span>(&#123;</span><br><span class="line">    <span class="attr">el</span>: <span class="string">&#x27;#app&#x27;</span>,</span><br><span class="line">    <span class="attr">components</span>:&#123;</span><br><span class="line">        <span class="attr">demo</span>:&#123;</span><br><span class="line">            <span class="attr">template</span>:<span class="string">&#x27;#demo&#x27;</span>,</span><br><span class="line">            <span class="comment">//组件的数据</span></span><br><span class="line">            <span class="title function_">data</span>(<span class="params"></span>)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">return</span> &#123;</span><br><span class="line">                    <span class="attr">nickname</span>: <span class="string">&#x27;张三&#x27;</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;,</span><br><span class="line">            <span class="comment">//组件的计算属性</span></span><br><span class="line">            <span class="attr">computed</span>:&#123;</span><br><span class="line">                <span class="title function_">price</span>(<span class="params"></span>)</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="keyword">return</span> <span class="string">&quot;￥100,0000.00&quot;</span>  </span><br><span class="line">                &#125;</span><br><span class="line">            &#125;,</span><br><span class="line">            <span class="comment">//组件的方法</span></span><br><span class="line">            <span class="attr">methods</span>:&#123;</span><br><span class="line">                <span class="title class_">ClickMe</span>()</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="title function_">alert</span>(<span class="string">&#x27;组件的事件方法&#x27;</span>)</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h2 id="父子组件通信"><a href="#父子组件通信" class="headerlink" title="父子组件通信"></a>父子组件通信</h2><h3 id="页面结构-2"><a href="#页面结构-2" class="headerlink" title="页面结构"></a>页面结构</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h1</span>&gt;</span>父给子 - 用属性(props)<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h1</span>&gt;</span>子给父 - 用事件(event)<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">demo</span> <span class="attr">:msg</span>=<span class="string">&quot;msg&quot;</span> @<span class="attr">father</span>=<span class="string">&quot;GetData&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">demo</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">template</span> <span class="attr">id</span>=<span class="string">&quot;demo&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span>&gt;</span>获取父组件给过来的数据：&#123;&#123;msg&#125;&#125;<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;ClickMe&quot;</span>&gt;</span>传送数据<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="逻辑结构-2"><a href="#逻辑结构-2" class="headerlink" title="逻辑结构"></a>逻辑结构</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> app = <span class="keyword">new</span> <span class="title class_">Vue</span>(&#123;</span><br><span class="line">    <span class="attr">el</span>: <span class="string">&#x27;#app&#x27;</span>,</span><br><span class="line">    <span class="attr">data</span>: &#123;</span><br><span class="line">        <span class="attr">msg</span>:<span class="string">&#x27;hello father&#x27;</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">methods</span>: &#123;</span><br><span class="line">        <span class="title class_">GetData</span>(data)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">`子组件给过来的数据：<span class="subst">$&#123;data&#125;</span>`</span>)</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">components</span>:&#123;</span><br><span class="line">        <span class="attr">demo</span>:&#123;</span><br><span class="line">            <span class="attr">template</span>: <span class="string">&#x27;#demo&#x27;</span>,</span><br><span class="line">            <span class="attr">props</span>: [<span class="string">&#x27;msg&#x27;</span>], <span class="comment">//定义属性</span></span><br><span class="line">            <span class="title function_">data</span>(<span class="params"></span>)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">return</span> &#123;</span><br><span class="line">                    <span class="attr">son</span>:<span class="string">&#x27;hello son&#x27;</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;,</span><br><span class="line">            <span class="attr">methods</span>: &#123;</span><br><span class="line">                <span class="title class_">ClickMe</span>()</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="variable language_">this</span>.$emit(<span class="string">&#x27;father&#x27;</span>, <span class="variable language_">this</span>.<span class="property">son</span>)</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h2 id="组件传参"><a href="#组件传参" class="headerlink" title="组件传参"></a>组件传参</h2><h3 id="常见问题"><a href="#常见问题" class="headerlink" title="常见问题"></a>常见问题</h3><pre><code>    vue组件props没有起作用的原因：并不会在开发版本中运行，只有生产版本会直接删除警告，    引入一个非压缩的版本就可以解决</code></pre><h3 id="页面结构-3"><a href="#页面结构-3" class="headerlink" title="页面结构"></a>页面结构</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">demo</span> <span class="attr">:prop-c</span>=<span class="string">&quot;propC&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">demo</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">template</span> <span class="attr">id</span>=<span class="string">&quot;demo&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">h1</span>&gt;</span>props验证<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">        &#123;&#123;propC&#125;&#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="逻辑结构-3"><a href="#逻辑结构-3" class="headerlink" title="逻辑结构"></a>逻辑结构</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> app = <span class="keyword">new</span> <span class="title class_">Vue</span>(&#123;</span><br><span class="line">    <span class="attr">el</span>: <span class="string">&#x27;#app&#x27;</span>,</span><br><span class="line">    <span class="attr">data</span>:&#123;</span><br><span class="line">        <span class="attr">propC</span>:<span class="string">&#x27;123&#x27;</span>,</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">components</span>:&#123;</span><br><span class="line">        <span class="attr">demo</span>:&#123;</span><br><span class="line">            <span class="attr">template</span>: <span class="string">&#x27;#demo&#x27;</span>,</span><br><span class="line">            <span class="attr">props</span>:&#123;</span><br><span class="line">                <span class="comment">// 基础类型检测, null意味着任何类型都行</span></span><br><span class="line">                <span class="attr">propA</span>: <span class="title class_">Null</span>,</span><br><span class="line"></span><br><span class="line">                <span class="comment">// 多种类型</span></span><br><span class="line">                <span class="attr">propB</span>: [<span class="title class_">String</span>, <span class="title class_">Number</span>],</span><br><span class="line"></span><br><span class="line">                <span class="comment">// 必传且是String</span></span><br><span class="line">                <span class="attr">propC</span>: &#123;</span><br><span class="line">                    <span class="attr">type</span>: <span class="title class_">String</span>,</span><br><span class="line">                    <span class="attr">required</span>: <span class="literal">true</span></span><br><span class="line">                &#125;,</span><br><span class="line"></span><br><span class="line">                <span class="comment">// 数字有默认值</span></span><br><span class="line">                <span class="attr">propD</span>: &#123;</span><br><span class="line">                    <span class="attr">type</span>: <span class="title class_">Number</span>,</span><br><span class="line">                    <span class="attr">default</span>: <span class="number">101</span></span><br><span class="line">                &#125;,</span><br><span class="line">                </span><br><span class="line">                <span class="comment">// 数组、默认值是一个工厂函数返回对象</span></span><br><span class="line">                <span class="attr">propE</span>: &#123;</span><br><span class="line">                    <span class="attr">type</span>: <span class="title class_">Object</span>,</span><br><span class="line">                    <span class="attr">default</span>: <span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">                        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;propE default invoked.&quot;</span>);</span><br><span class="line">                        <span class="keyword">return</span> &#123; <span class="attr">message</span>: <span class="string">&quot;I am from propE.&quot;</span>&#125;;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;,</span><br><span class="line"></span><br><span class="line">                <span class="comment">// 自定义验证函数</span></span><br><span class="line">                <span class="attr">propF</span>: &#123;</span><br><span class="line">                    <span class="attr">isValid</span>: <span class="keyword">function</span>(<span class="params">value</span>) </span><br><span class="line">                    &#123;</span><br><span class="line">                        <span class="keyword">return</span> value &gt; <span class="number">100</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;,</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h2 id="插槽"><a href="#插槽" class="headerlink" title="插槽"></a>插槽</h2><h3 id="页面结构-4"><a href="#页面结构-4" class="headerlink" title="页面结构"></a>页面结构</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">test</span>&gt;</span><span class="tag">&lt;/<span class="name">test</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">test</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">h1</span>&gt;</span>覆盖插槽<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">test</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">test1</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">h1</span> <span class="attr">slot</span>=<span class="string">&quot;head&quot;</span>&gt;</span>覆盖具名插槽head<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">h1</span> <span class="attr">slot</span>=<span class="string">&quot;foot&quot;</span>&gt;</span>覆盖具名插槽foot<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">test1</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">template</span> <span class="attr">id</span>=<span class="string">&quot;test&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">slot</span>&gt;</span>公共无名插槽<span class="tag">&lt;/<span class="name">slot</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">template</span> <span class="attr">id</span>=<span class="string">&quot;test1&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">slot</span> <span class="attr">name</span>=<span class="string">&quot;head&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">h1</span>&gt;</span>这个是有名head插槽<span class="tag">&lt;/<span class="name">h1</span>&gt;</span><span class="tag">&lt;/<span class="name">slot</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">slot</span> <span class="attr">name</span>=<span class="string">&quot;foot&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">h1</span>&gt;</span>这个是有名foot插槽<span class="tag">&lt;/<span class="name">h1</span>&gt;</span><span class="tag">&lt;/<span class="name">slot</span>&gt;</span> </span><br><span class="line">   <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="逻辑结构-4"><a href="#逻辑结构-4" class="headerlink" title="逻辑结构"></a>逻辑结构</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">new</span> <span class="title class_">Vue</span>(&#123;</span><br><span class="line">    <span class="attr">el</span>: <span class="string">&#x27;#app&#x27;</span>,</span><br><span class="line">    <span class="attr">components</span>:&#123;</span><br><span class="line">        <span class="attr">test</span>:&#123;</span><br><span class="line">            <span class="attr">template</span>:<span class="string">&quot;#test&quot;</span></span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="attr">test1</span>:&#123;</span><br><span class="line">            <span class="attr">template</span>:<span class="string">&quot;#test1&quot;</span></span><br><span class="line">        &#125;,</span><br><span class="line">    &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
          <category> Vue </category>
          
      </categories>
      
      
        <tags>
            
            <tag> vue </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>生命周期</title>
      <link href="/Lutianyao/blog/2022/11/13/02.%E5%89%8D%E7%AB%AF/02.Vue/06.%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F/"/>
      <url>/Lutianyao/blog/2022/11/13/02.%E5%89%8D%E7%AB%AF/02.Vue/06.%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F/</url>
      
        <content type="html"><![CDATA[<h1 id="生命周期"><a href="#生命周期" class="headerlink" title="生命周期"></a>生命周期</h1><p><img src="/Lutianyao/blog/img/life1.png" alt="img"></p><blockquote><p>vue 1.0及 vue 2.0生命周期对比</p></blockquote><p><img src="/Lutianyao/blog/img/life2.png" alt="img"></p><blockquote><p>页面结构</p></blockquote><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">v-model</span>=<span class="string">&quot;message&quot;</span> /&gt;</span></span><br><span class="line">    &#123;&#123;message&#125;&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><blockquote><p>数据结构</p></blockquote><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> app = <span class="keyword">new</span> <span class="title class_">Vue</span>(&#123;</span><br><span class="line">        <span class="attr">el</span>: <span class="string">&#x27;#app&#x27;</span>,</span><br><span class="line">        <span class="attr">data</span>: &#123;</span><br><span class="line">            message : <span class="string">&quot;hello world&quot;</span></span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="title function_">beforeCreate</span>(<span class="params"></span>) </span><br><span class="line">        &#123;</span><br><span class="line">            <span class="variable language_">console</span>.<span class="title function_">group</span>(<span class="string">&#x27;beforeCreate 创建前状态===============》&#x27;</span>);</span><br><span class="line">            <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;%c%s&quot;</span>, <span class="string">&quot;color:red&quot;</span> , <span class="string">&quot;el     : &quot;</span> + <span class="variable language_">this</span>.<span class="property">$el</span>); <span class="comment">//undefined</span></span><br><span class="line">            <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;%c%s&quot;</span>, <span class="string">&quot;color:red&quot;</span>,<span class="string">&quot;data   : &quot;</span> + <span class="variable language_">this</span>.<span class="property">$data</span>); <span class="comment">//undefined </span></span><br><span class="line">            <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;%c%s&quot;</span>, <span class="string">&quot;color:red&quot;</span>,<span class="string">&quot;message: &quot;</span> + <span class="variable language_">this</span>.<span class="property">message</span>)  </span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="title function_">created</span>(<span class="params"></span>) </span><br><span class="line">        &#123;</span><br><span class="line">            <span class="variable language_">console</span>.<span class="title function_">group</span>(<span class="string">&#x27;created 创建完毕状态===============》&#x27;</span>);</span><br><span class="line">            <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;%c%s&quot;</span>, <span class="string">&quot;color:red&quot;</span>,<span class="string">&quot;el     : &quot;</span> + <span class="variable language_">this</span>.<span class="property">$el</span>); <span class="comment">//undefined</span></span><br><span class="line">            <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;%c%s&quot;</span>, <span class="string">&quot;color:red&quot;</span>,<span class="string">&quot;data   : &quot;</span> + <span class="variable language_">this</span>.<span class="property">$data</span>); <span class="comment">//已被初始化 </span></span><br><span class="line">            <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;%c%s&quot;</span>, <span class="string">&quot;color:red&quot;</span>,<span class="string">&quot;message: &quot;</span> + <span class="variable language_">this</span>.<span class="property">message</span>); <span class="comment">//已被初始化</span></span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="title function_">beforeMount</span>(<span class="params"></span>) </span><br><span class="line">        &#123;</span><br><span class="line">            <span class="variable language_">console</span>.<span class="title function_">group</span>(<span class="string">&#x27;beforeMount 挂载前状态===============》&#x27;</span>);</span><br><span class="line">            <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;%c%s&quot;</span>, <span class="string">&quot;color:red&quot;</span>,<span class="string">&quot;el     : &quot;</span> + (<span class="variable language_">this</span>.<span class="property">$el</span>)); <span class="comment">//已被初始化</span></span><br><span class="line">            <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="variable language_">this</span>.<span class="property">$el</span>);</span><br><span class="line">            <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;%c%s&quot;</span>, <span class="string">&quot;color:red&quot;</span>,<span class="string">&quot;data   : &quot;</span> + <span class="variable language_">this</span>.<span class="property">$data</span>); <span class="comment">//已被初始化  </span></span><br><span class="line">            <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;%c%s&quot;</span>, <span class="string">&quot;color:red&quot;</span>,<span class="string">&quot;message: &quot;</span> + <span class="variable language_">this</span>.<span class="property">message</span>); <span class="comment">//已被初始化  </span></span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="title function_">mounted</span>(<span class="params"></span>) </span><br><span class="line">        &#123;</span><br><span class="line">            <span class="variable language_">console</span>.<span class="title function_">group</span>(<span class="string">&#x27;mounted 挂载结束状态===============》&#x27;</span>);</span><br><span class="line">            <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;%c%s&quot;</span>, <span class="string">&quot;color:red&quot;</span>,<span class="string">&quot;el     : &quot;</span> + <span class="variable language_">this</span>.<span class="property">$el</span>); <span class="comment">//已被初始化</span></span><br><span class="line">            <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="variable language_">this</span>.<span class="property">$el</span>);    </span><br><span class="line">            <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;%c%s&quot;</span>, <span class="string">&quot;color:red&quot;</span>,<span class="string">&quot;data   : &quot;</span> + <span class="variable language_">this</span>.<span class="property">$data</span>); <span class="comment">//已被初始化</span></span><br><span class="line">            <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;%c%s&quot;</span>, <span class="string">&quot;color:red&quot;</span>,<span class="string">&quot;message: &quot;</span> + <span class="variable language_">this</span>.<span class="property">message</span>); <span class="comment">//已被初始化 </span></span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="title function_">beforeUpdate</span>(<span class="params"></span>) </span><br><span class="line">        &#123;</span><br><span class="line">            <span class="variable language_">console</span>.<span class="title function_">group</span>(<span class="string">&#x27;beforeUpdate 更新前状态===============》&#x27;</span>);</span><br><span class="line">            <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;%c%s&quot;</span>, <span class="string">&quot;color:red&quot;</span>,<span class="string">&quot;el     : &quot;</span> + <span class="variable language_">this</span>.<span class="property">$el</span>);</span><br><span class="line">            <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="variable language_">this</span>.<span class="property">$el</span>);   </span><br><span class="line">            <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;%c%s&quot;</span>, <span class="string">&quot;color:red&quot;</span>,<span class="string">&quot;data   : &quot;</span> + <span class="variable language_">this</span>.<span class="property">$data</span>); </span><br><span class="line">            <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;%c%s&quot;</span>, <span class="string">&quot;color:red&quot;</span>,<span class="string">&quot;message: &quot;</span> + <span class="variable language_">this</span>.<span class="property">message</span>); </span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="title function_">updated</span>(<span class="params"></span>) </span><br><span class="line">        &#123;</span><br><span class="line">            <span class="variable language_">console</span>.<span class="title function_">group</span>(<span class="string">&#x27;updated 更新完成状态===============》&#x27;</span>);</span><br><span class="line">            <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;%c%s&quot;</span>, <span class="string">&quot;color:red&quot;</span>,<span class="string">&quot;el     : &quot;</span> + <span class="variable language_">this</span>.<span class="property">$el</span>);</span><br><span class="line">            <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="variable language_">this</span>.<span class="property">$el</span>); </span><br><span class="line">            <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;%c%s&quot;</span>, <span class="string">&quot;color:red&quot;</span>,<span class="string">&quot;data   : &quot;</span> + <span class="variable language_">this</span>.<span class="property">$data</span>); </span><br><span class="line">            <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;%c%s&quot;</span>, <span class="string">&quot;color:red&quot;</span>,<span class="string">&quot;message: &quot;</span> + <span class="variable language_">this</span>.<span class="property">message</span>); </span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="title function_">beforeDestroy</span>(<span class="params"></span>) </span><br><span class="line">        &#123;</span><br><span class="line">            <span class="variable language_">console</span>.<span class="title function_">group</span>(<span class="string">&#x27;beforeDestroy 销毁前状态===============》&#x27;</span>);</span><br><span class="line">            <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;%c%s&quot;</span>, <span class="string">&quot;color:red&quot;</span>,<span class="string">&quot;el     : &quot;</span> + <span class="variable language_">this</span>.<span class="property">$el</span>);</span><br><span class="line">            <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="variable language_">this</span>.<span class="property">$el</span>);    </span><br><span class="line">            <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;%c%s&quot;</span>, <span class="string">&quot;color:red&quot;</span>,<span class="string">&quot;data   : &quot;</span> + <span class="variable language_">this</span>.<span class="property">$data</span>); </span><br><span class="line">            <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;%c%s&quot;</span>, <span class="string">&quot;color:red&quot;</span>,<span class="string">&quot;message: &quot;</span> + <span class="variable language_">this</span>.<span class="property">message</span>); </span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="title function_">destroyed</span>(<span class="params"></span>) </span><br><span class="line">        &#123;</span><br><span class="line">            <span class="variable language_">console</span>.<span class="title function_">group</span>(<span class="string">&#x27;destroyed 销毁完成状态===============》&#x27;</span>);</span><br><span class="line">            <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;%c%s&quot;</span>, <span class="string">&quot;color:red&quot;</span>,<span class="string">&quot;el     : &quot;</span> + <span class="variable language_">this</span>.<span class="property">$el</span>);</span><br><span class="line">            <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="variable language_">this</span>.<span class="property">$el</span>);  </span><br><span class="line">            <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;%c%s&quot;</span>, <span class="string">&quot;color:red&quot;</span>,<span class="string">&quot;data   : &quot;</span> + <span class="variable language_">this</span>.<span class="property">$data</span>); </span><br><span class="line">            <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;%c%s&quot;</span>, <span class="string">&quot;color:red&quot;</span>,<span class="string">&quot;message: &quot;</span> + <span class="variable language_">this</span>.<span class="property">message</span>)</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;)</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
          <category> Vue </category>
          
      </categories>
      
      
        <tags>
            
            <tag> vue </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>基本介绍</title>
      <link href="/Lutianyao/blog/2022/11/13/02.%E5%89%8D%E7%AB%AF/02.Vue/05.%E5%9F%BA%E6%9C%AC%E4%BB%8B%E7%BB%8D/"/>
      <url>/Lutianyao/blog/2022/11/13/02.%E5%89%8D%E7%AB%AF/02.Vue/05.%E5%9F%BA%E6%9C%AC%E4%BB%8B%E7%BB%8D/</url>
      
        <content type="html"><![CDATA[<h1 id="基本介绍"><a href="#基本介绍" class="headerlink" title="基本介绍"></a>基本介绍</h1><h4 id="手册链接"><a href="#手册链接" class="headerlink" title="手册链接"></a>手册链接</h4><ul><li>Vuejs官网：<a href="http://vuejs.org/">http://vuejs.org/</a></li><li>Vuejs中文网：<a href="http://cn.vuejs.org/">http://cn.vuejs.org/</a></li><li>Vite中文网：<a href="https://vitejs.cn/">https://vitejs.cn/</a></li><li>Vue-CLI：<a href="https://cli.vuejs.org/zh/">https://cli.vuejs.org/zh/</a></li><li>Vue-Router：<a href="https://router.vuejs.org/zh/">https://router.vuejs.org/zh/</a></li><li>Vuex：<a href="https://vuex.vuejs.org/zh/">https://vuex.vuejs.org/zh/</a></li></ul><p><strong>MVC</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">视图（View）：用户界面</span><br><span class="line">控制器（Controller）：业务逻辑</span><br><span class="line">模型（Model）：数据保存</span><br></pre></td></tr></table></figure><p><img src="/Lutianyao/blog/img/mvc.png" alt="img"></p><p><strong>MVVM</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">MVVM分为三个部分：分别是</span><br><span class="line">M（Model，模型层 ）</span><br><span class="line">V（View，视图层）</span><br><span class="line">VM（ViewModel，V与M连接的桥梁，也可以看作为控制器）</span><br><span class="line"></span><br><span class="line">1、 M：模型层，主要负责业务数据相关；</span><br><span class="line">2、 V：视图层，顾名思义，负责视图相关，细分下来就是html+css层；</span><br><span class="line">3、 VM：V与M沟通的桥梁，负责监听M或者V的修改，是实现MVVM双向绑定的要点；</span><br><span class="line"></span><br><span class="line">MVVM支持双向绑定，意思就是当M层数据进行修改时，VM层会监测到变化，并且通知V层进行相应的修改，</span><br><span class="line">反之修改V层则会通知M层数据进行修改，以此也实现了视图与模型层的相互解耦；</span><br></pre></td></tr></table></figure><p><img src="/Lutianyao/blog/img/mvvm.png" alt="img"></p>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
          <category> Vue </category>
          
      </categories>
      
      
        <tags>
            
            <tag> vue </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>视图</title>
      <link href="/Lutianyao/blog/2022/11/13/01.%E5%90%8E%E7%AB%AF/04.ThinkPHP/06.%E8%A7%86%E5%9B%BE/"/>
      <url>/Lutianyao/blog/2022/11/13/01.%E5%90%8E%E7%AB%AF/04.ThinkPHP/06.%E8%A7%86%E5%9B%BE/</url>
      
        <content type="html"><![CDATA[<h1 id="视图"><a href="#视图" class="headerlink" title="视图"></a>视图</h1><h2 id="视图模板"><a href="#视图模板" class="headerlink" title="视图模板"></a>视图模板</h2><p>视图功能由<code>\think\View</code>类配合视图驱动（也即模板引擎驱动）类一起完成，新版仅内置了<code>PHP</code>原生模板引擎（主要用于内置的异常页面输出），如果需要使用其它的模板引擎需要单独安装相应的模板引擎扩展。</p><p>如果你需要使用<code>think-template</code>模板引擎，只需要安装think-view 模板引擎驱动。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">composer <span class="keyword">require</span> topthink/think-view</span><br></pre></td></tr></table></figure><p>视图相关的配置在配置目录的<code>config/view.php</code>配置文件中进行定义。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">// +----------------------------------------------------------------------</span></span><br><span class="line"><span class="comment">// | 模板设置</span></span><br><span class="line"><span class="comment">// +----------------------------------------------------------------------</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> [</span><br><span class="line">    <span class="comment">// 模板引擎类型使用Think</span></span><br><span class="line">    <span class="string">&#x27;type&#x27;</span>          =&gt; <span class="string">&#x27;Think&#x27;</span>,</span><br><span class="line">    <span class="comment">// 默认模板渲染规则 1 解析为小写+下划线 2 全部转换小写 3 保持操作方法</span></span><br><span class="line">    <span class="string">&#x27;auto_rule&#x27;</span>     =&gt; <span class="number">1</span>,</span><br><span class="line">    <span class="comment">// 模板目录名</span></span><br><span class="line">    <span class="string">&#x27;view_dir_name&#x27;</span> =&gt; <span class="string">&#x27;view&#x27;</span>,</span><br><span class="line">    <span class="comment">// 模板后缀</span></span><br><span class="line">    <span class="string">&#x27;view_suffix&#x27;</span>   =&gt; <span class="string">&#x27;html&#x27;</span>,</span><br><span class="line">    <span class="comment">// 模板文件名分隔符</span></span><br><span class="line">    <span class="string">&#x27;view_depr&#x27;</span>     =&gt; DIRECTORY_SEPARATOR,</span><br><span class="line">    <span class="comment">// 模板引擎普通标签开始标记</span></span><br><span class="line">    <span class="string">&#x27;tpl_begin&#x27;</span>     =&gt; <span class="string">&#x27;&#123;&#x27;</span>,</span><br><span class="line">    <span class="comment">// 模板引擎普通标签结束标记</span></span><br><span class="line">    <span class="string">&#x27;tpl_end&#x27;</span>       =&gt; <span class="string">&#x27;&#125;&#x27;</span>,</span><br><span class="line">    <span class="comment">// 标签库标签开始标记</span></span><br><span class="line">    <span class="string">&#x27;taglib_begin&#x27;</span>  =&gt; <span class="string">&#x27;&#123;&#x27;</span>,</span><br><span class="line">    <span class="comment">// 标签库标签结束标记</span></span><br><span class="line">    <span class="string">&#x27;taglib_end&#x27;</span>    =&gt; <span class="string">&#x27;&#125;&#x27;</span>,</span><br><span class="line">];</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>通常可以直接使用<code>think\facade\View</code>来操作视图。</p><h2 id="模板变量"><a href="#模板变量" class="headerlink" title="模板变量"></a>模板变量</h2><h3 id="模板赋值"><a href="#模板赋值" class="headerlink" title="模板赋值"></a>模板赋值</h3><p>模板中的变量（除了一些系统变量外）必须先进行模板赋值后才能使用，可以使用<code>assign</code>方法进行全局模板变量赋值</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">namespace</span> <span class="title class_">app</span>\<span class="title class_">controller</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 引用视图</span></span><br><span class="line"><span class="keyword">use</span> <span class="title">think</span>\<span class="title">facade</span>\<span class="title">View</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Index</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">index</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="comment">// 模板变量赋值</span></span><br><span class="line">        <span class="title class_">View</span>::<span class="title function_ invoke__">assign</span>(<span class="string">&#x27;name&#x27;</span>,<span class="string">&#x27;ThinkPHP&#x27;</span>);</span><br><span class="line">        <span class="title class_">View</span>::<span class="title function_ invoke__">assign</span>(<span class="string">&#x27;email&#x27;</span>,<span class="string">&#x27;thinkphp@qq.com&#x27;</span>);</span><br><span class="line">        <span class="comment">// 或者批量赋值</span></span><br><span class="line">        <span class="title class_">View</span>::<span class="title function_ invoke__">assign</span>([</span><br><span class="line">            <span class="string">&#x27;name&#x27;</span>  =&gt; <span class="string">&#x27;ThinkPHP&#x27;</span>,</span><br><span class="line">            <span class="string">&#x27;email&#x27;</span> =&gt; <span class="string">&#x27;thinkphp@qq.com&#x27;</span></span><br><span class="line">        ]);</span><br><span class="line">        <span class="comment">// 模板输出</span></span><br><span class="line">        <span class="keyword">return</span> <span class="title class_">View</span>::<span class="title function_ invoke__">fetch</span>(<span class="string">&#x27;index&#x27;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><code>assign</code>方法赋值属于全局变量赋值，如果你需要单次赋值的话，可以直接在fetch方法中传入</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">namespace</span> <span class="title class_">app</span>\<span class="title class_">controller</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">use</span> <span class="title">think</span>\<span class="title">facade</span>\<span class="title">View</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Index</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">index</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="comment">// 模板输出并变量赋值</span></span><br><span class="line">        <span class="keyword">return</span> <span class="title class_">View</span>::<span class="title function_ invoke__">fetch</span>(<span class="string">&#x27;index&#x27;</span>, [</span><br><span class="line">            <span class="string">&#x27;name&#x27;</span>  =&gt; <span class="string">&#x27;ThinkPHP&#x27;</span>,</span><br><span class="line">            <span class="string">&#x27;email&#x27;</span> =&gt; <span class="string">&#x27;thinkphp@qq.com&#x27;</span></span><br><span class="line">        ]);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="助手函数"><a href="#助手函数" class="headerlink" title="助手函数"></a>助手函数</h3><p>如果使用<code>view</code>助手函数渲染输出的话，可以使用下面的方法进行模板变量赋值</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">return view(&#x27;index&#x27;, [</span><br><span class="line">    &#x27;name&#x27;  =&gt; &#x27;ThinkPHP&#x27;,</span><br><span class="line">    &#x27;email&#x27; =&gt; &#x27;thinkphp@qq.com&#x27;</span><br><span class="line">]);</span><br></pre></td></tr></table></figure><h2 id="系统变量输出"><a href="#系统变量输出" class="headerlink" title="系统变量输出"></a>系统变量输出</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&#123;<span class="variable">$Request</span>.server.script_name&#125; <span class="comment">// 输出$_SERVER[&#x27;SCRIPT_NAME&#x27;]变量</span></span><br><span class="line">&#123;<span class="variable">$Request</span>.session.user_id&#125; <span class="comment">// 输出$_SESSION[&#x27;user_id&#x27;]变量</span></span><br><span class="line">&#123;<span class="variable">$Request</span>.get.page&#125; <span class="comment">// 输出$_GET[&#x27;page&#x27;]变量</span></span><br><span class="line">&#123;<span class="variable">$Request</span>.cookie.name&#125;  <span class="comment">// 输出$_COOKIE[&#x27;name&#x27;]变量</span></span><br></pre></td></tr></table></figure><h2 id="在模板使用函数"><a href="#在模板使用函数" class="headerlink" title="在模板使用函数"></a>在模板使用函数</h2><p><code>app\index\controller\Index.php</code></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">declare</span>(strict_types=<span class="number">1</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title class_">app</span>\<span class="title class_">index</span>\<span class="title class_">controller</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">use</span> <span class="title">app</span>\<span class="title">BaseController</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">think</span>\<span class="title">facade</span>\<span class="title">View</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Index</span> <span class="keyword">extends</span> <span class="title">BaseController</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">index</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="comment">// 模拟数据</span></span><br><span class="line">        <span class="variable">$data</span> = [</span><br><span class="line">            <span class="string">&#x27;id&#x27;</span> =&gt; <span class="number">1</span>,</span><br><span class="line">            <span class="string">&#x27;username&#x27;</span> =&gt; <span class="string">&#x27;Admin&#x27;</span>,</span><br><span class="line">            <span class="string">&#x27;nickname&#x27;</span> =&gt; <span class="string">&#x27;管理员&#x27;</span>,</span><br><span class="line">            <span class="string">&#x27;sex&#x27;</span> =&gt; <span class="string">&#x27;1&#x27;</span>,</span><br><span class="line">            <span class="string">&#x27;createtime&#x27;</span> =&gt; <span class="string">&#x27;1647519544&#x27;</span></span><br><span class="line">        ];</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 输出视图并且赋值</span></span><br><span class="line">        <span class="keyword">return</span> <span class="title class_">View</span>::<span class="title function_ invoke__">fetch</span>(<span class="string">&#x27;&#x27;</span>,[<span class="string">&#x27;data&#x27;</span> =&gt; <span class="variable">$data</span>]);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><code>app\index\view\index\index.html</code></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;IE=edge&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>使用函数<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 转换大写 --&gt;</span></span><br><span class="line">    &#123;$data.username|upper&#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- 转换小写 --&gt;</span></span><br><span class="line">    &#123;$data.username|lower&#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">&lt;!-- 日期格式化 --&gt;</span></span><br><span class="line">    &#123;$data.createtime|date=&quot;Y-m-d&quot;&#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- 截取字符串 --&gt;</span></span><br><span class="line">    &#123;$data.createtime|substr=0,3&#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- 三元运算符 --&gt;</span></span><br><span class="line">    &#123;$data.sex == 1 ? &#x27;男&#x27; : &#x27;女&#x27;&#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- 原样输出 --&gt;</span></span><br><span class="line">    &#123;literal&#125;</span><br><span class="line">        Hello,&#123;$data.username&#125;！</span><br><span class="line">    &#123;/literal&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="模板注释"><a href="#模板注释" class="headerlink" title="模板注释"></a>模板注释</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 单行注释 --&gt;</span></span><br><span class="line">&#123;/\* 注释内容 \*/ &#125; 或 &#123;// 注释内容 &#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 多行注释 --&gt;</span></span><br><span class="line">&#123;/* 这是模板</span><br><span class="line">注释内容*/ &#125;</span><br></pre></td></tr></table></figure><h2 id="包含文件"><a href="#包含文件" class="headerlink" title="包含文件"></a>包含文件</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 注意：包含的模板文件中不能再使用模板布局或者模板继承</span></span><br><span class="line">&#123;<span class="keyword">include</span> file=<span class="string">&#x27;模版文件1,模版文件2,...&#x27;</span> /&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 使用模版表达式</span></span><br><span class="line">&#123;<span class="keyword">include</span> file=<span class="string">&quot;public/header&quot;</span> /&#125; <span class="comment">// 包含头部模版header</span></span><br><span class="line">&#123;<span class="keyword">include</span> file=<span class="string">&quot;public/menu&quot;</span> /&#125; <span class="comment">// 包含菜单模版menu</span></span><br><span class="line">&#123;<span class="keyword">include</span> file=<span class="string">&quot;blue/public/menu&quot;</span> /&#125; <span class="comment">// 包含blue主题下面的menu模版</span></span><br></pre></td></tr></table></figure><h2 id="模板输出替换"><a href="#模板输出替换" class="headerlink" title="模板输出替换"></a>模板输出替换</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&#x27;tpl_replace_string&#x27;</span>  =&gt;  [</span><br><span class="line">    <span class="string">&#x27;__STATIC__&#x27;</span>=&gt;<span class="string">&#x27;/static&#x27;</span>,</span><br><span class="line"> <span class="string">&#x27;__JS__&#x27;</span> =&gt; <span class="string">&#x27;/static/js&#x27;</span>,</span><br><span class="line">]</span><br></pre></td></tr></table></figure><h2 id="内置标签"><a href="#内置标签" class="headerlink" title="内置标签"></a>内置标签</h2><p>变量输出使用普通标签就足够了，但是要完成其他的控制、循环和判断功能，就需要借助模板引擎的标签库功能了，系统内置标签库的所有标签无需引入标签库即可直接使用</p><h3 id="内置标签-1"><a href="#内置标签-1" class="headerlink" title="内置标签"></a>内置标签</h3><table><thead><tr><th align="left">标签名</th><th align="left">作用</th><th align="left">包含属性</th></tr></thead><tbody><tr><td align="left">include</td><td align="left">包含外部模板文件（闭合）</td><td align="left">file</td></tr><tr><td align="left">load</td><td align="left">导入资源文件（闭合 包括js css import别名）</td><td align="left">file,href,type,value,basepath</td></tr><tr><td align="left">volist</td><td align="left">循环数组数据输出</td><td align="left">name,id,offset,length,key,mod</td></tr><tr><td align="left">foreach</td><td align="left">数组或对象遍历输出</td><td align="left">name,item,key</td></tr><tr><td align="left">for</td><td align="left">For循环数据输出</td><td align="left">name,from,to,before,step</td></tr><tr><td align="left">switch</td><td align="left">分支判断输出</td><td align="left">name</td></tr><tr><td align="left">case</td><td align="left">分支判断输出（必须和switch配套使用）</td><td align="left">value,break</td></tr><tr><td align="left">default</td><td align="left">默认情况输出（闭合 必须和switch配套使用）</td><td align="left">无</td></tr><tr><td align="left">compare</td><td align="left">比较输出（包括eq neq lt gt egt elt heq nheq等别名）</td><td align="left">name,value,type</td></tr><tr><td align="left">range</td><td align="left">范围判断输出（包括in notin between notbetween别名）</td><td align="left">name,value,type</td></tr><tr><td align="left">present</td><td align="left">判断是否赋值</td><td align="left">name</td></tr><tr><td align="left">notpresent</td><td align="left">判断是否尚未赋值</td><td align="left">name</td></tr><tr><td align="left">empty</td><td align="left">判断数据是否为空</td><td align="left">name</td></tr><tr><td align="left">notempty</td><td align="left">判断数据是否不为空</td><td align="left">name</td></tr><tr><td align="left">defined</td><td align="left">判断常量是否定义</td><td align="left">name</td></tr><tr><td align="left">notdefined</td><td align="left">判断常量是否未定义</td><td align="left">name</td></tr><tr><td align="left">define</td><td align="left">常量定义（闭合）</td><td align="left">name,value</td></tr><tr><td align="left">assign</td><td align="left">变量赋值（闭合）</td><td align="left">name,value</td></tr><tr><td align="left">if</td><td align="left">条件判断输出</td><td align="left">condition</td></tr><tr><td align="left">elseif</td><td align="left">条件判断输出（闭合 必须和if标签配套使用）</td><td align="left">condition</td></tr><tr><td align="left">else</td><td align="left">条件不成立输出（闭合 可用于其他标签）</td><td align="left">无</td></tr><tr><td align="left">php</td><td align="left">使用php代码</td><td align="left">无</td></tr></tbody></table><h3 id="用法示例"><a href="#用法示例" class="headerlink" title="用法示例"></a>用法示例</h3><p><code>app\index\controller\Index.php</code></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">declare</span>(strict_types=<span class="number">1</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title class_">app</span>\<span class="title class_">index</span>\<span class="title class_">controller</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">use</span> <span class="title">app</span>\<span class="title">BaseController</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">think</span>\<span class="title">facade</span>\<span class="title">View</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">app</span>\<span class="title">index</span>\<span class="title">model</span>\<span class="title">User</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Index</span> <span class="keyword">extends</span> <span class="title">BaseController</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">index</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="comment">// 查询数据</span></span><br><span class="line">        <span class="variable">$user</span> = <span class="title class_">User</span>::<span class="title function_ invoke__">select</span>();</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 输出视图并且赋值</span></span><br><span class="line">        <span class="keyword">return</span> <span class="title class_">View</span>::<span class="title function_ invoke__">fetch</span>(<span class="string">&#x27;&#x27;</span>,[<span class="string">&#x27;user&#x27;</span> =&gt; <span class="variable">$user</span>]);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><code>app\index\view\index\index.html</code></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;IE=edge&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>内置标签<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 条件判断 --&gt;</span></span><br><span class="line">    &#123;if($user)&#125;</span><br><span class="line">        <span class="tag">&lt;<span class="name">table</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">th</span>&gt;</span>id<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">th</span>&gt;</span>用户名<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">th</span>&gt;</span>昵称<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">th</span>&gt;</span>状态<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!-- foreach --&gt;</span></span><br><span class="line">            &#123;foreach $user as $key =&gt; $item&#125;</span><br><span class="line">                <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">td</span>&gt;</span>&#123;$item.id&#125;<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">td</span>&gt;</span>&#123;$item.username&#125;<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">td</span>&gt;</span>&#123;$item.nickname&#125;<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">td</span>&gt;</span></span><br><span class="line">                        <span class="comment">&lt;!-- 比较标签 --&gt;</span></span><br><span class="line">                        &#123;eq name=&quot;$item.state&quot; value=&quot;1&quot;&#125;</span><br><span class="line">                            启用</span><br><span class="line">                        &#123;else/&#125;</span><br><span class="line">                            禁用</span><br><span class="line">                        &#123;/eq&#125;</span><br><span class="line">                    <span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">            &#123;/foreach&#125;</span><br><span class="line">        <span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br><span class="line">    &#123;else /&#125;</span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span>&gt;</span>暂无数据<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    &#123;/if&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="模板布局"><a href="#模板布局" class="headerlink" title="模板布局"></a>模板布局</h2><p>hinkPHP的模板引擎内置了布局模板功能支持，可以方便的实现模板布局以及布局嵌套功能</p><h3 id="全局配置"><a href="#全局配置" class="headerlink" title="全局配置"></a>全局配置</h3><p><code>config\view.php</code></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">return</span>  [</span><br><span class="line">    ···</span><br><span class="line">    <span class="string">&#x27;layout_on&#x27;</span>     =&gt;  <span class="literal">true</span>,</span><br><span class="line">    <span class="string">&#x27;layout_name&#x27;</span>   =&gt;  <span class="string">&#x27;layout&#x27;</span>,</span><br><span class="line">]</span><br></pre></td></tr></table></figure><h3 id="应用配置"><a href="#应用配置" class="headerlink" title="应用配置"></a>应用配置</h3><p><code>app\index\config\view.php</code></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">return</span>  [</span><br><span class="line">    <span class="string">&#x27;layout_on&#x27;</span>     =&gt;  <span class="literal">true</span>,</span><br><span class="line">    <span class="string">&#x27;layout_name&#x27;</span>   =&gt;  <span class="string">&#x27;layout&#x27;</span>,</span><br><span class="line">];</span><br></pre></td></tr></table></figure><h3 id="用法示例-1"><a href="#用法示例-1" class="headerlink" title="用法示例"></a>用法示例</h3><h3 id="开启模板布局"><a href="#开启模板布局" class="headerlink" title="开启模板布局"></a>开启模板布局</h3><p><code>app\index\config\view.php</code></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">return</span>  [</span><br><span class="line">    <span class="string">&#x27;layout_on&#x27;</span>     =&gt;  <span class="literal">true</span>,</span><br><span class="line">    <span class="string">&#x27;layout_name&#x27;</span>   =&gt;  <span class="string">&#x27;layout&#x27;</span>,</span><br><span class="line">];</span><br></pre></td></tr></table></figure><h3 id="定义layout-html"><a href="#定义layout-html" class="headerlink" title="定义layout.html"></a>定义<code>layout.html</code></h3><p><code>app\index\view\layout.html</code></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;IE=edge&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>模板布局<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    &#123;include file=&quot;common/header&quot; /&#125;</span><br><span class="line">        &#123;__CONTENT__&#125;</span><br><span class="line">    &#123;include file=&quot;common/footer&quot; /&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="公共内容"><a href="#公共内容" class="headerlink" title="公共内容"></a>公共内容</h3><p><code>app\index\view\common\header.html</code></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">    这是头部内容</span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><p><code>app\index\view\common\footer.html</code></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">    这是底部内容</span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="主体内容"><a href="#主体内容" class="headerlink" title="主体内容"></a>主体内容</h3><p><code>app\index\view\index\index.html</code></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 条件判断 --&gt;</span></span><br><span class="line">&#123;if($user)&#125;</span><br><span class="line">    <span class="tag">&lt;<span class="name">table</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">th</span>&gt;</span>id<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">th</span>&gt;</span>用户名<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">th</span>&gt;</span>昵称<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">th</span>&gt;</span>状态<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- foreach --&gt;</span></span><br><span class="line">        &#123;foreach $user as $key =&gt; $item&#125;</span><br><span class="line">            <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">td</span>&gt;</span>&#123;$item.id&#125;<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">td</span>&gt;</span>&#123;$item.username&#125;<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">td</span>&gt;</span>&#123;$item.nickname&#125;<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">td</span>&gt;</span></span><br><span class="line">                    <span class="comment">&lt;!-- 比较标签 --&gt;</span></span><br><span class="line">                    &#123;eq name=&quot;$item.state&quot; value=&quot;1&quot;&#125;</span><br><span class="line">                        启用</span><br><span class="line">                    &#123;else/&#125;</span><br><span class="line">                        禁用</span><br><span class="line">                    &#123;/eq&#125;</span><br><span class="line">                <span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">        &#123;/foreach&#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br><span class="line">&#123;else /&#125;</span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>暂无数据<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">&#123;/if&#125;</span><br></pre></td></tr></table></figure><h3 id="控制器"><a href="#控制器" class="headerlink" title="控制器"></a>控制器</h3><p><code>app\index\controller\Index.php</code></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title class_">app</span>\<span class="title class_">index</span>\<span class="title class_">controller</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">use</span> <span class="title">app</span>\<span class="title">BaseController</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">think</span>\<span class="title">facade</span>\<span class="title">View</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">app</span>\<span class="title">index</span>\<span class="title">model</span>\<span class="title">User</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Index</span> <span class="keyword">extends</span> <span class="title">BaseController</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">index</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="comment">// 查询数据</span></span><br><span class="line">        <span class="variable">$user</span> = <span class="title class_">User</span>::<span class="title function_ invoke__">select</span>();</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 输出视图并且赋值</span></span><br><span class="line">        <span class="keyword">return</span> <span class="title class_">View</span>::<span class="title function_ invoke__">fetch</span>(<span class="string">&#x27;&#x27;</span>,[<span class="string">&#x27;user&#x27;</span> =&gt; <span class="variable">$user</span>]);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">add</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="comment">// 临时关闭当前模板的布局功能</span></span><br><span class="line">        <span class="title class_">View</span>::<span class="title function_ invoke__">config</span>([<span class="string">&#x27;layout_on&#x27;</span> =&gt; <span class="literal">false</span>]);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> <span class="title class_">View</span>::<span class="title function_ invoke__">fetch</span>();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在不开启layout_on布局模板之前，会直接渲染<code>app\index\view\index\index.html</code>模板文件,开启之后，首先会渲染<code>app\index\view\layout.html</code>模板</p><h3 id="更改模板布局配置"><a href="#更改模板布局配置" class="headerlink" title="更改模板布局配置"></a>更改模板布局配置</h3><p>如果有需要更改模板布局配置，可以参考下面</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">return</span> [</span><br><span class="line">    <span class="string">&#x27;layout_on&#x27;</span>     =&gt;  <span class="literal">true</span>,</span><br><span class="line">    <span class="comment">// 指定其他位置的布局模板</span></span><br><span class="line">    <span class="string">&#x27;layout_name&#x27;</span>   =&gt;  <span class="string">&#x27;layout/layoutname&#x27;</span>,</span><br><span class="line">    <span class="comment">// 更改输出变量</span></span><br><span class="line">    <span class="string">&#x27;layout_item&#x27;</span>   =&gt;  <span class="string">&#x27;&#123;__REPLACE__&#125;&#x27;</span></span><br><span class="line">]</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 后端 </category>
          
          <category> ThinkPHP </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ThinkPHP </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>模型</title>
      <link href="/Lutianyao/blog/2022/11/13/01.%E5%90%8E%E7%AB%AF/04.ThinkPHP/05.%E6%A8%A1%E5%9E%8B/"/>
      <url>/Lutianyao/blog/2022/11/13/01.%E5%90%8E%E7%AB%AF/04.ThinkPHP/05.%E6%A8%A1%E5%9E%8B/</url>
      
        <content type="html"><![CDATA[<h1 id="模型"><a href="#模型" class="headerlink" title="模型"></a>模型</h1><p>模型类通常完成实际的业务逻辑和数据封装，并返回和格式无关的数据</p><h2 id="定义模型"><a href="#定义模型" class="headerlink" title="定义模型"></a>定义模型</h2><p>定义一个<code>User</code>模型</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">namespace</span> <span class="title class_">app</span>\<span class="title class_">model</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 引用底层模型</span></span><br><span class="line"><span class="keyword">use</span> <span class="title">think</span>\<span class="title">Model</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">User</span> <span class="keyword">extends</span> <span class="title">Model</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="comment">// 设置当前模型对应的完整数据表名称</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="variable">$table</span> = <span class="string">&#x27;think_user&#x27;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="模型的数据操作"><a href="#模型的数据操作" class="headerlink" title="模型的数据操作"></a>模型的数据操作</h2><h3 id="新增"><a href="#新增" class="headerlink" title="新增"></a>新增</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 添加一条数据</span></span><br><span class="line"><span class="variable">$user</span>           = <span class="keyword">new</span> <span class="title class_">User</span>;</span><br><span class="line"><span class="variable">$user</span>-&gt;name     = <span class="string">&#x27;thinkphp&#x27;</span>;</span><br><span class="line"><span class="variable">$user</span>-&gt;email    = <span class="string">&#x27;thinkphp@qq.com&#x27;</span>;</span><br><span class="line"><span class="variable">$user</span>-&gt;<span class="title function_ invoke__">save</span>();</span><br><span class="line"></span><br><span class="line"><span class="comment">// 直接传入数据到save方法批量赋值</span></span><br><span class="line"><span class="variable">$user</span> = <span class="keyword">new</span> <span class="title class_">User</span>;</span><br><span class="line"><span class="variable">$user</span>-&gt;<span class="title function_ invoke__">save</span>([</span><br><span class="line">    <span class="string">&#x27;name&#x27;</span>  =&gt;  <span class="string">&#x27;thinkphp&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;email&#x27;</span> =&gt;  <span class="string">&#x27;thinkphp@qq.com&#x27;</span></span><br><span class="line">]);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 获取自增ID</span></span><br><span class="line"><span class="variable">$user</span>           = <span class="keyword">new</span> <span class="title class_">User</span>;</span><br><span class="line"><span class="variable">$user</span>-&gt;name     = <span class="string">&#x27;thinkphp&#x27;</span>;</span><br><span class="line"><span class="variable">$user</span>-&gt;email    = <span class="string">&#x27;thinkphp@qq.com&#x27;</span>;</span><br><span class="line"><span class="variable">$user</span>-&gt;<span class="title function_ invoke__">save</span>();</span><br><span class="line"><span class="comment">// 获取自增ID</span></span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$user</span>-&gt;id;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 如果你的主键不是id，而是user_id的话</span></span><br><span class="line"><span class="variable">$user</span>           = <span class="keyword">new</span> <span class="title class_">User</span>;</span><br><span class="line"><span class="variable">$user</span>-&gt;name     = <span class="string">&#x27;thinkphp&#x27;</span>;</span><br><span class="line"><span class="variable">$user</span>-&gt;email    = <span class="string">&#x27;thinkphp@qq.com&#x27;</span>;</span><br><span class="line"><span class="variable">$user</span>-&gt;<span class="title function_ invoke__">save</span>();</span><br><span class="line"><span class="comment">// 获取自增ID</span></span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$user</span>-&gt;user_id;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 批量添加</span></span><br><span class="line"><span class="variable">$user</span> = <span class="keyword">new</span> <span class="title class_">User</span>;</span><br><span class="line"><span class="variable">$list</span> = [</span><br><span class="line">    [<span class="string">&#x27;name&#x27;</span>=&gt;<span class="string">&#x27;thinkphp&#x27;</span>,<span class="string">&#x27;email&#x27;</span>=&gt;<span class="string">&#x27;thinkphp@qq.com&#x27;</span>],</span><br><span class="line">    [<span class="string">&#x27;name&#x27;</span>=&gt;<span class="string">&#x27;onethink&#x27;</span>,<span class="string">&#x27;email&#x27;</span>=&gt;<span class="string">&#x27;onethink@qq.com&#x27;</span>]</span><br><span class="line">];</span><br><span class="line"><span class="variable">$user</span>-&gt;<span class="title function_ invoke__">saveAll</span>(<span class="variable">$list</span>);</span><br></pre></td></tr></table></figure><h4 id="更新"><a href="#更新" class="headerlink" title="更新"></a>更新</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 查询出数据后，更改字段内容后使用save方法更新数据</span></span><br><span class="line"><span class="variable">$user</span> = <span class="title class_">User</span>::<span class="title function_ invoke__">find</span>(<span class="number">1</span>);</span><br><span class="line"><span class="variable">$user</span>-&gt;name     = <span class="string">&#x27;thinkphp&#x27;</span>;</span><br><span class="line"><span class="variable">$user</span>-&gt;email    = <span class="string">&#x27;thinkphp@qq.com&#x27;</span>;</span><br><span class="line"><span class="variable">$user</span>-&gt;<span class="title function_ invoke__">save</span>();</span><br><span class="line"></span><br><span class="line"><span class="comment">// 使用update方法</span></span><br><span class="line"><span class="variable">$user</span> = <span class="keyword">new</span> <span class="title class_">User</span>;</span><br><span class="line"><span class="variable">$data</span> = [<span class="string">&#x27;name&#x27;</span> =&gt; <span class="string">&#x27;thinkphp&#x27;</span>, <span class="string">&#x27;email&#x27;</span>=&gt;<span class="string">&#x27;thinkphp@qq.com&#x27;</span>];</span><br><span class="line"><span class="comment">// update(&#x27;更新的数据&#x27;,&#x27;更新条件&#x27;,&#x27;允许字段&#x27;,&#x27;数据表后缀&#x27;)，如果第一个参数里面有主键的话，那么第二个参数（更新条件）无需再传入</span></span><br><span class="line"><span class="variable">$user</span>-&gt;<span class="title function_ invoke__">update</span>(<span class="variable">$data</span>,[<span class="string">&#x27;id&#x27;</span> =&gt; <span class="number">1</span>]);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 批量更新数据</span></span><br><span class="line"><span class="variable">$user</span> = <span class="keyword">new</span> <span class="title class_">User</span>;</span><br><span class="line"><span class="variable">$list</span> = [</span><br><span class="line">    [<span class="string">&#x27;id&#x27;</span>=&gt;<span class="number">1</span>, <span class="string">&#x27;name&#x27;</span>=&gt;<span class="string">&#x27;thinkphp&#x27;</span>, <span class="string">&#x27;email&#x27;</span>=&gt;<span class="string">&#x27;thinkphp@qq.com&#x27;</span>],</span><br><span class="line">    [<span class="string">&#x27;id&#x27;</span>=&gt;<span class="number">2</span>, <span class="string">&#x27;name&#x27;</span>=&gt;<span class="string">&#x27;onethink&#x27;</span>, <span class="string">&#x27;email&#x27;</span>=&gt;<span class="string">&#x27;onethink@qq.com&#x27;</span>]</span><br><span class="line">];</span><br><span class="line"><span class="variable">$user</span>-&gt;<span class="title function_ invoke__">saveAll</span>(<span class="variable">$list</span>);</span><br></pre></td></tr></table></figure><h3 id="删除"><a href="#删除" class="headerlink" title="删除"></a>删除</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 查询后调用delete方法</span></span><br><span class="line"><span class="variable">$user</span> = <span class="title class_">User</span>::<span class="title function_ invoke__">find</span>(<span class="number">1</span>);</span><br><span class="line"><span class="variable">$user</span>-&gt;<span class="title function_ invoke__">delete</span>();</span><br><span class="line"></span><br><span class="line"><span class="comment">// 直接调用静态方法（根据主键删除）</span></span><br><span class="line"><span class="title class_">User</span>::<span class="title function_ invoke__">destroy</span>(<span class="number">1</span>);</span><br><span class="line"><span class="comment">// 支持批量删除多个数据</span></span><br><span class="line"><span class="title class_">User</span>::<span class="title function_ invoke__">destroy</span>([<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>]);</span><br></pre></td></tr></table></figure><h3 id="查询"><a href="#查询" class="headerlink" title="查询"></a>查询</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 取出主键为1的数据</span></span><br><span class="line"><span class="variable">$user</span> = <span class="title class_">User</span>::<span class="title function_ invoke__">find</span>(<span class="number">1</span>);</span><br><span class="line"><span class="comment">// 输出name值</span></span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$user</span>-&gt;name;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 使用查询构造器查询满足条件的数据</span></span><br><span class="line"><span class="variable">$user</span> = <span class="title class_">User</span>::<span class="title function_ invoke__">where</span>(<span class="string">&#x27;name&#x27;</span>, <span class="string">&#x27;thinkphp&#x27;</span>)-&gt;<span class="title function_ invoke__">find</span>();</span><br><span class="line"><span class="comment">// 输出name值</span></span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$user</span>-&gt;name;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 根据主键获取多个数据</span></span><br><span class="line"><span class="variable">$list</span> = <span class="title class_">User</span>::<span class="title function_ invoke__">select</span>([<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>]);</span><br><span class="line"><span class="comment">// 对数据集进行遍历操作</span></span><br><span class="line"><span class="keyword">foreach</span>(<span class="variable">$list</span> <span class="keyword">as</span> <span class="variable">$key</span>=&gt;<span class="variable">$user</span>)&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="variable">$user</span>-&gt;name;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 使用查询构造器查询</span></span><br><span class="line"><span class="variable">$list</span> = <span class="title class_">User</span>::<span class="title function_ invoke__">where</span>(<span class="string">&#x27;status&#x27;</span>, <span class="number">1</span>)-&gt;<span class="title function_ invoke__">limit</span>(<span class="number">3</span>)-&gt;<span class="title function_ invoke__">order</span>(<span class="string">&#x27;id&#x27;</span>, <span class="string">&#x27;asc&#x27;</span>)-&gt;<span class="title function_ invoke__">select</span>();</span><br><span class="line"><span class="keyword">foreach</span>(<span class="variable">$list</span> <span class="keyword">as</span> <span class="variable">$key</span>=&gt;<span class="variable">$user</span>)&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="variable">$user</span>-&gt;name;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 获取某个用户的积分</span></span><br><span class="line"><span class="title class_">User</span>::<span class="title function_ invoke__">where</span>(<span class="string">&#x27;id&#x27;</span>,<span class="number">10</span>)-&gt;<span class="title function_ invoke__">value</span>(<span class="string">&#x27;score&#x27;</span>);</span><br><span class="line"><span class="comment">// 获取某个列的所有值</span></span><br><span class="line"><span class="title class_">User</span>::<span class="title function_ invoke__">where</span>(<span class="string">&#x27;status&#x27;</span>,<span class="number">1</span>)-&gt;<span class="title function_ invoke__">column</span>(<span class="string">&#x27;name&#x27;</span>);</span><br><span class="line"><span class="comment">// 以id为索引</span></span><br><span class="line"><span class="title class_">User</span>::<span class="title function_ invoke__">where</span>(<span class="string">&#x27;status&#x27;</span>,<span class="number">1</span>)-&gt;<span class="title function_ invoke__">column</span>(<span class="string">&#x27;name&#x27;</span>,<span class="string">&#x27;id&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 聚合查询</span></span><br><span class="line"><span class="title class_">User</span>::<span class="title function_ invoke__">count</span>();</span><br><span class="line"><span class="title class_">User</span>::<span class="title function_ invoke__">where</span>(<span class="string">&#x27;status&#x27;</span>,<span class="string">&#x27;&gt;&#x27;</span>,<span class="number">0</span>)-&gt;<span class="title function_ invoke__">count</span>();</span><br><span class="line"><span class="title class_">User</span>::<span class="title function_ invoke__">where</span>(<span class="string">&#x27;status&#x27;</span>,<span class="number">1</span>)-&gt;<span class="title function_ invoke__">avg</span>(<span class="string">&#x27;score&#x27;</span>);</span><br><span class="line"><span class="title class_">User</span>::<span class="title function_ invoke__">max</span>(<span class="string">&#x27;score&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 如果你的字段不是数字类型，是使用max/min的时候，需要加上第二个参数</span></span><br><span class="line"><span class="title class_">User</span>::<span class="title function_ invoke__">max</span>(<span class="string">&#x27;name&#x27;</span>, <span class="literal">false</span>);</span><br></pre></td></tr></table></figure><h2 id="获取器"><a href="#获取器" class="headerlink" title="获取器"></a>获取器</h2><p>获取器的作用是对模型实例的（原始）数据做出自动处理的特殊方法，方法命名规范为<code>getFieldNameAttr</code>（该方法必须为<code>public</code>类型）</p><h3 id="用法示例"><a href="#用法示例" class="headerlink" title="用法示例"></a>用法示例</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">namespace</span> <span class="title class_">app</span>\<span class="title class_">model</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">use</span> <span class="title">think</span>\<span class="title">Model</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">User</span> <span class="keyword">extends</span> <span class="title">Model</span> </span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">getStatusAttr</span>(<span class="params"><span class="variable">$value</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable">$status</span> = [-<span class="number">1</span>=&gt;<span class="string">&#x27;删除&#x27;</span>,<span class="number">0</span>=&gt;<span class="string">&#x27;禁用&#x27;</span>,<span class="number">1</span>=&gt;<span class="string">&#x27;正常&#x27;</span>,<span class="number">2</span>=&gt;<span class="string">&#x27;待审核&#x27;</span>];</span><br><span class="line">        <span class="keyword">return</span> <span class="variable">$status</span>[<span class="variable">$value</span>];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>数据表的字段会自动转换为驼峰法，一般status字段的值采用数值类型，我们可以通过获取器定义，自动转换为字符串描述。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$user</span> = <span class="title class_">User</span>::<span class="title function_ invoke__">find</span>(<span class="number">1</span>);</span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$user</span>-&gt;status; <span class="comment">// 例如输出“正常”</span></span><br></pre></td></tr></table></figure><p>获取器还可以定义数据表中不存在的字段，例如</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">namespace</span> <span class="title class_">app</span>\<span class="title class_">model</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">use</span> <span class="title">think</span>\<span class="title">Model</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">User</span> <span class="keyword">extends</span> <span class="title">Model</span> </span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="comment">// 获取器方法的第二个参数传入的是当前的所有数据数组</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">getStatusTextAttr</span>(<span class="params"><span class="variable">$value</span>,<span class="variable">$data</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable">$status</span> = [-<span class="number">1</span>=&gt;<span class="string">&#x27;删除&#x27;</span>,<span class="number">0</span>=&gt;<span class="string">&#x27;禁用&#x27;</span>,<span class="number">1</span>=&gt;<span class="string">&#x27;正常&#x27;</span>,<span class="number">2</span>=&gt;<span class="string">&#x27;待审核&#x27;</span>];</span><br><span class="line">        <span class="keyword">return</span> <span class="variable">$status</span>[<span class="variable">$data</span>[<span class="string">&#x27;status&#x27;</span>]];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>我们就可以直接使用status_text字段的值了</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$user</span> = <span class="title class_">User</span>::<span class="title function_ invoke__">find</span>(<span class="number">1</span>);</span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$user</span>-&gt;status_text; <span class="comment">// 例如输出“正常”</span></span><br></pre></td></tr></table></figure><h2 id="修改器"><a href="#修改器" class="headerlink" title="修改器"></a>修改器</h2><p>和获取器相反，修改器的主要作用是对模型设置的数据对象值进行处理,修改器方法的命名规范为<code>setFieldNameAttr</code>，例如</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">namespace</span> <span class="title class_">app</span>\<span class="title class_">model</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">use</span> <span class="title">think</span>\<span class="title">Model</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">User</span> <span class="keyword">extends</span> <span class="title">Model</span> </span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">setNameAttr</span>(<span class="params"><span class="variable">$value</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="title function_ invoke__">strtolower</span>(<span class="variable">$value</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>如下代码实际保存到数据库中的时候会转为小写</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$user</span> = <span class="keyword">new</span> <span class="title class_">User</span>();</span><br><span class="line"><span class="variable">$user</span>-&gt;name = <span class="string">&#x27;THINKPHP&#x27;</span>;</span><br><span class="line"><span class="variable">$user</span>-&gt;<span class="title function_ invoke__">save</span>();</span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$user</span>-&gt;name; <span class="comment">// thinkphp</span></span><br></pre></td></tr></table></figure><h2 id="批量修改"><a href="#批量修改" class="headerlink" title="批量修改"></a>批量修改</h2><p>除了赋值的方式可以触发修改器外，还可以用下面的方法批量触发修改器</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$user</span> = <span class="keyword">new</span> <span class="title class_">User</span>();</span><br><span class="line"><span class="variable">$data</span>[<span class="string">&#x27;name&#x27;</span>] = <span class="string">&#x27;THINKPHP&#x27;</span>;</span><br><span class="line"><span class="variable">$data</span>[<span class="string">&#x27;email&#x27;</span>] = <span class="string">&#x27;thinkphp@qq.com&#x27;</span>;</span><br><span class="line"><span class="variable">$user</span>-&gt;<span class="title function_ invoke__">data</span>(<span class="variable">$data</span>, <span class="literal">true</span>);</span><br><span class="line"><span class="variable">$user</span>-&gt;<span class="title function_ invoke__">save</span>();</span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$user</span>-&gt;name; <span class="comment">// thinkphp</span></span><br></pre></td></tr></table></figure><p>或者直接使用save方法触发，例如</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$user</span> = <span class="keyword">new</span> <span class="title class_">User</span>();</span><br><span class="line"><span class="variable">$data</span>[<span class="string">&#x27;name&#x27;</span>] = <span class="string">&#x27;THINKPHP&#x27;</span>;</span><br><span class="line"><span class="variable">$data</span>[<span class="string">&#x27;email&#x27;</span>] = <span class="string">&#x27;thinkphp@qq.com&#x27;</span>;</span><br><span class="line"><span class="variable">$user</span>-&gt;<span class="title function_ invoke__">save</span>(<span class="variable">$data</span>);</span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$user</span>-&gt;name; <span class="comment">// thinkphp</span></span><br></pre></td></tr></table></figure><h2 id="自动时间戳"><a href="#自动时间戳" class="headerlink" title="自动时间戳"></a>自动时间戳</h2><p>系统支持自动写入创建和更新的时间戳字段（默认关闭），有两种方式配置支持</p><p>第一种方式是全局开启，在数据库配置文件中进行设置</p><p><code>config\database.php</code></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 开启自动写入时间戳字段</span></span><br><span class="line"><span class="string">&#x27;auto_timestamp&#x27;</span> =&gt; <span class="literal">true</span>,</span><br></pre></td></tr></table></figure><p>第二种是在需要的模型类里面单独开启</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">namespace</span> <span class="title class_">app</span>\<span class="title class_">model</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">use</span> <span class="title">think</span>\<span class="title">Model</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">User</span> <span class="keyword">extends</span> <span class="title">Model</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">protected</span> <span class="variable">$autoWriteTimestamp</span> = <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>又或者首先在数据库配置文件中全局开启，然后在个别不需要使用自动时间戳写入的模型类中单独关闭</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">namespace</span> <span class="title class_">app</span>\<span class="title class_">model</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">use</span> <span class="title">think</span>\<span class="title">Model</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">User</span> <span class="keyword">extends</span> <span class="title">Model</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">protected</span> <span class="variable">$autoWriteTimestamp</span> = <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="定义时间字段"><a href="#定义时间字段" class="headerlink" title="定义时间字段"></a>定义时间字段</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">namespace</span> <span class="title class_">app</span>\<span class="title class_">model</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">use</span> <span class="title">think</span>\<span class="title">Model</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">User</span> <span class="keyword">extends</span> <span class="title">Model</span> </span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="comment">// 数据表字段不是默认值,那么可以这样定义时间戳字段名</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="variable">$createTime</span> = <span class="string">&#x27;createtime&#x27;</span>;</span><br><span class="line">    <span class="keyword">protected</span> <span class="variable">$updateTime</span> = <span class="string">&#x27;updatetime&#x27;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 只需要使用createtime字段而不需要自动写入updatetime，则可以单独关闭某个字段</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="variable">$updateTime</span> = <span class="literal">false</span>;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>或者在数据库配置文件中统一定义时间字段</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&#x27;datetime_field&#x27;</span> =&gt; <span class="string">&#x27;createtime,updatetime&#x27;</span>,</span><br></pre></td></tr></table></figure><p>支持动态关闭时间戳写入功能，例如你希望更新阅读数的时候不修改更新时间，可以使用isAutoWriteTimestamp方法</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$user</span> = <span class="title class_">User</span>::<span class="title function_ invoke__">find</span>(<span class="number">1</span>);</span><br><span class="line"><span class="variable">$user</span>-&gt;read +=<span class="number">1</span>;</span><br><span class="line"><span class="variable">$user</span>-&gt;<span class="title function_ invoke__">isAutoWriteTimestamp</span>(<span class="literal">false</span>)-&gt;<span class="title function_ invoke__">save</span>();</span><br></pre></td></tr></table></figure><blockquote><h3 id="软删除"><a href="#软删除" class="headerlink" title="软删除"></a>软删除</h3></blockquote><p>要使用软删除功能，需要引入SoftDelete trait，例如User模型按照下面的定义就可以使用软删除功能</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">namespace</span> <span class="title class_">app</span>\<span class="title class_">model</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">use</span> <span class="title">think</span>\<span class="title">Model</span>;</span><br><span class="line"><span class="comment">// 引用软删除模型</span></span><br><span class="line"><span class="keyword">use</span> <span class="title">think</span>\<span class="title">model</span>\<span class="title">concern</span>\<span class="title">SoftDelete</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">User</span> <span class="keyword">extends</span> <span class="title">Model</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">use</span> <span class="title">SoftDelete</span>;</span><br><span class="line">    <span class="comment">// 软删除字段</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="variable">$deleteTime</span> = <span class="string">&#x27;deletetime&#x27;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>定义好模型后，我们就可以使用</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 软删除</span></span><br><span class="line"><span class="title class_">User</span>::<span class="title function_ invoke__">destroy</span>(<span class="number">1</span>);</span><br><span class="line"><span class="comment">// 真实删除</span></span><br><span class="line"><span class="title class_">User</span>::<span class="title function_ invoke__">destroy</span>(<span class="number">1</span>,<span class="literal">true</span>);</span><br><span class="line"></span><br><span class="line"><span class="variable">$user</span> = <span class="title class_">User</span>::<span class="title function_ invoke__">find</span>(<span class="number">1</span>);</span><br><span class="line"><span class="comment">// 软删除</span></span><br><span class="line"><span class="variable">$user</span>-&gt;<span class="title function_ invoke__">delete</span>();</span><br><span class="line"><span class="comment">// 真实删除</span></span><br><span class="line"><span class="variable">$user</span>-&gt;<span class="title function_ invoke__">force</span>()-&gt;<span class="title function_ invoke__">delete</span>();</span><br></pre></td></tr></table></figure><p>默认情况下查询的数据不包含软删除数据，如果需要包含软删除的数据，可以使用下面的方式查询</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="title class_">User</span>::<span class="title function_ invoke__">withTrashed</span>()-&gt;<span class="title function_ invoke__">find</span>();</span><br><span class="line"><span class="title class_">User</span>::<span class="title function_ invoke__">withTrashed</span>()-&gt;<span class="title function_ invoke__">select</span>();</span><br></pre></td></tr></table></figure><p>如果仅仅需要查询软删除的数据，可以使用</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="title class_">User</span>::<span class="title function_ invoke__">onlyTrashed</span>()-&gt;<span class="title function_ invoke__">find</span>();</span><br><span class="line"><span class="title class_">User</span>::<span class="title function_ invoke__">onlyTrashed</span>()-&gt;<span class="title function_ invoke__">select</span>();</span><br></pre></td></tr></table></figure><p>恢复被软删除的数据</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$user</span> = <span class="title class_">User</span>::<span class="title function_ invoke__">onlyTrashed</span>()-&gt;<span class="title function_ invoke__">find</span>(<span class="number">1</span>);</span><br><span class="line"><span class="variable">$user</span>-&gt;<span class="title function_ invoke__">restore</span>();</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 后端 </category>
          
          <category> ThinkPHP </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ThinkPHP </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>控制器</title>
      <link href="/Lutianyao/blog/2022/10/26/01.%E5%90%8E%E7%AB%AF/04.ThinkPHP/04.%E6%8E%A7%E5%88%B6%E5%99%A8/"/>
      <url>/Lutianyao/blog/2022/10/26/01.%E5%90%8E%E7%AB%AF/04.ThinkPHP/04.%E6%8E%A7%E5%88%B6%E5%99%A8/</url>
      
        <content type="html"><![CDATA[<h1 id="控制器"><a href="#控制器" class="headerlink" title="控制器"></a>控制器</h1><blockquote><p>ThinkPHP 的控制器定义比较灵活，可以无需继承任何的基础类，也或者根据业务需求封装自己的基础控制器类。</p></blockquote><h3 id="控制器定义"><a href="#控制器定义" class="headerlink" title="控制器定义"></a>控制器定义</h3><blockquote><p>控制器文件通常放在<code>controller</code>下面，类名和文件名保持大小写一致，并采用驼峰命名（首字母大写）</p><p>如果要改变<code>controller</code>目录名，需要在<code>route.php</code>配置文件中设置</p></blockquote><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&#x27;controller_layer&#x27;</span>    =&gt;    <span class="string">&#x27;controllers&#x27;</span>,</span><br></pre></td></tr></table></figure><h3 id="单应用模式"><a href="#单应用模式" class="headerlink" title="单应用模式"></a>单应用模式</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">namespace</span> <span class="title class_">app</span>\<span class="title class_">controller</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">User</span> </span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">login</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&#x27;这是User控制器的login方法&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>访问URL地址是（假设没有定义路由的情况下）</p></blockquote><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 文件位置 --&gt;</span></span><br><span class="line">app\controller\User.php</span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 域名/控制器/方法 --&gt;</span></span><br><span class="line">http://www.tp.com/user/login</span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 会在浏览器输出 --&gt;</span></span><br><span class="line">这是User控制器的login方法</span><br></pre></td></tr></table></figure><h3 id="多应用模式"><a href="#多应用模式" class="headerlink" title="多应用模式"></a>多应用模式</h3><blockquote><p>多应用模式下，控制器类定义仅仅是命名空间有所区别</p></blockquote><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">namespace</span> <span class="title class_">app</span>\<span class="title class_">index</span>\<span class="title class_">controller</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">User</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">login</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&#x27;这是User控制器的login方法&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>访问URL地址是（假设没有定义路由的情况下）</p></blockquote><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 文件位置 --&gt;</span></span><br><span class="line">app\index\controller\User.php</span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 域名/应用/控制器/方法 --&gt;</span></span><br><span class="line">http://www.tp.com/index/user/login</span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 会在浏览器输出 --&gt;</span></span><br><span class="line">这是User控制器的login方法</span><br></pre></td></tr></table></figure><h3 id="多级控制器"><a href="#多级控制器" class="headerlink" title="多级控制器"></a>多级控制器</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">namespace</span> <span class="title class_">app</span>\<span class="title class_">index</span>\<span class="title class_">controller</span>\<span class="title class_">user</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Base</span> </span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">index</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&#x27;index&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>访问URL地址是（假设没有定义路由的情况下）</p></blockquote><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 文件位置 --&gt;</span></span><br><span class="line">app/index/controller/user/Base.php</span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 域名/ --&gt;</span></span><br><span class="line">http://www.tp.com/index/user.blog/index</span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 会在浏览器输出 --&gt;</span></span><br><span class="line">index</span><br></pre></td></tr></table></figure><blockquote><p>由于URL访问不能访问默认的多级控制器，建议多级控制器都通过定义路由后访问</p></blockquote><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="title class_">Route</span>::<span class="title function_ invoke__">get</span>(<span class="string">&#x27;user/base&#x27;</span>,<span class="string">&#x27;user.base/index&#x27;</span>);</span><br></pre></td></tr></table></figure><h3 id="基础控制器"><a href="#基础控制器" class="headerlink" title="基础控制器"></a>基础控制器</h3><blockquote><p>ThinkPHP提供了一个<code>BaseController</code>基础控制器，如果继承了该基础控制器，那么可以直接使用<code>app</code>和<code>request</code>属性</p></blockquote><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">namespace</span> <span class="title class_">app</span>\<span class="title class_">index</span>\<span class="title class_">controller</span>\<span class="title class_">user</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">use</span> <span class="title">app</span>\<span class="title">BaseController</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Base</span> <span class="keyword">extends</span> <span class="title">BaseController</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">index</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable">$action</span> = <span class="variable language_">$this</span>-&gt;request-&gt;<span class="title function_ invoke__">action</span>();</span><br><span class="line">        <span class="variable">$path</span> = <span class="variable language_">$this</span>-&gt;app-&gt;<span class="title function_ invoke__">getBasePath</span>();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="空控制器"><a href="#空控制器" class="headerlink" title="空控制器"></a>空控制器</h3><blockquote><p>空控制器的概念是指当系统找不到指定的控制器名称的时候，系统会尝试定位当前应用下的空控制器<code>Error</code>类，利用这个机制我们可以用来定制错误页面和进行URL的优化</p></blockquote><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">namespace</span> <span class="title class_">app</span>\<span class="title class_">index</span>\<span class="title class_">controller</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Error</span> </span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__call</span>(<span class="params"><span class="variable">$method</span>, <span class="variable">$args</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&#x27;error request!&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="控制器中间件"><a href="#控制器中间件" class="headerlink" title="控制器中间件"></a>控制器中间件</h3><blockquote><p>支持为控制器定义中间件，你只需要在你的控制器中定义middleware属性</p></blockquote><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">namespace</span> <span class="title class_">app</span>\<span class="title class_">index</span>\<span class="title class_">controller</span>\<span class="title class_">User</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">use</span> <span class="title">app</span>\<span class="title">BaseController</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">app</span>\<span class="title">index</span>\<span class="title">middleware</span>\<span class="title">Auth</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">think</span>\<span class="title">Request</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Base</span> <span class="keyword">extends</span> <span class="title">BaseController</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">protected</span> <span class="variable">$middleware</span> = [</span><br><span class="line">        <span class="comment">// 除了index方法不走中间件，其他方法都走</span></span><br><span class="line">        <span class="title class_">Auth</span>::<span class="variable language_">class</span> =&gt; [<span class="string">&#x27;except&#x27;</span> =&gt; [<span class="string">&#x27;index&#x27;</span>]]</span><br><span class="line">    ];</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">index</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&#x27;index方法&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">hello</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&#x27;hello&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="中间件"><a href="#中间件" class="headerlink" title="中间件"></a>中间件</h4><blockquote><p>由于文档使用的是多应用模式，配置文件：<code>app\index\middleware\Auth.php</code></p></blockquote><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title class_">app</span>\<span class="title class_">index</span>\<span class="title class_">middleware</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Auth</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 处理请求</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> \think\Request $request</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> \Closure       $next</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> Response</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">handle</span>(<span class="params"><span class="variable">$request</span>, \<span class="built_in">Closure</span> <span class="variable">$next</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="keyword">empty</span>(<span class="title function_ invoke__">session</span>(<span class="string">&#x27;LoginUser&#x27;</span>)))</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="comment">// 如果条件成立，则重定向回首页</span></span><br><span class="line">            <span class="keyword">return</span> <span class="title function_ invoke__">redirect</span>((<span class="keyword">string</span>)<span class="title function_ invoke__">url</span>(<span class="string">&#x27;/&#x27;</span>));</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="comment">// 返回Request对象</span></span><br><span class="line">        <span class="keyword">return</span> <span class="variable">$next</span>(<span class="variable">$request</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 后端 </category>
          
          <category> ThinkPHP </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ThinkPHP </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>中间件&amp;&amp;服务&amp;&amp;门面</title>
      <link href="/Lutianyao/blog/2022/10/26/01.%E5%90%8E%E7%AB%AF/04.ThinkPHP/03.%E4%B8%AD%E9%97%B4%E4%BB%B6&amp;&amp;%E6%9C%8D%E5%8A%A1&amp;&amp;%E9%97%A8%E9%9D%A2/"/>
      <url>/Lutianyao/blog/2022/10/26/01.%E5%90%8E%E7%AB%AF/04.ThinkPHP/03.%E4%B8%AD%E9%97%B4%E4%BB%B6&amp;&amp;%E6%9C%8D%E5%8A%A1&amp;&amp;%E9%97%A8%E9%9D%A2/</url>
      
        <content type="html"><![CDATA[<h1 id="中间件-amp-amp-服务-amp-amp-门面"><a href="#中间件-amp-amp-服务-amp-amp-门面" class="headerlink" title="中间件&amp;&amp;服务&amp;&amp;门面"></a>中间件&amp;&amp;服务&amp;&amp;门面</h1><h2 id="中间件"><a href="#中间件" class="headerlink" title="中间件"></a>中间件</h2><blockquote><p>6.x版本提供了中间件，分别为系统中间件和应用中间，系统中间件为核心框架内置的中间件，应用中间件是在应用里面创建的中间件。</p></blockquote><pre><code>中间件的主要应用场景可以包括对HTTP请求的数据过滤、权限检测、请求拦截等行为，使用中间件能够让控制器的定义更加简单，很多额外的非核心业务流程的处理都可以交给中间件执行</code></pre><blockquote><p>通过指令快速创建中间件</p></blockquote><pre><code># 单应用模式创建中间件 这个指令会在app/middleware目录下生成一个Test中间件php think make:middleware Test# 多应用模式创建中间件 这个指令会在app/index/middleware目录下生成一个Test中间件php think make:middleware index@Test</code></pre><p>中间件的入口执行方法必须是handle方法，而且第一个参数是Request对象，第二个参数是一个闭包</p><h3 id="基础实例（登录前置中间件）"><a href="#基础实例（登录前置中间件）" class="headerlink" title="基础实例（登录前置中间件）"></a>基础实例（登录前置中间件）</h3><blockquote><p>通过中间件检测是否登录</p></blockquote><p><code>app\index\controller\Index.php</code></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">namespace</span> <span class="title class_">app</span>\<span class="title class_">index</span>\<span class="title class_">controller</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Index</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">index</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&#x27;您好！这是一个[index]示例应用&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">login</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&#x27;这是login的方法&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>注意：中间件handle方法的返回值必须是一个Response对象。</strong></p><p>通过指令创建一个Auth的中间件，注意：这里是多应用模式，代码如下</p><p><code>app\index\middleware\Auth.php</code></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title class_">app</span>\<span class="title class_">index</span>\<span class="title class_">middleware</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Auth</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 处理请求</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> \think\Request $request</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> \Closure       $next</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> Response</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">handle</span>(<span class="params"><span class="variable">$request</span>, \<span class="built_in">Closure</span> <span class="variable">$next</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="comment">// 判断session是否存在,并且同时判断访问的地址是否为index/login</span></span><br><span class="line">        <span class="keyword">if</span>(<span class="keyword">empty</span>(<span class="title function_ invoke__">session</span>(<span class="string">&#x27;LoginUser&#x27;</span>)) &amp;&amp; !<span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/index\/login/&#x27;</span>,<span class="variable">$request</span>-&gt;<span class="title function_ invoke__">pathinfo</span>()))</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="comment">// 如果条件成立，则重定向回登录页面</span></span><br><span class="line">            <span class="keyword">return</span> <span class="title function_ invoke__">redirect</span>((<span class="keyword">string</span>)<span class="title function_ invoke__">url</span>(<span class="string">&#x27;index/index/login&#x27;</span>));</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 返回Request对象</span></span><br><span class="line">        <span class="keyword">return</span> <span class="variable">$next</span>(<span class="variable">$request</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>写完<code>Auth</code>中间件的代码，还差一个步骤，就是要注册中间件。由于这里是多应用模式，则是应用中间件定义，找到在应用目录下面<code>middleware.php</code>文件，定义方式和全局中间件定义一样，只是该中间件只会在该应用下面生效。</p></blockquote><p><code>app\index\middleware.php</code></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 这是系统自动生成的middleware定义文件</span></span><br><span class="line"><span class="keyword">return</span> [</span><br><span class="line">    <span class="comment">// 注册Auth中间件</span></span><br><span class="line">    app\index\middleware<span class="title class_">\Auth</span>::<span class="variable language_">class</span></span><br><span class="line">];</span><br></pre></td></tr></table></figure><h3 id="中间件别名"><a href="#中间件别名" class="headerlink" title="中间件别名"></a>中间件别名</h3><blockquote><p>在config\middleware.php配置中间件别名</p></blockquote><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 中间件配置</span></span><br><span class="line"><span class="keyword">return</span> [</span><br><span class="line">    <span class="comment">// 别名或分组</span></span><br><span class="line">    <span class="string">&#x27;alias&#x27;</span>    =&gt; [</span><br><span class="line">        <span class="string">&#x27;Auth&#x27;</span> =&gt; app\index\middleware<span class="title class_">\Auth</span>::<span class="variable language_">class</span></span><br><span class="line">    ],</span><br><span class="line">    <span class="comment">// 优先级设置，此数组中的中间件会按照数组中的顺序优先执行</span></span><br><span class="line">    <span class="string">&#x27;priority&#x27;</span> =&gt; [],</span><br><span class="line">];</span><br></pre></td></tr></table></figure><blockquote><p>如果<code>Auth</code>中间件只对index应用生效，那么在<code>app\index\middleware.php</code>配置</p></blockquote><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 这是系统自动生成的middleware定义文件</span></span><br><span class="line"><span class="keyword">return</span> [</span><br><span class="line">    <span class="string">&#x27;Auth&#x27;</span></span><br><span class="line">];</span><br></pre></td></tr></table></figure><h3 id="中间件优先级"><a href="#中间件优先级" class="headerlink" title="中间件优先级"></a>中间件优先级</h3><blockquote><p>全局中间件-&gt;应用中间件-&gt;路由中间件-&gt;控制器中间件</p></blockquote><h2 id="服务"><a href="#服务" class="headerlink" title="服务"></a>服务</h2><pre><code>系统服务的概念是指在执行框架的某些组件或者功能的时候需要依赖的一些基础服务，服务类通常可以继承系统的think\Service类，但并不强制（如果继承think\Service）的话可以直接调用$this-&gt;app获取应用实例。你可以在系统服务中注册一个对象到容器，或者对某些对象进行相关的依赖注入。由于系统服务的执行优先级问题，可以确保相关组件在执行的时候已经完成相关依赖注入</code></pre><h3 id="内置服务"><a href="#内置服务" class="headerlink" title="内置服务"></a>内置服务</h3><pre><code>为了更好的完成核心组件的单元测试，框架内置了一些系统服务类，主要都是用于核心类的依赖注入，包括ModelService、PaginatorService和ValidateService类。这些服务不需要注册，并且也不能卸载。</code></pre><h2 id="门面（Facade）"><a href="#门面（Facade）" class="headerlink" title="门面（Facade）"></a>门面（Facade）</h2><pre><code>门面为容器中的（动态）类提供了一个静态调用接口，相比于传统的静态方法调用，带来了更好的可测试的扩展性，你可以为任何的非静态类库定义一个facade类。系统已经为大部分核心类库定义了Facade，所以你可以通过Facade来访问这些系统类，当然也可以为你的应用类库添加静态代理。系统给内置的常用类库定义了Facade类库，包括：</code></pre><table><thead><tr><th>（动态）类库</th><th>Facade类</th></tr></thead><tbody><tr><td>think\App</td><td>think\facade\App</td></tr><tr><td>think\Cache</td><td>think\facade\Cache</td></tr><tr><td>think\Config</td><td>think\facade\Config</td></tr><tr><td>think\Cookie</td><td>think\facade\Cookie</td></tr><tr><td>think\Db</td><td>think\facade\Db</td></tr><tr><td>think\Env</td><td>think\facade\Env</td></tr><tr><td>think\Event</td><td>think\facade\Event</td></tr><tr><td>think\Filesystem</td><td>think\facade\Filesystem</td></tr><tr><td>think\Lang</td><td>think\facade\Lang</td></tr><tr><td>think\Log</td><td>think\facade\Log</td></tr><tr><td>think\Middleware</td><td>think\facade\Middleware</td></tr><tr><td>think\Request</td><td>think\facade\Request</td></tr><tr><td>think\Route</td><td>think\facade\Route</td></tr><tr><td>think\Session</td><td>think\facade\Session</td></tr><tr><td>think\Validate</td><td>think\facade\Validate</td></tr><tr><td>think\View</td><td>think\facade\View</td></tr></tbody></table><blockquote><p>所以无需进行实例化就可以很方便的进行方法调用，例如：</p></blockquote><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">use</span> <span class="title">think</span>\<span class="title">facade</span>\<span class="title">Cache</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 设置值</span></span><br><span class="line"><span class="title class_">Cache</span>::<span class="title function_ invoke__">set</span>(<span class="string">&#x27;name&#x27;</span>,<span class="string">&#x27;value&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 获取值</span></span><br><span class="line"><span class="keyword">echo</span> <span class="title class_">Cache</span>::<span class="title function_ invoke__">get</span>(<span class="string">&#x27;name&#x27;</span>);</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 后端 </category>
          
          <category> ThinkPHP </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ThinkPHP </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>路由模式</title>
      <link href="/Lutianyao/blog/2022/10/26/01.%E5%90%8E%E7%AB%AF/04.ThinkPHP/02.%E8%B7%AF%E7%94%B1%E6%A8%A1%E5%BC%8F/"/>
      <url>/Lutianyao/blog/2022/10/26/01.%E5%90%8E%E7%AB%AF/04.ThinkPHP/02.%E8%B7%AF%E7%94%B1%E6%A8%A1%E5%BC%8F/</url>
      
        <content type="html"><![CDATA[<h1 id="路由模式"><a href="#路由模式" class="headerlink" title="路由模式"></a>路由模式</h1><blockquote><p>一般默认的URL地址显得有点长，通过路由可以简化URL访问。</p></blockquote><h3 id="定义路由"><a href="#定义路由" class="headerlink" title="定义路由"></a>定义路由</h3><blockquote><p>要使用Route类注册路由必须首先在路由定义文件开头添加引用（后面不再重复说明）</p></blockquote><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">use</span> <span class="title">think</span>\<span class="title">facade</span>\<span class="title">Route</span>;</span><br></pre></td></tr></table></figure><blockquote><p>在项目根目录里<code>route\app.php</code>定义路由规则</p></blockquote><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Route::rule(&#x27;路由表达式&#x27;, &#x27;路由地址&#x27;, &#x27;请求类型&#x27;);</span></span><br><span class="line"><span class="title class_">Route</span>::<span class="title function_ invoke__">rule</span>(<span class="string">&#x27;hello&#x27;</span>, <span class="string">&#x27;index/hello&#x27;</span>, <span class="string">&#x27;get&#x27;</span>);</span><br></pre></td></tr></table></figure><blockquote><p>单应用模式定义好路由规则后URL访问</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- 域名/路由名 --&gt;</span><br><span class="line">http://www.tp.com/hello</span><br></pre></td></tr></table></figure><blockquote><p>如果多应用模式使用路由，那么就请在该应用目录下创建route文件夹，然后再在route目录下创建app.php路由配置文件。</p></blockquote><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// get路由</span></span><br><span class="line"><span class="title class_">Route</span>::<span class="title function_ invoke__">get</span>(<span class="string">&#x27;hello&#x27;</span>, <span class="string">&#x27;index/hello&#x27;</span>);</span><br></pre></td></tr></table></figure><blockquote><p>多应用模式定义路由后URL访问</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- 域名/应用/路由名 --&gt;</span><br><span class="line">http://www.tp.com/index/hello</span><br></pre></td></tr></table></figure><pre><code>注:定义好路由后，原来的URL访问会自动失效</code></pre><h3 id="强制路由"><a href="#强制路由" class="headerlink" title="强制路由"></a>强制路由</h3><blockquote><p>如果开启强制路由，整个网站的URL访问都要定义路由，否则会提示非法请求</p></blockquote><p><code>config\route.php</code></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&#x27;url_route_must&#x27;</span> =&gt; <span class="literal">true</span></span><br></pre></td></tr></table></figure><h3 id="路由类型"><a href="#路由类型" class="headerlink" title="路由类型"></a>路由类型</h3><table><thead><tr><th>类型</th><th>说明</th><th>快捷方法</th></tr></thead><tbody><tr><td>GET</td><td>GET请求</td><td>get</td></tr><tr><td>POST</td><td>POST请求</td><td>post</td></tr><tr><td>PUT</td><td>PUT请求</td><td>put</td></tr><tr><td>DELETE</td><td>DELETE请求</td><td>delete</td></tr><tr><td>PATCH</td><td>PATCH请求</td><td>patch</td></tr><tr><td>*</td><td>任何请求类型</td><td>any</td></tr></tbody></table><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//Route::快捷方法名(&#x27;路由表达式&#x27;, &#x27;路由地址&#x27;);</span></span><br><span class="line"><span class="title class_">Route</span>::<span class="title function_ invoke__">get</span>(<span class="string">&#x27;new/&lt;id&gt;&#x27;</span>,<span class="string">&#x27;News/read&#x27;</span>); <span class="comment">// 定义GET请求路由规则</span></span><br><span class="line"><span class="title class_">Route</span>::<span class="title function_ invoke__">post</span>(<span class="string">&#x27;new/&lt;id&gt;&#x27;</span>,<span class="string">&#x27;News/update&#x27;</span>); <span class="comment">// 定义POST请求路由规则</span></span><br><span class="line"><span class="title class_">Route</span>::<span class="title function_ invoke__">put</span>(<span class="string">&#x27;new/:id&#x27;</span>,<span class="string">&#x27;News/update&#x27;</span>); <span class="comment">// 定义PUT请求路由规则</span></span><br><span class="line"><span class="title class_">Route</span>::<span class="title function_ invoke__">delete</span>(<span class="string">&#x27;new/:id&#x27;</span>,<span class="string">&#x27;News/delete&#x27;</span>); <span class="comment">// 定义DELETE请求路由规则</span></span><br><span class="line"><span class="title class_">Route</span>::<span class="title function_ invoke__">any</span>(<span class="string">&#x27;new/:id&#x27;</span>,<span class="string">&#x27;News/read&#x27;</span>); <span class="comment">// 所有请求都支持的路由规则</span></span><br></pre></td></tr></table></figure><h3 id="规则表达式"><a href="#规则表达式" class="headerlink" title="规则表达式"></a>规则表达式</h3><blockquote><p>规则表达式通常包含静态规则和动态规则，以及两种规则的结合，例如下面都属于有效的规则表达式</p></blockquote><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 静态地址路由</span></span><br><span class="line"><span class="title class_">Route</span>::<span class="title function_ invoke__">get</span>(<span class="string">&#x27;hello&#x27;</span>, <span class="string">&#x27;index/hello&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 静态地址和动态地址结合</span></span><br><span class="line"><span class="title class_">Route</span>::<span class="title function_ invoke__">get</span>(<span class="string">&#x27;hello/:id&#x27;</span>, <span class="string">&#x27;index/hello&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 静态地址和动态地址结合</span></span><br><span class="line"><span class="title class_">Route</span>::<span class="title function_ invoke__">get</span>(<span class="string">&#x27;hello/:year/:month/:day&#x27;</span>, <span class="string">&#x27;index/hello&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 全动态地址</span></span><br><span class="line"><span class="title class_">Route</span>::<span class="title function_ invoke__">get</span>(<span class="string">&#x27;:year/:month/:day&#x27;</span>, <span class="string">&#x27;index/hello&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 使用[]把路由规则中的变量包起来，就表示该变量为可选</span></span><br><span class="line"><span class="title class_">Route</span>::<span class="title function_ invoke__">get</span>(<span class="string">&#x27;hello/[:id]&#x27;</span>, <span class="string">&#x27;index/hello&#x27;</span>);</span><br></pre></td></tr></table></figure><blockquote><p>当访问上面定义路由时</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- 正确匹配的 --&gt;</span><br><span class="line">http://www.tp.com/hello</span><br><span class="line"></span><br><span class="line">http://www.tp.com/hello/1</span><br><span class="line"></span><br><span class="line">http://www.tp.com/hello/2022/3/7</span><br><span class="line"></span><br><span class="line">http://www.tp.com/2022/3/7</span><br><span class="line"></span><br><span class="line">http://www.tp.com/hello || http://www.tp.com/hello/22</span><br></pre></td></tr></table></figure><h3 id="完全匹配"><a href="#完全匹配" class="headerlink" title="完全匹配"></a>完全匹配</h3><blockquote><p>规则默认检测时只是对URL从头开始匹配，如果需要完整匹配可以在规则后面加上<code>$</code>符号</p></blockquote><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 完整匹配的规则</span></span><br><span class="line"><span class="title class_">Route</span>::<span class="title function_ invoke__">get</span>(<span class="string">&#x27;hello/:id$&#x27;</span>, <span class="string">&#x27;index/hello&#x27;</span>);</span><br></pre></td></tr></table></figure><blockquote><p>当访问上面定义的路由时</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">http://tp.com/hello // 正确匹配</span><br><span class="line">http://tp.com/hello/thinkphp // 正确匹配</span><br><span class="line">http://tp.com/hello/thinkphp/val/value // 不会匹配</span><br></pre></td></tr></table></figure><h3 id="全局规则和局部规则"><a href="#全局规则和局部规则" class="headerlink" title="全局规则和局部规则"></a>全局规则和局部规则</h3><pre><code>系统默认的变量规则设置是\w+，只会匹配字母、数字、中文和下划线字符，并不会匹配特殊符号以及其它字符，需要定义变量规则或者调整默认变量规则。可以在路由配置文件中自定义</code></pre><p><code>config\route.php</code></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 增加中划线字符的匹配</span></span><br><span class="line"><span class="string">&#x27;default_route_pattern&#x27;</span> =&gt; <span class="string">&#x27;[\w\-]+&#x27;</span>,</span><br></pre></td></tr></table></figure><h3 id="全局规则和局部规则-1"><a href="#全局规则和局部规则-1" class="headerlink" title="全局规则和局部规则"></a>全局规则和局部规则</h3><pre><code>设置全局变量规则，全部路由有效</code></pre><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 支持批量添加</span></span><br><span class="line"><span class="title class_">Route</span>::<span class="title function_ invoke__">pattern</span>([</span><br><span class="line">    <span class="string">&#x27;name&#x27;</span> =&gt; <span class="string">&#x27;\w+&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;id&#x27;</span>   =&gt; <span class="string">&#x27;\d+&#x27;</span>,</span><br><span class="line">]);</span><br></pre></td></tr></table></figure><h3 id="全局规则和局部规则-2"><a href="#全局规则和局部规则-2" class="headerlink" title="全局规则和局部规则"></a>全局规则和局部规则</h3><p><strong>全局规则</strong></p><blockquote><p>设置全局变量规则，全部路由有效</p></blockquote><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 支持批量添加</span></span><br><span class="line"><span class="title class_">Route</span>::<span class="title function_ invoke__">pattern</span>([</span><br><span class="line">    <span class="string">&#x27;name&#x27;</span> =&gt; <span class="string">&#x27;\w+&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;id&#x27;</span>   =&gt; <span class="string">&#x27;\d+&#x27;</span>,</span><br><span class="line">]);</span><br></pre></td></tr></table></figure><p><strong>局部规则</strong></p><blockquote><p>局部变量规则，仅在当前路由有效</p></blockquote><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 定义GET请求路由规则 并设置name变量规则</span></span><br><span class="line"><span class="title class_">Route</span>::<span class="title function_ invoke__">get</span>(<span class="string">&#x27;hello/:id&#x27;</span>, <span class="string">&#x27;index/hello&#x27;</span>)-&gt;<span class="title function_ invoke__">pattern</span>([<span class="string">&#x27;id&#x27;</span> =&gt; <span class="string">&#x27;[\d]+&#x27;</span>]);</span><br></pre></td></tr></table></figure><h3 id="定义闭包路由"><a href="#定义闭包路由" class="headerlink" title="定义闭包路由"></a>定义闭包路由</h3><blockquote><p>支持通过定义闭包为某些特殊的场景定义路由规则，不需要执行控制器的操作方法，例如：</p></blockquote><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="title class_">Route</span>::<span class="title function_ invoke__">get</span>(<span class="string">&#x27;hello&#x27;</span>, function () &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&#x27;hello,world!&#x27;</span>;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h3 id="路由参数"><a href="#路由参数" class="headerlink" title="路由参数"></a>路由参数</h3><blockquote><p>约束路由规则的请求类型或者URL后缀之类的条件，例如：</p></blockquote><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 检测是否get请求类型以及后缀为html</span></span><br><span class="line"><span class="title class_">Route</span>::<span class="title function_ invoke__">rule</span>(<span class="string">&#x27;hello&#x27;</span>,<span class="string">&#x27;index/hello&#x27;</span>)-&gt;<span class="title function_ invoke__">method</span>(<span class="string">&#x27;get&#x27;</span>)-&gt;<span class="title function_ invoke__">ext</span>(<span class="string">&#x27;html&#x27;</span>);</span><br></pre></td></tr></table></figure><blockquote><p>如果需要设置批量路由参数，可以使用option方法</p></blockquote><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 检测是否后缀为html以及检测是否https请求</span></span><br><span class="line"><span class="title class_">Route</span>::<span class="title function_ invoke__">get</span>(<span class="string">&#x27;hello&#x27;</span>, <span class="string">&#x27;index/hello&#x27;</span>)</span><br><span class="line">    -&gt;<span class="title function_ invoke__">option</span>([</span><br><span class="line">        <span class="string">&#x27;ext&#x27;</span>   =&gt; <span class="string">&#x27;html&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;https&#x27;</span> =&gt; <span class="literal">true</span></span><br><span class="line">    ]);</span><br></pre></td></tr></table></figure><h3 id="路由中间件"><a href="#路由中间件" class="headerlink" title="路由中间件"></a>路由中间件</h3><blockquote><p>路由中间件则表示仅在路由匹配之后才会执行某个中间件，在路由定义中使用middleware方法定义</p></blockquote><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 只对当前路由启用中间件</span></span><br><span class="line"><span class="title class_">Route</span>::<span class="title function_ invoke__">get</span>(<span class="string">&#x27;hello&#x27;</span>,<span class="string">&#x27;index/hello&#x27;</span>)-&gt;<span class="title function_ invoke__">middleware</span>(app\index\middleware<span class="title class_">\Auth</span>::<span class="variable language_">class</span>);</span><br></pre></td></tr></table></figure><blockquote><p>中间件</p><p>多应用模式下，配置文件：<code>app\index\middleware\Auth.php</code></p></blockquote><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title class_">app</span>\<span class="title class_">index</span>\<span class="title class_">middleware</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Auth</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 处理请求</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> \think\Request $request</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> \Closure       $next</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> Response</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">handle</span>(<span class="params"><span class="variable">$request</span>, \<span class="built_in">Closure</span> <span class="variable">$next</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="keyword">empty</span>(<span class="title function_ invoke__">session</span>(<span class="string">&#x27;LoginUser&#x27;</span>)))</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="comment">// 如果条件成立，则重定向回首页</span></span><br><span class="line">            <span class="keyword">return</span> <span class="title function_ invoke__">redirect</span>((<span class="keyword">string</span>)<span class="title function_ invoke__">url</span>(<span class="string">&#x27;/&#x27;</span>));</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="comment">// 返回Request对象</span></span><br><span class="line">        <span class="keyword">return</span> <span class="variable">$next</span>(<span class="variable">$request</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>如果需要定义多个中间件，使用数组方式</p></blockquote><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="title class_">Route</span>::<span class="title function_ invoke__">rule</span>(<span class="string">&#x27;hello/:name&#x27;</span>,<span class="string">&#x27;hello&#x27;</span>)</span><br><span class="line">    -&gt;<span class="title function_ invoke__">middleware</span>([\app\middleware<span class="title class_">\Auth</span>::<span class="variable language_">class</span>,\app\middleware<span class="title class_">\Check</span>::<span class="variable language_">class</span>]);</span><br></pre></td></tr></table></figure><blockquote><p>如果需要某个路由中间件是全局执行的，不管路由是否匹配，可以在<code>config/route.php</code>配置文件添加</p></blockquote><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&#x27;middleware&#x27;</span>    =&gt;    [</span><br><span class="line">    app\middleware<span class="title class_">\Auth</span>::<span class="variable language_">class</span>,</span><br><span class="line">    app\middleware<span class="title class_">\Check</span>::<span class="variable language_">class</span>,</span><br><span class="line">],</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 后端 </category>
          
          <category> ThinkPHP </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ThinkPHP </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>基本介绍</title>
      <link href="/Lutianyao/blog/2022/10/26/01.%E5%90%8E%E7%AB%AF/04.ThinkPHP/01.%E5%9F%BA%E6%9C%AC%E4%BB%8B%E7%BB%8D/"/>
      <url>/Lutianyao/blog/2022/10/26/01.%E5%90%8E%E7%AB%AF/04.ThinkPHP/01.%E5%9F%BA%E6%9C%AC%E4%BB%8B%E7%BB%8D/</url>
      
        <content type="html"><![CDATA[<h1 id="基本介绍"><a href="#基本介绍" class="headerlink" title="基本介绍"></a>基本介绍</h1><h3 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h3><pre><code>ThinkPHP是一个快速、简单的基于MVC和面向对象的轻量级PHP开发框架，遵循Apache2开源协议发布，自2006年诞生以来一直秉承简洁实用的设计原则，在保持出色的性能和至简代码的同时，尤其注重开发体验和易用性，并且拥有众多的原创功能和特性，为WEB应用和API开发提供了强有力的支持。</code></pre><h3 id="安装ThinkPHP"><a href="#安装ThinkPHP" class="headerlink" title="安装ThinkPHP"></a>安装ThinkPHP</h3><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">// 安装稳定版命令</span><br><span class="line">composer create-project topthink/think tp</span><br><span class="line"></span><br><span class="line">// 更新升级命令</span><br><span class="line">composer update topthink/framework</span><br><span class="line"></span><br><span class="line">// 安装开发版命令(适合学习)</span><br><span class="line">composer create-project topthink/think=6.0.x-dev tp</span><br></pre></td></tr></table></figure><h3 id="测试运行"><a href="#测试运行" class="headerlink" title="测试运行"></a>测试运行</h3><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">// 运行命令</span><br><span class="line">php think run</span><br><span class="line"></span><br><span class="line">// 执行运行命令后在浏览器输入</span><br><span class="line">http://localhost:8000/</span><br></pre></td></tr></table></figure><blockquote><p>注意的是在实际开发中测试时，应该配置虚拟主机并且域名绑定public目录，确保不是项目根目录</p></blockquote><h3 id="目录结构"><a href="#目录结构" class="headerlink" title="目录结构"></a>目录结构</h3><p><strong>单应用模式目录结构</strong></p><pre><code>www  WEB部署目录（或者子目录）├─app           应用目录│  ├─controller      控制器目录│  ├─model           模型目录│  ├─ ...            更多类库目录│  ││  ├─common.php         公共函数文件│  └─event.php          事件定义文件│├─config                配置目录│  ├─app.php            应用配置│  ├─cache.php          缓存配置│  ├─console.php        控制台配置│  ├─cookie.php         Cookie配置│  ├─database.php       数据库配置│  ├─filesystem.php     文件磁盘配置│  ├─lang.php           多语言配置│  ├─log.php            日志配置│  ├─middleware.php     中间件配置│  ├─route.php          URL和路由配置│  ├─session.php        Session配置│  ├─trace.php          Trace配置│  └─view.php           视图配置│├─view            视图目录├─route                 路由定义目录│  ├─route.php          路由定义文件│  └─ ...   │├─public                WEB目录（对外访问目录）│  ├─index.php          入口文件│  ├─router.php         快速测试文件│  └─.htaccess          用于apache的重写│├─extend                扩展类库目录├─runtime               应用的运行时目录（可写，可定制）├─vendor                Composer类库目录├─.example.env          环境变量示例文件├─composer.json         composer 定义文件├─LICENSE.txt           授权说明文件├─README.md             README 文件├─think                 命令行入口文件</code></pre><p><strong>多应用模式目录结构</strong></p><pre><code>├─app 应用目录│  ├─index              主应用│  │  ├─controller      控制器目录│  │  ├─model           模型目录│  │  ├─view            视图目录│  │  ├─config          配置目录│  │  ├─route           路由目录│  │  └─ ...            更多类库目录│  │ │  ├─admin              后台应用│  │  ├─controller      控制器目录│  │  ├─model           模型目录│  │  ├─view            视图目录│  │  ├─config          配置目录│  │  ├─route           路由目录│  │  └─ ...            更多类库目录│├─public                WEB目录（对外访问目录）│  ├─admin.php          后台入口文件│  ├─index.php          入口文件│  ├─router.php         快速测试文件│  └─.htaccess          用于apache的重写│├─config                全局应用配置目录├─runtime               运行时目录│  ├─index              index应用运行时目录│  └─admin              admin应用运行时目录</code></pre><h3 id="多应用模式"><a href="#多应用模式" class="headerlink" title="多应用模式"></a>多应用模式</h3><blockquote><p>如果要使用多应用模式，请安装多应用模式扩展think-multi-app</p></blockquote><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">composer require topthink/think-multi-app</span><br></pre></td></tr></table></figure><h3 id="Env环境变量配置"><a href="#Env环境变量配置" class="headerlink" title="Env环境变量配置"></a>Env环境变量配置</h3><blockquote><p>安装ThinkPHP后在项目的根目录<code>.example.env</code>环境变量示例文件，你可以直接改成.env文件后进行修改。</p></blockquote><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># 应用调试模式</span><br><span class="line">APP_DEBUG =  true</span><br></pre></td></tr></table></figure><blockquote><p>环境变量配置的参数会全部转换为大写，值为<code>off</code>，<code>no</code>和<code>false</code>等效于布尔值<code>false</code>，值为<code>yes</code>、<code>on</code>和<code>true</code>等效于布尔值的<code>true</code></p></blockquote><h3 id="设置环境变量"><a href="#设置环境变量" class="headerlink" title="设置环境变量"></a>设置环境变量</h3><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">// 环境变量不支持数组参数，如果需要使用数组参数可以，可以使用</span><br><span class="line">[DATABASE]</span><br><span class="line">USERNAME = root</span><br><span class="line">PASSWORD = 123456</span><br><span class="line"></span><br><span class="line">// 如果要设置一个没有键值的数组参数，可以使用</span><br><span class="line">PATHINFO_PATH[] =  ORIG_PATH_INFO</span><br><span class="line">PATHINFO_PATH[] =  REDIRECT_PATH_INFO</span><br><span class="line">PATHINFO_PATH[] =  REDIRECT_URL</span><br><span class="line"></span><br><span class="line">// 要引用Env门面</span><br><span class="line">use think\facade\Env;</span><br><span class="line">Env::set(&#x27;name&#x27;,&#x27;value)</span><br></pre></td></tr></table></figure><h3 id="获取环境变量"><a href="#获取环境变量" class="headerlink" title="获取环境变量"></a>获取环境变量</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 要引用Env门面</span></span><br><span class="line"><span class="keyword">use</span> <span class="title">think</span>\<span class="title">facade</span>\<span class="title">Env</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 环境变量的获取不区分大小写</span></span><br><span class="line"><span class="title class_">Env</span>::<span class="title function_ invoke__">get</span>(<span class="string">&#x27;database.username&#x27;</span>);</span><br><span class="line"><span class="title class_">Env</span>::<span class="title function_ invoke__">get</span>(<span class="string">&#x27;database.password&#x27;</span>);</span><br><span class="line"><span class="title class_">Env</span>::<span class="title function_ invoke__">get</span>(<span class="string">&#x27;PATHINFO_PATH&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 获取环境变量 如果不存在则使用默认值root</span></span><br><span class="line"><span class="title class_">Env</span>::<span class="title function_ invoke__">get</span>(<span class="string">&#x27;database.username&#x27;</span>, <span class="string">&#x27;root&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 可以直接在配置文件中使用环境变量进行本地环境和服务器的自动配置</span></span><br><span class="line"><span class="keyword">return</span> [</span><br><span class="line">    <span class="string">&#x27;hostname&#x27;</span>  =&gt;  <span class="title class_">Env</span>::<span class="title function_ invoke__">get</span>(<span class="string">&#x27;hostname&#x27;</span>,<span class="string">&#x27;127.0.0.1&#x27;</span>),</span><br><span class="line">];</span><br></pre></td></tr></table></figure><h3 id="Config配置"><a href="#Config配置" class="headerlink" title="Config配置"></a>Config配置</h3><blockquote><p>配置文件分为全局配置和应用配置，一般单应用模式的配置文件是属于全局配置文件，而多应用模式的配置文件有全局配置和应用配置，每个应用可以有独立配置文件，相同的配置参数会覆盖全局配置。</p></blockquote><pre><code>├─config（配置目录）│  ├─app.php            应用配置│  ├─cache.php          缓存配置│  ├─console.php        控制台配置│  ├─cookie.php         Cookie配置│  ├─database.php       数据库配置│  ├─filesystem.php     文件磁盘配置│  ├─lang.php           多语言配置│  ├─log.php            日志配置│  ├─middleware.php     中间件配置│  ├─route.php          URL和路由配置│  ├─session.php        Session配置│  ├─trace.php          Trace配置│  ├─view.php           视图配置│  └─ ...               更多配置文件</code></pre><blockquote><p>由于架构设计原因，下面的配置只能在环境变量中修改。</p></blockquote><table><thead><tr><th>配置参数</th><th>说明</th></tr></thead><tbody><tr><td>app_debug</td><td>应用调试模式</td></tr><tr><td>config_ext</td><td>配置文件后缀</td></tr></tbody></table><blockquote><p>要使用Config类，首先需要在你的类文件中引入</p></blockquote><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">use</span> <span class="title">think</span>\<span class="title">facade</span>\<span class="title">Config</span>;</span><br></pre></td></tr></table></figure><h3 id="获取配置"><a href="#获取配置" class="headerlink" title="获取配置"></a>获取配置</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 获取一级配置的所有的参数（每一个配置文件都是独立的一级配置）</span></span><br><span class="line"><span class="title class_">Config</span>::<span class="title function_ invoke__">get</span>(<span class="string">&#x27;app&#x27;</span>);</span><br><span class="line"><span class="title class_">Config</span>::<span class="title function_ invoke__">get</span>(<span class="string">&#x27;route&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 读取单个配置参数</span></span><br><span class="line"><span class="title class_">Config</span>::<span class="title function_ invoke__">get</span>(<span class="string">&#x27;app.app_name&#x27;</span>);</span><br><span class="line"><span class="title class_">Config</span>::<span class="title function_ invoke__">get</span>(<span class="string">&#x27;route.url_domain_root&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 读取数组配置（理论上支持无限级配置参数读取）</span></span><br><span class="line"><span class="title class_">Config</span>::<span class="title function_ invoke__">get</span>(<span class="string">&#x27;database.default.host&#x27;</span>);</span><br></pre></td></tr></table></figure><h3 id="参数批量设置"><a href="#参数批量设置" class="headerlink" title="参数批量设置"></a>参数批量设置</h3><blockquote><p>Config类不再支持动态设置某个配置参数，但可以支持批量设置更新配置参数</p></blockquote><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 批量设置参数</span></span><br><span class="line"><span class="title class_">Config</span>::<span class="title function_ invoke__">set</span>([<span class="string">&#x27;name1&#x27;</span> =&gt; <span class="string">&#x27;value1&#x27;</span>, <span class="string">&#x27;name2&#x27;</span> =&gt; <span class="string">&#x27;value2&#x27;</span>], <span class="string">&#x27;config&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 获取配置</span></span><br><span class="line"><span class="title class_">Config</span>::<span class="title function_ invoke__">get</span>(<span class="string">&#x27;config&#x27;</span>);</span><br></pre></td></tr></table></figure><h3 id="入口文件"><a href="#入口文件" class="headerlink" title="入口文件"></a>入口文件</h3><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">ThinkPHP6.0采用的是单一的入口模式进行项目部署和访问，入口文件位于public目录下面，</span><br><span class="line"></span><br><span class="line">最常见的入口文件就是index.php，可以给每个应用增加入口文件，</span><br><span class="line"></span><br><span class="line">例如给后台应用单独设置的一个入口文件admin.php。</span><br><span class="line"></span><br><span class="line">如果开启自动多应用的话，一般只需要一个入口文件index.php。</span><br></pre></td></tr></table></figure><h3 id="静态资源"><a href="#静态资源" class="headerlink" title="静态资源"></a>静态资源</h3><pre><code>网站资源文件访问不会影响正常访问，只有当访问的资源文件不存在时才会解析到入口文件，一般会提示模块不存在的错误。一般静态资源都是放在public目录下的子目录里，切记，不能放在public以外的目录，包括app目录。建议规范一下</code></pre><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">// 静态资源目录结构</span><br><span class="line">public</span><br><span class="line">├─index.php     应用入口文件</span><br><span class="line">├─static        静态资源目录   </span><br><span class="line">│  ├─css        css目录</span><br><span class="line">│  ├─js         js目录</span><br><span class="line">│  └─img        图片目录</span><br><span class="line"></span><br><span class="line">// 访问资源文件的URL路径</span><br><span class="line">http://tp.com/static/css/style.css</span><br><span class="line">http://tp.com/static/js/common.js</span><br><span class="line">http://tp.com/static/img/picture.jpg</span><br></pre></td></tr></table></figure><h3 id="URL访问"><a href="#URL访问" class="headerlink" title="URL访问"></a>URL访问</h3><p><strong>单应用模式</strong></p><pre><code>// 域名/入口文件/控制器/方法名http://www.tp.com/index.php/index/hello</code></pre><p><strong>多应用模式</strong></p><pre><code>// 域名/入口文件/应用/控制器/方法名http://www.tp.com/index.php/index/index/hello</code></pre><h3 id="隐藏入口文件"><a href="#隐藏入口文件" class="headerlink" title="隐藏入口文件"></a>隐藏入口文件</h3><p>出于优化的URL访问原则，还支持通过URL重写隐藏入口文件，下面以Apache为例说明隐藏应用入口文件index.php的设置<br>下面是Apache的配置过程，可以参考下：</p><blockquote><ul><li>httpd.conf配置文件中加载了mod_rewrite.so模块</li><li>AllowOverride None 将None改为 All</li><li>把下面的内容保存为.htaccess文件放到应用入口文件的同级目录下</li></ul></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&lt;IfModule mod_rewrite.c&gt;</span><br><span class="line">  Options +FollowSymlinks -Multiviews</span><br><span class="line">  RewriteEngine On</span><br><span class="line"></span><br><span class="line">  RewriteCond %&#123;REQUEST_FILENAME&#125; !-d</span><br><span class="line">  RewriteCond %&#123;REQUEST_FILENAME&#125; !-f</span><br><span class="line">  RewriteRule ^(.*)$ index.php [L,E=PATH_INFO:$1]</span><br><span class="line">&lt;/IfModule&gt;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 后端 </category>
          
          <category> ThinkPHP </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ThinkPHP </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>PHP正则表达式</title>
      <link href="/Lutianyao/blog/2022/10/25/01.%E5%90%8E%E7%AB%AF/03.PHP%E5%BA%94%E7%94%A8/06.%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F/"/>
      <url>/Lutianyao/blog/2022/10/25/01.%E5%90%8E%E7%AB%AF/03.PHP%E5%BA%94%E7%94%A8/06.%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F/</url>
      
        <content type="html"><![CDATA[<h1 id="正则表达式"><a href="#正则表达式" class="headerlink" title="正则表达式"></a>正则表达式</h1><p><strong>概述</strong></p><pre><code>正则表达式就是一套专门用于处理文本的强大工具,可以对进行文本查找，匹配，替换;正则表达式常用于验证表单提交的内容，比如验证电话号码，Email地址，身份证号码等是否有效;php支持两种风格的正则表达式：Perl风格   Posix 风格Perl风格  PCRE全称为Perl Compatible Regular Expression，意思是Perl兼容正则表达式。  PCRE来源于Perl语言，而Perl是对字符串操作功能最强大的语言之一，PHP的最初版本就是由Perl开发的产品。  在PCRE中，通常将正则表达式 包含在两个反斜线&quot;/&quot;之间;  例：&quot;/apple/&quot;  定界符也不仅仅局限于&quot;/&quot;。除了字母、数字和斜线&quot;\&quot;以外的任何字符都可以作为定界符.  像&quot;#&quot;、&quot;/&quot;、&quot;!&quot;等都可以的。Posix 风格  一般而言，实现相同的功能Perl风格的，效率高些，我们一般使用Perl风格的函数！  而且在PHP7.0版本后该风格已经被弃用了</code></pre><h3 id="Perl-兼容正则表达式函数"><a href="#Perl-兼容正则表达式函数" class="headerlink" title="Perl 兼容正则表达式函数"></a>Perl 兼容正则表达式函数</h3><p><strong>preg_match</strong></p><blockquote><p>语法：</p></blockquote><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> <span class="title function_ invoke__">preg_match</span> ( <span class="keyword">string</span> <span class="variable">$pattern</span> , <span class="keyword">string</span> <span class="variable">$subject</span> [, <span class="keyword">array</span> &amp;<span class="variable">$matches</span> [, <span class="keyword">int</span> <span class="variable">$flags</span> = <span class="number">0</span> [, <span class="keyword">int</span> <span class="variable">$offset</span> = <span class="number">0</span> ]]] )</span><br></pre></td></tr></table></figure><table><thead><tr><th>参数</th><th>说明</th></tr></thead><tbody><tr><td>pattern</td><td>要搜索的模式，字符串类型</td></tr><tr><td>subject</td><td>输入字符串</td></tr><tr><td>matches</td><td>如果提供了参数matches，它将被填充为搜索结果</td></tr><tr><td>flags</td><td>flags可以被设置为<code>PREG_OFFSET_CAPTURE</code>、<code>PREG_UNMATCHED_AS_NULL</code>标记值</td></tr><tr><td>offset</td><td>搜索从目标字符串的开始位置开始</td></tr></tbody></table><blockquote><p>注：</p></blockquote><p><code>PREG_OFFSET_CAPTURE</code><br>    如果传递了这个标记，对于每一个出现的匹配返回时会附加字符串偏移量(相对于目标字符串的字节数)<br><br><code>PREG_UNMATCHED_AS_NULL</code><br>    使用该标记，未匹配的子组会报告为 null；未使用时，报告为空的 string。</p><p>例：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$res</span>;</span><br><span class="line"><span class="title function_ invoke__">preg_match</span>(<span class="string">&quot;/hello/&quot;</span>, <span class="string">&quot;hello world&quot;</span>, <span class="variable">$res</span>);</span><br><span class="line"><span class="title function_ invoke__">print_r</span>(<span class="variable">$res</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">//&#x27;/hello/&#x27;   进行匹配的模式</span></span><br><span class="line"><span class="comment">//&quot;hello world&quot;   匹配的字符串</span></span><br><span class="line"><span class="comment">//$res            将匹配的结果存放到一个变量里面</span></span><br></pre></td></tr></table></figure><p><strong><code>preg_match_all</code></strong></p><pre><code>搜索 subject 中所有匹配 pattern 给定正则表达式的匹配结果并且将它们以 flag 指定顺序输出到 matches 中。在第一个匹配找到后, 子序列继续从最后一次匹配位置搜索。</code></pre><blockquote><p>语法：</p></blockquote><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> <span class="title function_ invoke__">preg_match_all</span> ( <span class="keyword">string</span> <span class="variable">$pattern</span> , <span class="keyword">string</span> <span class="variable">$subject</span> [, <span class="keyword">array</span> &amp;<span class="variable">$matches</span> [, <span class="keyword">int</span> <span class="variable">$flags</span> = PREG_PATTERN_ORDER [, <span class="keyword">int</span> <span class="variable">$offset</span> = <span class="number">0</span> ]]] )</span><br></pre></td></tr></table></figure><table><thead><tr><th>参数</th><th>说明</th></tr></thead><tbody><tr><td>pattern</td><td>要搜索的模式，字符串类型</td></tr><tr><td>subject</td><td>输入字符串</td></tr><tr><td>matches</td><td>多维数组，作为输出参数输出所有匹配结果, 数组排序通过flags指定</td></tr><tr><td>flags</td><td>可以被设置为<code>PREG_PATTERN_ORDER</code>、<code>PREG_SPLIT_DELIM_CAPTURE</code>、<code>PREG_OFFSET_CAPTURE</code>标记值(注意不能同时使用<code>PREG_PATTERN_ORDER</code>和 <code>PREG_SET_ORDER</code>)</td></tr><tr><td>offset</td><td>搜索从目标字符串的开始位置开始</td></tr></tbody></table><blockquote><p>注：<br><br><code>PREG_PATTERN_ORDER</code><br><br>结果排序为<code>$matches[0]</code>保存完整模式的所有匹配, <code>$matches[1]</code> 保存第一个子组的所有匹配，以此类推<br><br><br><br><code>PREG_SET_ORDER</code><br><br>结果排序为<code>$matches[0]</code>包含第一次匹配得到的所有匹配(包含子组)， <code>$matches[1]</code>是包含第二次匹配到的所有匹配(包含子组)的数组，以此类推<br><br><br><br><code>PREG_OFFSET_CAPTURE</code><br><br>如果这个标记被传递，每个发现的匹配返回时会增加它相对目标字符串的字节偏移量。</p></blockquote><p>例：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$res</span>;</span><br><span class="line"><span class="title function_ invoke__">preg_match_all</span>(<span class="string">&quot;/h/&quot;</span>, <span class="string">&quot;hello hello&quot;</span>, <span class="variable">$res</span>);   <span class="comment">//进行正则表达式全局匹配</span></span><br><span class="line"><span class="title function_ invoke__">print_r</span>(<span class="variable">$res</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">//&#x27;/hello/&#x27;   进行匹配的模式</span></span><br><span class="line"><span class="comment">//&quot;hello world&quot;   匹配的字符串</span></span><br><span class="line"><span class="comment">//$res            将匹配的结果存放到一个变量里面</span></span><br></pre></td></tr></table></figure><p><strong><code>preg_replace</code></strong></p><pre><code>搜索 subject 中匹配 pattern 的部分，以 replacement 进行替换。                                         </code></pre><blockquote><p>语法:   </p></blockquote><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">mixed</span> <span class="title function_ invoke__">preg_replace</span> ( <span class="keyword">mixed</span> <span class="variable">$pattern</span> , <span class="keyword">mixed</span> <span class="variable">$replacement</span> , <span class="keyword">mixed</span> <span class="variable">$subject</span> [, <span class="keyword">int</span> <span class="variable">$limit</span> = -<span class="number">1</span> [, <span class="keyword">int</span> &amp;<span class="variable">$count</span> ]] )</span><br></pre></td></tr></table></figure><table><thead><tr><th>参数</th><th>说明</th></tr></thead><tbody><tr><td>pattern</td><td>要搜索的模式，可以是一个字符串或字符串数组</td></tr><tr><td>replacement</td><td>用于替换的字符串或字符串数组</td></tr><tr><td>subject</td><td>要进行搜索和替换的字符串或字符串数组</td></tr><tr><td>limit</td><td>每个模式在每个 subject 上进行替换的最大次数。默认是 -1(无限)。</td></tr><tr><td>count</td><td>如果指定，将会被填充为完成的替换次数</td></tr></tbody></table><p>例：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$res</span> = <span class="title function_ invoke__">preg_replace</span>(<span class="string">&quot;/hello/&quot;</span>,<span class="string">&quot;aaaa&quot;</span>,<span class="string">&quot;hello world&quot;</span>);</span><br><span class="line"><span class="title function_ invoke__">var_dump</span>(<span class="variable">$res</span>); <span class="comment">//aaaa  world</span></span><br></pre></td></tr></table></figure><p><strong><code>preg_split</code></strong></p><pre><code>用正则表达式分割字符串</code></pre><blockquote><p>语法：</p></blockquote><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">array</span> <span class="title function_ invoke__">preg_split</span> ( <span class="keyword">string</span> <span class="variable">$pattern</span> , <span class="keyword">string</span> <span class="variable">$subject</span> [, <span class="keyword">int</span> <span class="variable">$limit</span> = -<span class="number">1</span> [, <span class="keyword">int</span> <span class="variable">$flags</span> = <span class="number">0</span> ]] ) </span><br></pre></td></tr></table></figure><table><thead><tr><th>参数</th><th>说明</th></tr></thead><tbody><tr><td>pattern</td><td>要搜索的模式，字符串类型</td></tr><tr><td>subject</td><td>输入字符串</td></tr><tr><td>limit</td><td>可选，如果指定，将限制分隔得到的子串最多只有limit个，返回的最后一个 子串将包含所有剩余部分。limit值为-1，0或null时都代表”不限制”， 作为php的标准，你可以使用null跳过对flags的设置。</td></tr><tr><td>flags</td><td>可以被设置为<code>PREG_SPLIT_NO_EMPTY</code>、<code>PREG_SPLIT_DELIM_CAPTURE</code>、<code>PREG_SPLIT_OFFSET_CAPTURE</code>标记值</td></tr></tbody></table><blockquote><p>注：</p></blockquote><p><code>PREG_SPLIT_NO_EMPTY</code><br>    如果这个标记被设置， preg_split() 将仅返回分隔后的非空部分。<br><br><code>PREG_SPLIT_DELIM_CAPTURE</code><br>    如果这个标记设置了，用于分隔的模式中的括号表达式将被捕获并返回。<br><br><code>PREG_SPLIT_OFFSET_CAPTURE</code><br>    如果这个标记被设置, 对于每一个出现的匹配返回时将会附加字符串偏移量. </p><p>例：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$res</span> = <span class="title function_ invoke__">preg_replace</span>(<span class="string">&quot;/hello/&quot;</span>,<span class="string">&quot;aaaa&quot;</span>,<span class="string">&quot;hello world&quot;</span>);</span><br><span class="line"><span class="title function_ invoke__">var_dump</span>(<span class="variable">$res</span>); <span class="comment">//aaaa  world</span></span><br></pre></td></tr></table></figure><h3 id="元字符（特殊字符）"><a href="#元字符（特殊字符）" class="headerlink" title="元字符（特殊字符）"></a>元字符（特殊字符）</h3><table><thead><tr><th>字符</th><th>说明</th></tr></thead><tbody><tr><td>{m}</td><td>m 是一个非负整数。匹配确定的 m 次</td></tr><tr><td>{m,}</td><td>m 是一个非负整数。至少匹配m 次</td></tr><tr><td>{m,n}</td><td>最少匹配 m次且最多匹配 n次</td></tr><tr><td>()</td><td>表示一个整体</td></tr><tr><td>.</td><td>匹配除换行之外的任何一个字符</td></tr></tbody></table><blockquote><p><code>*</code>匹配前面的字符零次或多次  等同于 ｛0，｝  </p></blockquote><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_ invoke__">preg_match</span>(<span class="string">&quot;/a*/&quot;</span>,<span class="string">&quot;bbbbba&quot;</span>,<span class="variable">$res</span>); <span class="comment">//array(1) &#123; [0]=&gt; string(0) &quot;&quot; &#125;</span></span><br></pre></td></tr></table></figure><blockquote><p><code>+</code>匹配前面的字符一次或多次  等同于 ｛1，｝  </p></blockquote><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_ invoke__">preg_match</span>(<span class="string">&quot;/a+/&quot;</span>,<span class="string">&#x27;bbbbbbbbbbaa&#x27;</span>,<span class="variable">$res</span>);<span class="comment">// array(1) &#123; [0]=&gt; string(2) &quot;aa&quot; &#125;</span></span><br></pre></td></tr></table></figure><blockquote><p><code>+</code>匹配前面的字符一次或多次  等同于 ｛1，｝  </p></blockquote><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_ invoke__">preg_match</span>(<span class="string">&quot;/a+/&quot;</span>,<span class="string">&#x27;bbbbbbbbbbaa&#x27;</span>,<span class="variable">$res</span>);<span class="comment">// array(1) &#123; [0]=&gt; string(2) &quot;aa&quot; &#125;</span></span><br></pre></td></tr></table></figure><blockquote><p><code>?</code>匹配前面的字符零次或一次  等同于 ｛0，1｝ </p></blockquote><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_ invoke__">preg_match</span>(<span class="string">&quot;/a?/&quot;</span>,<span class="string">&quot;aaaabbbb&quot;</span>,<span class="variable">$res</span>); <span class="comment">//array(1) &#123; [0]=&gt; string(1) &quot;a&quot; &#125;</span></span><br></pre></td></tr></table></figure><blockquote><p><code>|</code>匹配两个或多个选择  </p></blockquote><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_ invoke__">preg_match</span>(<span class="string">&quot;/(h|a)+/&quot;</span>,<span class="string">&quot;dfghsssssasfgdsf&quot;</span>,<span class="variable">$res</span>); <span class="comment">//array(2) &#123; [0]=&gt; string(1) &quot;h&quot; [1]=&gt; string(1) &quot;h&quot; &#125;</span></span><br></pre></td></tr></table></figure><blockquote><p><code>^</code>匹配字符串的开始位置</p></blockquote><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_ invoke__">preg_match</span>(<span class="string">&quot;/^hello/&quot;</span>,<span class="string">&quot;hello world&quot;</span>,<span class="variable">$res</span>);<span class="comment">//array(1) &#123; [0]=&gt; string(5) &quot;hello&quot; &#125;</span></span><br></pre></td></tr></table></figure><blockquote><p><code>$</code>匹配字符串结束位置</p></blockquote><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_ invoke__">preg_match</span>(<span class="string">&quot;/^hello world$/&quot;</span>,<span class="string">&quot;hello world&quot;</span>,<span class="variable">$res</span>);<span class="comment">//array(1) &#123; [0]=&gt; string(11) &quot;hello world&quot; &#125;</span></span><br></pre></td></tr></table></figure><blockquote><p><code>\b</code>匹配单词的边界(如空格、横杠，但不包括下划线)  更简单点说 \b匹配特殊字符</p></blockquote><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_ invoke__">preg_match</span>(<span class="string">&quot;/hello\b/&quot;</span>,<span class="string">&quot;hello-world&quot;</span>,<span class="variable">$res</span>);<span class="comment">//array(1) &#123; [0]=&gt; string(5) &quot;hello&quot; &#125;</span></span><br></pre></td></tr></table></figure><blockquote><p><code>\B</code>匹配除单词边界以外的部分 更简单点说 \B匹配除了特殊字符以外的字符</p></blockquote><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_ invoke__">preg_match</span>(<span class="string">&quot;/^hello/&quot;</span>,<span class="string">&quot;hello world&quot;</span>,<span class="variable">$res</span>);<span class="comment">//array(1) &#123; [0]=&gt; string(5) &quot;hello&quot; &#125;</span></span><br></pre></td></tr></table></figure><blockquote><p><code>[]</code>匹配方括号中的任一字符</p></blockquote><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_ invoke__">preg_match</span>(<span class="string">&quot;/[abcdf]/&quot;</span>,<span class="string">&quot;aaaa -  bbbb - aaac&quot;</span>,<span class="variable">$res_test</span>);<span class="comment">//array(1) &#123; [0]=&gt; string(1) &quot;a&quot; &#125;</span></span><br></pre></td></tr></table></figure><blockquote><p><code>[^]</code>匹配除方括号中的字符外的任何字符 </p></blockquote><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_ invoke__">preg_match</span>(<span class="string">&quot;/[^abcdf]/&quot;</span>,<span class="string">&quot;asd&quot;</span>,<span class="variable">$res_test</span>);<span class="comment">//array(1) &#123; [0]=&gt; string(1) &quot;s&quot; &#125;</span></span><br></pre></td></tr></table></figure><blockquote><p><code>^</code>匹配字符串的开始位置</p></blockquote><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_ invoke__">preg_match</span>(<span class="string">&quot;/^hello/&quot;</span>,<span class="string">&quot;hello world&quot;</span>,<span class="variable">$res</span>);<span class="comment">//array(1) &#123; [0]=&gt; string(5) &quot;hello&quot; &#125;</span></span><br></pre></td></tr></table></figure><h3 id="预定义元字符"><a href="#预定义元字符" class="headerlink" title="预定义元字符"></a>预定义元字符</h3><p>由于某些模式会反复用到，所以可以使用以下预定义类</p><blockquote><p><code>\d</code>匹配一个数字；等价于[0-9]</p></blockquote><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_ invoke__">preg_match</span>(<span class="string">&quot;/\d+/&quot;</span>,<span class="string">&quot;asdasdasdad  3434&quot;</span>,<span class="variable">$res</span>); <span class="comment">//array(1) &#123; [0]=&gt; string(4) &quot;3434&quot; &#125;</span></span><br></pre></td></tr></table></figure><blockquote><p><code>\D</code>匹配除数字以外任何一个字符；等价于[^0-9]  </p></blockquote><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_ invoke__">preg_match</span>(<span class="string">&quot;/\D+/&quot;</span>,<span class="string">&quot;asdasdasdad  3434&quot;</span>,<span class="variable">$res</span>);<span class="comment">//array(1) &#123; [0]=&gt; string(13) &quot;asdasdasdad &quot; &#125;</span></span><br></pre></td></tr></table></figure><blockquote><p><code>\w</code>匹配一个英文字母、数字或下划线；等价于[0-9a-zA-Z_]</p></blockquote><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_ invoke__">preg_match</span>(<span class="string">&quot;/\w+/&quot;</span>,<span class="string">&quot;asdasdasdad  3434&quot;</span>,<span class="variable">$res</span>); <span class="comment">//array(1) &#123; [0]=&gt; string(11) &quot;asdasdasdad&quot; &#125;</span></span><br></pre></td></tr></table></figure><blockquote><p><code>\W</code>匹配除英文字母、数字和下划线以外任何一个字符；等价于[^0-9a-zA-Z_]  </p></blockquote><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_ invoke__">preg_match</span>(<span class="string">&quot;/\W+/&quot;</span>,<span class="string">&quot;asdasdasdad  3434&quot;</span>,<span class="variable">$res</span>);<span class="comment">//array(1) &#123; [0]=&gt; string(2) &quot; &quot; &#125;</span></span><br></pre></td></tr></table></figure><blockquote><p><code>\s</code>匹配一个空白字符；等价于[\f\n\r\t\v]</p></blockquote><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_ invoke__">preg_match</span>(<span class="string">&quot;/\s+/&quot;</span>,<span class="string">&quot;asdasdasdad  3434&quot;</span>,<span class="variable">$res</span>); <span class="comment">//array(1) &#123; [0]=&gt; string(2) &quot; &quot; &#125;</span></span><br></pre></td></tr></table></figure><blockquote><p><code>\S</code>匹配除空白字符以外任何一个字符；等价于[^\f\n\r\t\v]</p></blockquote><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_ invoke__">preg_match</span>(<span class="string">&quot;/\S+/&quot;</span>,<span class="string">&quot;asdasdasdad  3434&quot;</span>,<span class="variable">$res</span>);<span class="comment">//array(1) &#123; [0]=&gt; string(11) &quot;asdasdasdad&quot; &#125;</span></span><br></pre></td></tr></table></figure><h3 id="匹配字符的开始和结束"><a href="#匹配字符的开始和结束" class="headerlink" title="匹配字符的开始和结束"></a>匹配字符的开始和结束</h3><pre><code>在某些情况下，需要对匹配范围进行限定，以获得更准确的匹配结果;&quot;^&quot;置于字符串的开始确保模式匹配出现在字符串首端；&quot;$&quot;置于字符串的结束，确保模式匹配出现字符串尾端。如果不加边界限制元字符，将获得更多的匹配结果。</code></pre><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$res</span> = <span class="title function_ invoke__">preg_match</span>(<span class="string">&quot;/^hello/&quot;</span>, <span class="string">&quot;hello world&quot;</span>); <span class="comment">//int(1)</span></span><br><span class="line"><span class="title function_ invoke__">var_dump</span>(<span class="variable">$res</span>); <span class="comment">//int(1)</span></span><br><span class="line"><span class="variable">$res</span> = <span class="title function_ invoke__">preg_match</span>(<span class="string">&quot;/world$/&quot;</span>, <span class="string">&quot;hello world&quot;</span>); </span><br><span class="line"><span class="title function_ invoke__">var_dump</span>(<span class="variable">$res</span>); <span class="comment">//int(1)</span></span><br></pre></td></tr></table></figure><h3 id="匹配任意字符"><a href="#匹配任意字符" class="headerlink" title="匹配任意字符"></a>匹配任意字符</h3><pre><code>用&quot;.&quot;匹配除换行符外任何一个字符通常可以使用&quot;.*&quot;组合来匹配除换行符外的任何字符</code></pre><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$res</span> = <span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/./&#x27;</span>, <span class="string">&quot;something&quot;</span>); </span><br><span class="line"><span class="title function_ invoke__">var_dump</span>(<span class="variable">$res</span>);<span class="comment">//int(1)</span></span><br></pre></td></tr></table></figure><h3 id="匹配包含某个范围的字符"><a href="#匹配包含某个范围的字符" class="headerlink" title="匹配包含某个范围的字符"></a>匹配包含某个范围的字符</h3><pre><code>用&quot;[start-end]&quot;匹配包含某个范围的字符[a-z] 匹配所有的小写字母[A-Z] 匹配所有的大写字母[a-zA-Z]  匹配所有的字母[0-9] 匹配所有的数字[0-9\.\-] 匹配所有的数字，句号和减号   </code></pre><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$res</span> = <span class="title function_ invoke__">preg_match</span>(<span class="string">&quot;^[a-z]+$^&quot;</span>, <span class="string">&quot;abc&quot;</span>); </span><br><span class="line"><span class="title function_ invoke__">var_dump</span>(<span class="variable">$res</span>);</span><br></pre></td></tr></table></figure><h3 id="重复匹配"><a href="#重复匹配" class="headerlink" title="重复匹配"></a>重复匹配</h3><blockquote><p>正则表达式中有一些用于重复匹配的元字符：”?”、”*”、”+”。他们主要的区别是重复匹配的次数不同。</p></blockquote><pre><code>&quot;?&quot; 匹配前面的字符零次或一次  等同于 ｛0，1｝ &quot;*&quot; 匹配前面的字符零次或多次  等同于 ｛0，｝&quot;+&quot; 匹配前面的字符一次或多次  等同于 ｛1，｝&quot;&#123;m&#125;&quot;        匹配确定的 m 次。 m 是一个非负整数;&quot;&#123;m，n&#125;&quot;     最少匹配 m 次且最多匹配 n 次。 m 和 n 均为非负整数，其中m &lt;= n; &quot;&#123;m，&#125;&quot;      至少匹配m 次。 m 是一个非负整数;</code></pre><h3 id="匹配两个或多个选择"><a href="#匹配两个或多个选择" class="headerlink" title="匹配两个或多个选择"></a>匹配两个或多个选择</h3><blockquote><p>用圆括号”(word1|word2|…)”定义包含word1、word2、…的任意字符串的规则</p></blockquote><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$res</span>= <span class="title function_ invoke__">preg_match</span> (<span class="string">&#x27;/^(this|the)/&#x27;</span>, <span class="string">&#x27;this island is a beautiful land&#x27;</span>);</span><br><span class="line"><span class="title function_ invoke__">var_dump</span>(<span class="variable">$res</span>);</span><br></pre></td></tr></table></figure><h3 id="模式修正符-模式修正符在正则表达式定界符之外使用"><a href="#模式修正符-模式修正符在正则表达式定界符之外使用" class="headerlink" title="模式修正符 : 模式修正符在正则表达式定界符之外使用"></a>模式修正符 : 模式修正符在正则表达式定界符之外使用</h3><blockquote><p><code>i</code>在和模式进行匹配时不区分大小写</p></blockquote><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_ invoke__">preg_match</span>(<span class="string">&quot;/hello/i&quot;</span>,<span class="string">&quot;HELLO WORLD&quot;</span>,<span class="variable">$res</span>);<span class="comment">// array(1) &#123; [0]=&gt; string(5) &quot;HELLO&quot; &#125;</span></span><br></pre></td></tr></table></figure><blockquote><p><code>m</code>将字符串视为多行 </p></blockquote><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$str</span> = <span class="string">&#x27;bcdabccba&#x27;</span>; </span><br><span class="line"><span class="title function_ invoke__">preg_match_all</span>(<span class="string">&#x27;/^abc/m&#x27;</span>,<span class="variable">$str</span>,<span class="variable">$arr</span>);</span><br><span class="line"><span class="title function_ invoke__">print_r</span>(<span class="variable">$arr</span>); </span><br></pre></td></tr></table></figure><blockquote><p><code>s</code>模式中的圆点元字符 “ . “将匹配所有的字符，包括换行符 </p></blockquote><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$str</span> = <span class="string">&#x27;adsadsac&#x27;</span>; </span><br><span class="line"><span class="title function_ invoke__">preg_match_all</span>(<span class="string">&#x27;/a.*c/s&#x27;</span>,<span class="variable">$str</span>,<span class="variable">$arr</span>);</span><br><span class="line"><span class="title function_ invoke__">print_r</span>(<span class="variable">$arr</span>);<span class="comment">// Array ( [0] =&gt; Array ( [0] =&gt; adsadsa c ) )</span></span><br></pre></td></tr></table></figure><blockquote><p><code>x</code>模式中的空白忽略不计，除非已经转义 </p></blockquote><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_ invoke__">preg_match_all</span>(<span class="string">&quot;/^    hello /x&quot;</span>,<span class="string">&quot;hello&quot;</span>,<span class="variable">$res</span>);<span class="comment">//array(1) &#123; [0]=&gt; array(1) &#123; [0]=&gt; string(5) &quot;hello&quot; &#125; &#125;</span></span><br></pre></td></tr></table></figure><blockquote><p><code>U</code>取消贪婪匹配</p></blockquote><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$pattern</span> = <span class="string">&#x27;/&lt;b&gt;.*&lt;\/b&gt;/U&#x27;</span>; </span><br><span class="line"><span class="variable">$string</span> = <span class="string">&#x27;&lt;b&gt;welcome&lt;/b&gt; &lt;b&gt;to&lt;/b&gt; &lt;b&gt;phpfuns&lt;/b&gt;&#x27;</span>; </span><br><span class="line"><span class="title function_ invoke__">preg_match</span>(<span class="variable">$pattern</span>,<span class="variable">$string</span>,<span class="variable">$res</span>);</span><br></pre></td></tr></table></figure><h3 id="常用的正则表达式"><a href="#常用的正则表达式" class="headerlink" title="常用的正则表达式"></a>常用的正则表达式</h3><p><strong>手机号验证</strong></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">    <span class="comment">//正则表达式</span></span><br><span class="line">    <span class="title function_ invoke__">header</span>(<span class="string">&quot;Content-Type:text/html;charset=utf-8&quot;</span>);</span><br><span class="line">    <span class="variable">$tel</span> = <span class="string">&quot;13055859966&quot;</span>;</span><br><span class="line">    <span class="comment">//上面部分判断长度是不是11位</span></span><br><span class="line">    <span class="keyword">if</span> (<span class="title function_ invoke__">strlen</span>(<span class="variable">$tel</span>) == <span class="string">&quot;11&quot;</span>) &#123;</span><br><span class="line">        <span class="variable">$reg</span> = <span class="string">&quot;/^((13[0-9])|(14[5,7])|(15[0-3,5-9])|(17[0,3,5-8])|(18[0-9])|166|198|199|(147))\\d&#123;8&#125;$/&quot;</span>;</span><br><span class="line">        <span class="keyword">if</span> (!<span class="title function_ invoke__">preg_match</span>(<span class="variable">$reg</span>, <span class="variable">$tel</span>)) &#123;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">&quot;手机号不正确&quot;</span>;</span><br><span class="line">        &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">&quot;手机号正确&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;长度必须是11位&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p><strong>邮政验证</strong></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">//正则表达式</span></span><br><span class="line"><span class="title function_ invoke__">header</span>(<span class="string">&quot;Content-Type:text/html;charset=utf-8&quot;</span>);</span><br><span class="line"><span class="variable">$email</span> = <span class="string">&#x27;17171226@qq.com&#x27;</span>;</span><br><span class="line"><span class="keyword">if</span> (!<span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/\w+([-+.]\w+)*@\w+([-.]\w+)*\.\w+([-.]\w+)*/&#x27;</span>, <span class="variable">$email</span>)) &#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;邮箱不合法&quot;</span>;</span><br><span class="line">&#125;<span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;邮箱合法&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p><strong>url验证</strong></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">    <span class="variable">$url</span> = <span class="string">&#x27;https://www.baidu.com&#x27;</span>;</span><br><span class="line">    <span class="variable">$url</span> = <span class="title function_ invoke__">strtolower</span>(<span class="title function_ invoke__">trim</span>(<span class="variable">$url</span> ));</span><br><span class="line">    <span class="keyword">if</span>(<span class="keyword">empty</span>(<span class="variable">$url</span> )) &#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;url格式不正确&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="variable">$match</span> = <span class="string">&#x27;/^(http:\/\/)?(https:\/\/)?([\w\d\-]+\.)+[\w\-]+(\/[\d\w\-.\/?%&amp;=]*)?$/&#x27;</span>;</span><br><span class="line">    <span class="keyword">if</span> (!<span class="title function_ invoke__">preg_match</span>(<span class="variable">$match</span>, <span class="variable">$url</span>)) &#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;url格式不正确&quot;</span>;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;url格式正确&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p><strong>用户名验证</strong></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">    <span class="comment">//6-20位字符，必须以字母开头，只能包含数字、字母、下划线，不区分大小写</span></span><br><span class="line">    <span class="variable">$username</span> = <span class="string">&quot;user11&quot;</span>;</span><br><span class="line">    <span class="variable">$match</span> = <span class="string">&#x27;/^[a-zA-Z_][a-zA-Z0-9-_]&#123;5,19&#125;$/&#x27;</span>;</span><br><span class="line">    <span class="keyword">if</span> (!<span class="title function_ invoke__">preg_match</span>(<span class="variable">$match</span>, <span class="variable">$username</span>)) &#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;用户名格式不正确&quot;</span>;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;用户名格式正确&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p><strong>密码验证</strong></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">    <span class="comment">//6-16位字符，需包括数字与英文字母</span></span><br><span class="line">    <span class="variable">$pwd</span> = <span class="string">&quot;ddkjs3322&quot;</span>;</span><br><span class="line">    <span class="variable">$match</span> = <span class="string">&#x27;/^(?![0-9]+$)(?![a-z]+$)(?![A-Z]+$)(?!([^(0-9a-zA-Z)])+$).&#123;6,16&#125;$/&#x27;</span>;</span><br><span class="line">    <span class="keyword">if</span> (!<span class="title function_ invoke__">preg_match</span>(<span class="variable">$match</span>, <span class="variable">$pwd</span>)) &#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;密码格式不正确&quot;</span>;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        ehco <span class="string">&quot;密码正确&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 后端 </category>
          
          <category> PHP应用 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PHP </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>文件上传</title>
      <link href="/Lutianyao/blog/2022/10/25/01.%E5%90%8E%E7%AB%AF/03.PHP%E5%BA%94%E7%94%A8/05.%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0/"/>
      <url>/Lutianyao/blog/2022/10/25/01.%E5%90%8E%E7%AB%AF/03.PHP%E5%BA%94%E7%94%A8/05.%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0/</url>
      
        <content type="html"><![CDATA[<h1 id="文件上传"><a href="#文件上传" class="headerlink" title="文件上传"></a>文件上传</h1><h3 id="文件上传相关配置"><a href="#文件上传相关配置" class="headerlink" title="文件上传相关配置"></a>文件上传相关配置</h3><pre><code>表单设置    要进行文件的上传，需要对form表单进行特殊设置;    1.设定表单数据的提交方式为POST    2.设定enctype属性值为: multipart/form-data    3.为了避免用户等待许久之后才发现上传文件太大，可以在表单中添加    MAX_FILE_SIZE隐藏域,通过设置其value值可以限制上传文件的大小;PHP设置1.file_uploads    是否允许通过HTTP上传文件，默认为ON2.upload_max_filesize    允许上传文件大小的最大值，默认为2M，此指令必须小于post_max_size;3.upload_tmp_dir    指定上传文件的临时存放路径，这个目录对于拥有此服务器进程的用户必须是可写的;    如果未指定则使用系统默认值;4.post_max_size    控制POST方式提交数据php所能够接收的最大数据量;5.memory_limit    指定单个脚本程序可以使用的最大内存容量;6.max_execution_time    此指令确定php脚本可以执行的最长时间，以秒为单位，默认为30秒;</code></pre><h3 id="FILES-数组"><a href="#FILES-数组" class="headerlink" title="$_FILES 数组"></a>$_FILES 数组</h3><pre><code>$_FILES超级全局变量作用是存储各种与上传文件有关的信息;$_FILES是一个二维数组，数组中共有5项：$_FILES[&quot;userfile&quot;][&quot;name&quot;] 上传文件的名称$_FILES[&quot;userfile&quot;][&quot;type&quot;]   上传文件的类型$_FILES[&quot;userfile&quot;][&quot;size&quot;]   上传文件的大小, 以字节为单位$_FILES[&quot;userfile&quot;][&quot;tmp_name&quot;] 文件上传后在服务器端储存的临时文件名$_FILES[&quot;userfile&quot;][&quot;error&quot;]  文件上传相关的错误代码注:userfile只是一个占位符，代表文件上传表单元素的名字; 因此这个值将根据你所给定的名称有所不同;</code></pre><h3 id="文件上传的错误信息"><a href="#文件上传的错误信息" class="headerlink" title="文件上传的错误信息"></a>文件上传的错误信息</h3><blockquote><p>$_FILES[‘userfile’][‘error’]  提供了在文件上传过程中出现的错误：</p></blockquote><pre><code>1.UPLOAD_ERR_OK (value = 0)    如果文件上传成功返回0;2.UPLOAD_ERR_INI_SIZE (value = 1)如果试图上传的文件大小超出了 upload_max_filesize指令指定的值，则返回1;3.UPLOAD_ERR_FORM_SIZE (value = 2)如果试图上传的文件大小超出了MAX_FILE_SIZE指令（可能嵌入在HTML表单中）指定的值，则返回2;4.UPLOAD_ERR_PARTIAL (value = 3)如果文件没有完全上传，则返回3; 如网络出现错误，导致上传过程中断;5.UPLOAD_ERR_NO_FILE (value = 4)如果用户没有指定上传的文件就提交表单，则返回4</code></pre><h3 id="文件上传函数"><a href="#文件上传函数" class="headerlink" title="文件上传函数"></a>文件上传函数</h3><blockquote><p><code>is_uploaded_file()</code>  <code>move_uploaded_file()</code></p></blockquote><p><strong>is_uploaded_file</strong></p><table><thead><tr><th>参数</th><th>说明</th></tr></thead><tbody><tr><td>file</td><td>必需。规定要检查的文件</td></tr></tbody></table><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//is_uploaded_file(file) 函数检查指定的文件是否是通过 HTTP POST 上传的。</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="title function_ invoke__">is_uploaded_file</span>(<span class="variable">$_FILES</span>[<span class="string">&#x27;userfile&#x27;</span>][<span class="string">&#x27;tmp_name&#x27;</span>]))&#123;</span><br><span class="line">  <span class="title function_ invoke__">copy</span>(<span class="variable">$_FILES</span>[<span class="string">&#x27;userfile&#x27;</span>][<span class="string">&#x27;tmp_name&#x27;</span>], <span class="string">&quot;test.txt&quot;</span>);</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">  <span class="keyword">echo</span> <span class="string">&quot;文件上传失败！&quot;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>move_uploaded_file</strong></p><table><thead><tr><th>参数</th><th>说明</th></tr></thead><tbody><tr><td>file</td><td>必需。规定要移动的文件</td></tr><tr><td>newloc</td><td>必需。规定文件的新位置</td></tr></tbody></table><pre><code>move_uploaded_file()作用是将上传文件从临时目录移动到目标目录; 虽然copy()也可以实现同样功能，但move_uploaded_file()还提供了一种额外的功能，它将检查由filename输入参数指定的文件确实是通过http post 上传机制上传的。如果所指定的文件并非上传文件，则移动失败，返回false;move_uploaded_file($_FILES[&#39;userfile&#39;][&#39;tmp_name&#39;], &quot;1/test.jpg&quot;);</code></pre><h3 id="图片上传function"><a href="#图片上传function" class="headerlink" title="图片上传function"></a>图片上传function</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">/*1,通过$_FILES 接收表单上传的图片元素</span></span><br><span class="line"><span class="comment">2,通过$_FILES[&#x27;input_name&#x27;][&#x27;error&#x27;]; 判断文件是否上传到服务器</span></span><br><span class="line"><span class="comment">3,定义新的文件名称</span></span><br><span class="line"><span class="comment">4,通过is_uploaded_file函数  判断$_FILES[&#x27;input_name&#x27;][&#x27;tmp_name&#x27;] 是否是通过http post方式上传的</span></span><br><span class="line"><span class="comment">5,然后使用move_uploaded_file($_FILES[&#x27;input_name&#x27;][&#x27;tmp_name&#x27;],&#x27;./images/1.jpg&#x27;);</span></span><br><span class="line"><span class="comment">函数移动图片到指定目录</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="comment">//图片上传的函数</span></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">$name,input框的name值</span></span><br><span class="line"><span class="comment">$type,上传图片的类型</span></span><br><span class="line"><span class="comment">$size,上传图片的大小</span></span><br><span class="line"><span class="comment">$upload,上传的图片保存的目录</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">upload</span>(<span class="params"><span class="variable">$name</span>, <span class="variable">$type</span> = <span class="keyword">array</span>(<span class="params"><span class="string">&#x27;jpg&#x27;</span>, <span class="string">&#x27;jpeg&#x27;</span>, <span class="string">&#x27;png&#x27;</span>, <span class="string">&#x27;gif&#x27;</span></span>), <span class="variable">$size</span> = <span class="number">1048576</span>, <span class="variable">$upload</span> = <span class="string">&#x27;upload&#x27;</span></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">//1、判断错误值</span></span><br><span class="line">    <span class="variable">$error</span> = <span class="variable">$_FILES</span>[<span class="variable">$name</span>][<span class="string">&#x27;error&#x27;</span>];</span><br><span class="line">    <span class="keyword">switch</span> (<span class="variable">$error</span>) &#123;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">            <span class="keyword">return</span> <span class="string">&#x27;上传大小不能超过upload_max_filesize设置的值&#x27;</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line">            <span class="keyword">return</span> <span class="string">&#x27;上传大小不能超过MAX_FILE_SIZE设置的值&#x27;</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">3</span>:</span><br><span class="line">            <span class="keyword">return</span> <span class="string">&#x27;图片上传不完整&#x27;</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">4</span>:</span><br><span class="line">            <span class="keyword">return</span> <span class="string">&#x27;没有选择图片&#x27;</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//2、判断文件的类型</span></span><br><span class="line">    <span class="variable">$pre</span> = <span class="title function_ invoke__">pathinfo</span>(<span class="variable">$_FILES</span>[<span class="variable">$name</span>][<span class="string">&#x27;name&#x27;</span>], PATHINFO_EXTENSION);</span><br><span class="line">    <span class="keyword">if</span> (!<span class="title function_ invoke__">in_array</span>(<span class="variable">$pre</span>, <span class="variable">$type</span>)) &#123; <span class="comment">//后缀没有在$type里面出现</span></span><br><span class="line">        <span class="keyword">return</span> <span class="string">&#x27;上传的图片类型错误&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//3、再次限制图片大小</span></span><br><span class="line">    <span class="variable">$s</span> = <span class="variable">$_FILES</span>[<span class="variable">$name</span>][<span class="string">&#x27;size&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span> (<span class="variable">$s</span> &gt; <span class="variable">$size</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&#x27;图片过大,请压缩后上传&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//4、保存图片</span></span><br><span class="line">    <span class="comment">//首先设置好保存之后图片的名称</span></span><br><span class="line">    <span class="variable">$file</span> = <span class="title function_ invoke__">date</span>(<span class="string">&#x27;YmdHis&#x27;</span>, <span class="title function_ invoke__">time</span>()) . <span class="title function_ invoke__">mt_rand</span>(<span class="number">1000</span>, <span class="number">9999</span>) . <span class="title function_ invoke__">mt_rand</span>(<span class="number">1000</span>, <span class="number">9999</span>) . <span class="string">&#x27;.&#x27;</span> . <span class="variable">$pre</span>;</span><br><span class="line">    <span class="keyword">if</span> (<span class="title function_ invoke__">is_uploaded_file</span>(<span class="variable">$_FILES</span>[<span class="variable">$name</span>][<span class="string">&#x27;tmp_name&#x27;</span>])) &#123;</span><br><span class="line">        <span class="comment">//先判断图片有没有上传到服务器的临时文件夹</span></span><br><span class="line">        <span class="title function_ invoke__">move_uploaded_file</span>(<span class="variable">$_FILES</span>[<span class="variable">$name</span>][<span class="string">&#x27;tmp_name&#x27;</span>], <span class="variable">$upload</span> . <span class="string">&#x27;/&#x27;</span> . <span class="variable">$file</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&#x27;图片上传成功,&#x27;</span> . <span class="variable">$file</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&#x27;图片上传错误&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 后端 </category>
          
          <category> PHP应用 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PHP </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Ajax异步通信与JSON数据类型</title>
      <link href="/Lutianyao/blog/2022/10/23/01.%E5%90%8E%E7%AB%AF/03.PHP%E5%BA%94%E7%94%A8/04.Ajax%E5%BC%82%E6%AD%A5%E9%80%9A%E4%BF%A1%E4%B8%8EJSON%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/"/>
      <url>/Lutianyao/blog/2022/10/23/01.%E5%90%8E%E7%AB%AF/03.PHP%E5%BA%94%E7%94%A8/04.Ajax%E5%BC%82%E6%AD%A5%E9%80%9A%E4%BF%A1%E4%B8%8EJSON%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/</url>
      
        <content type="html"><![CDATA[<h1 id="Ajax异步通信与JSON数据类型"><a href="#Ajax异步通信与JSON数据类型" class="headerlink" title="Ajax异步通信与JSON数据类型"></a>Ajax异步通信与JSON数据类型</h1><p><strong>概述</strong></p><pre><code>Ajax 的全称是 Asynchronous JavaScript And XML (异步Javascript和XML)。它不是一项新的技术,而是由多种技术组合而成。2005年2月18日,Adaptive Path公司的Jess James Garrett发表了一篇名为：Ajax:A NewApproach to Web Applications(Ajax技术:开发web应用的新思路)的文章。说白了Ajax技术说的是把Javascript、Css、Dom和(X)HTML结合起来的一种新用法。这种结合并不是新概念，事实上DHTML技术早就把这几样技术结合在一起了。Ajax的独到之处在于它在服务器端使用了异步(Asynchronous)处理技术。</code></pre><h2 id="Ajax"><a href="#Ajax" class="headerlink" title="Ajax"></a>Ajax</h2><h3 id="Ajax包含的技术"><a href="#Ajax包含的技术" class="headerlink" title="Ajax包含的技术"></a>Ajax包含的技术</h3><pre><code>基于web标准（standards-based presentation）XHTML+CSS的表示；使用 DOM（Document Object Model）进行动态显示及交互；使用 XML 和 XSLT 进行数据交换及相关操作；使用 XMLHttpRequest 进行异步数据查询、检索；使用 JavaScript 将所有的东西绑定在一起。类似于DHTML或LAMP，AJAX不是指一种单一的技术，而是有机地利用了一系列相关的技术。</code></pre><h3 id="Ajax与传统Web程序的区别"><a href="#Ajax与传统Web程序的区别" class="headerlink" title="Ajax与传统Web程序的区别"></a>Ajax与传统Web程序的区别</h3><p>传统Web模式的工作流程</p><p><img src="/Lutianyao/blog/img/ajax1.png" alt="img"></p><p>Ajax程序的工作流程</p><p><img src="/Lutianyao/blog/img/ajax2.png" alt="img"></p><h3 id="jQuery-ajax"><a href="#jQuery-ajax" class="headerlink" title="jQuery.ajax"></a>jQuery.ajax</h3><pre><code>通过 HTTP 请求加载远程数据。jQuery 底层 AJAX 实现。简单易用的高层实现见 $.get, $.getJSON, $.post 等。$.ajax() 返回其创建的 XMLHttpRequest对象。要加载jq库文件</code></pre><blockquote><p>jQuery.ajax(url,[settings])：通过 HTTP 请求加载远程数据。</p></blockquote><table><thead><tr><th>参数</th><th>说明</th></tr></thead><tbody><tr><td>url</td><td>一个用来包含发送请求的URL字符串</td></tr><tr><td>settings</td><td>AJAX 请求设置。所有选项都是可选的</td></tr></tbody></table><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 加载jq库</span></span><br><span class="line">&lt;script src=<span class="string">&quot;https://ajax.aspnetcdn.com/ajax/jquery/jquery-3.5.1.min.js&quot;</span>&gt;&lt;/script&gt;</span><br><span class="line"><span class="comment">// ajax请求</span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    $.<span class="title function_">ajax</span>(&#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="attr">type</span>: <span class="string">&#x27;get&#x27;</span>,<span class="comment">//请求的方式</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="attr">url</span>: <span class="string">&quot;jq_ajax.php&quot;</span>,<span class="comment">//请求的地址</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="attr">data</span>: &#123;<span class="comment">// 请求参数</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">            <span class="attr">username</span>: username,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">            <span class="attr">pwd</span>: pwd</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        &#125;,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="attr">datetype</span>: <span class="string">&#x27;json&#x27;</span>,<span class="comment">//预期服务器返回的数据类型</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="attr">success</span>: <span class="keyword">function</span> (<span class="params">z</span>) &#123;<span class="comment">// 成功回调的函数</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">            <span class="variable language_">console</span>.<span class="title function_">log</span>(z);</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        &#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="attr">error</span>:<span class="keyword">function</span>(<span class="params">error</span>)&#123;<span class="comment">// 错误回调的函数</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">            <span class="variable language_">console</span>.<span class="title function_">log</span>(error);</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        &#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    &#125;)</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br></pre></td></tr></table></figure><h3 id="同源策略"><a href="#同源策略" class="headerlink" title="同源策略"></a>同源策略</h3><pre><code>同源策略，它是由Netscape提出的一个著名的安全策略。现在所有支持JavaScript 的浏览器都会使用这个策略。所谓同源是指，域名，协议，端口相同。当一个浏览器的两个tab页中分别打开来 百度和谷歌的页面当浏览器的百度tab页执行一个脚本的时候会检查这个脚本是属于哪个页面的，即检查是否同源，只有和百度同源的脚本才会被执行。如果非同源，那么在请求数据时，浏览器会在控制台中报一个异常，提示拒绝访问。</code></pre><h3 id="jsonp跨域-amp-amp-CORS跨域"><a href="#jsonp跨域-amp-amp-CORS跨域" class="headerlink" title="jsonp跨域 &amp;&amp; CORS跨域"></a>jsonp跨域 &amp;&amp; CORS跨域</h3><pre><code>首先抛出浏览器同源策略这个概念，为了保证用户访问的安全，现代浏览器使用了同源策略，即不允许访问非同源的页面在ajax中，不允许请求非同源的URL就可以了，比如www.a.com下的一个页面，其中的ajax请求是不允许访问www.b.com/c.php这样一个页面的。JSONP就是用来解决跨域请求问题的ajax请求受同源策略影响，不允许进行跨域请求，而script标签src属性中的链接却可以访问跨域的js脚本,利用这个特性，服务端不再返回JSON格式的数据，而是返回一段调用某个函数的js代码在src中进行了调用，这样实现了跨域。跨域资源共享（CORS ）是一种网络浏览器的技术规范，它为Web服务器定义了一种方式，允许网页从不同的域访问其资源。 CORS就是为了让AJAX可以实现可控的跨域访问而生的.CORS与JSONP相比:    JSONP只能实现GET请求，而CORS支持所有类型的HTTP请求。    使用CORS，开发者可以使用普通的XMLHttpRequest发起请求和获得数据，比起JSONP有更好的错误处理。    JSONP主要被老的浏览器支持，但它们往往不支持CORS，而绝大多数现代浏览器都已经支持了CORS。本质是HTML5 xhr level2原生ajax请求！CORS只需要在后台中加上响应头来允许域请求！在被请求的Response header中加入以下设置，就可以实现跨域访问了！//指定允许其他域名访问&#39;Access-Control-Allow-Origin:*&#39;//或指定域//响应类型&#39;Access-Control-Allow-Methods:GET,POST&#39;//响应头设置&#39;Access-Control-Allow-Headers:x-requested-with,content-type&#39;</code></pre><h2 id="JSON"><a href="#JSON" class="headerlink" title="JSON"></a>JSON</h2><pre><code>JSON(JavaScript Object Notation) 是一种轻量级的数据交换格式。 易于人阅读和编写。同时也易于机器解析和生成。 它基于 JavaScript Programming Language, Standard ECMA-262 3rd Edition - December 1999的一个子集。JSON采用完全独立于语言的文本格式,但是也使用了类似于C语言家族的习惯(包括C, C++, C#, Java, JavaScript, Perl, Python等)JSON有两种结构：对象结构，数组结构对象结构是使用大括号“&#123;&#125;”括起来的，大括号内是由0个或多个用英文逗号分隔的“关键字:值”对（key:value）构成的。</code></pre><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> jsonObj =&#123;</span><br><span class="line">    <span class="string">&quot;键名1&quot;</span>:<span class="string">&quot;值1&quot;</span>,</span><br><span class="line">    <span class="string">&quot;键名2&quot;</span>:<span class="string">&quot;值2&quot;</span>,</span><br><span class="line">    ……</span><br><span class="line">    <span class="string">&quot;键名n&quot;</span>:<span class="string">&quot;值n&quot;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>JSON数组结构是用中括号“[]”括起来，中括号内部由0个或多个以英文逗号“,”分隔的值列表组成。</p></blockquote><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> arr =[</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="string">&quot;键名1&quot;</span>:<span class="string">&quot;值1&quot;</span>,</span><br><span class="line">        <span class="string">&quot;键名2&quot;</span>:<span class="string">&quot;值2&quot;</span></span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="string">&quot;键名1&quot;</span>:<span class="string">&quot;值3&quot;</span>,</span><br><span class="line">        <span class="string">&quot;键名2&quot;</span>:<span class="string">&quot;值4&quot;</span></span><br><span class="line">    &#125;</span><br><span class="line">]</span><br></pre></td></tr></table></figure><pre><code>用于Ajax或者数据交互的数据格式的统一，但是还有另一种用于数据交互时的数据格式统一的可扩展标记语言，简称XML它可以用来标记数据、定义数据类型，是一种允许用户对自己的标记语言进行定义的源语言。 它非常适合万维网传输，提供统一的方法来描述和交换独立于应用程序或服务器的结构化数据。</code></pre><h3 id="全局JSON对象"><a href="#全局JSON对象" class="headerlink" title="全局JSON对象"></a>全局JSON对象</h3><p><strong>parse</strong></p><p>用于从一个字符串中解析出json 对象</p><blockquote><p>JSON.parse(text [, reviver])</p></blockquote><table><thead><tr><th>参数</th><th>说明</th></tr></thead><tbody><tr><td>text</td><td>必需。 有效的 JSON 文本</td></tr><tr><td>reviver</td><td>可选。 筛选和转换的结果的函数</td></tr></tbody></table><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//js语句中 字符串包含json格式的数据外层最好用单引号</span></span><br><span class="line"><span class="keyword">var</span> jsontext =<span class="string">&#x27;&#123;&quot;firstname&quot;:&quot;Jesper&quot;,&quot;surname&quot;:&quot;Aaberg&quot;,&quot;phone&quot;:[&quot;555- 0100&quot;,&quot;555-0120&quot;]&#125;&#x27;</span>;</span><br><span class="line"><span class="keyword">var</span> contact = <span class="title class_">JSON</span>.<span class="title function_">parse</span>(jsontext);</span><br><span class="line"><span class="keyword">var</span> fullname = contact.<span class="property">surname</span> + <span class="string">&quot;,&quot;</span> + contact.<span class="property">firstname</span>;</span><br></pre></td></tr></table></figure><p><strong>stringify</strong></p><p>用于从一个对象解析出字符串</p><blockquote><p>JSON.stringify(value [, replacer] [, space])</p></blockquote><table><thead><tr><th>参数</th><th>说明</th></tr></thead><tbody><tr><td>value</td><td>必需,JavaScript 值,该值通常对象或数组,将序列化</td></tr><tr><td>replacer</td><td>筛选和转换的结果的函数或数组</td></tr><tr><td>space</td><td>添加缩进,空白和换行符到的返回值JSON文本使代码更容易阅读</td></tr></tbody></table><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> arr=[<span class="string">&#x27;apple&#x27;</span>,<span class="string">&#x27;banana&#x27;</span>,&#123;<span class="attr">test</span>:<span class="string">&#x27;123&#x27;</span>&#125;]; </span><br><span class="line"><span class="keyword">var</span> z= <span class="title class_">JSON</span>.<span class="title function_">stringify</span>(arr); </span><br><span class="line"><span class="comment">//[&quot;apple&quot;,&quot;banana&quot;,&#123;&quot;test&quot;:&quot;123&quot;&#125;] </span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(z);</span><br></pre></td></tr></table></figure><h3 id="PHP中接收和传递JSON"><a href="#PHP中接收和传递JSON" class="headerlink" title="PHP中接收和传递JSON"></a>PHP中接收和传递JSON</h3><pre><code>json_decode — 对 JSON 格式的字符串进行编码json_encode — 对变量进行 JSON 编码</code></pre><p><strong>json_decode</strong></p><blockquote><p>mixed json_decode (string $json [, bool $assoc ])</p></blockquote><table><thead><tr><th>参数</th><th>说明</th></tr></thead><tbody><tr><td>json</td><td>待解码的 json string格式的字符串</td></tr><tr><td>assoc</td><td>当该参数为 TRUE 时,将返回 array 非 object</td></tr></tbody></table><pre><code>使用json_decode的一些注意事项    使用UTF-8编码    不能在最后元素有逗号    不能使用单引号    不能有\r,\t，如果有请替换</code></pre><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$json = <span class="string">&#x27;&#123;&quot;a&quot;:1,&quot;b&quot;:2,&quot;c&quot;:3,&quot;d&quot;:4,&quot;e&quot;:5&#125;&#x27;</span>;</span><br><span class="line"><span class="title function_">var_dump</span>(<span class="title function_">json_decode</span>($json)); </span><br><span class="line"><span class="title function_">var_dump</span>(<span class="title function_">json_decode</span>($json, <span class="literal">true</span>));</span><br></pre></td></tr></table></figure><p><strong>json_encode</strong></p><blockquote><p>string json_encode ( mixed $value )</p></blockquote><table><thead><tr><th>参数</th><th>说明</th></tr></thead><tbody><tr><td>value</td><td>待编码的value</td></tr></tbody></table><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$arr = array (<span class="string">&#x27;a&#x27;</span>=&gt;<span class="number">1</span>,<span class="string">&#x27;b&#x27;</span>=&gt;<span class="number">2</span>,<span class="string">&#x27;c&#x27;</span>=&gt;<span class="number">3</span>,<span class="string">&#x27;d&#x27;</span>=&gt;<span class="number">4</span>,<span class="string">&#x27;e&#x27;</span>=&gt;<span class="number">5</span>); </span><br><span class="line">echo <span class="title function_">json_encode</span>($arr);</span><br><span class="line"><span class="comment">// &#123;&quot;a&quot;:1,&quot;b&quot;:2,&quot;c&quot;:3,&quot;d&quot;:4,&quot;e&quot;:5&#125;</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 后端 </category>
          
          <category> PHP应用 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PHP </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>验证码功能实现</title>
      <link href="/Lutianyao/blog/2022/10/23/01.%E5%90%8E%E7%AB%AF/03.PHP%E5%BA%94%E7%94%A8/03.%E9%AA%8C%E8%AF%81%E7%A0%81%E5%8A%9F%E8%83%BD%E5%AE%9E%E7%8E%B0/"/>
      <url>/Lutianyao/blog/2022/10/23/01.%E5%90%8E%E7%AB%AF/03.PHP%E5%BA%94%E7%94%A8/03.%E9%AA%8C%E8%AF%81%E7%A0%81%E5%8A%9F%E8%83%BD%E5%AE%9E%E7%8E%B0/</url>
      
        <content type="html"><![CDATA[<h1 id="验证码功能实现"><a href="#验证码功能实现" class="headerlink" title="验证码功能实现"></a>验证码功能实现</h1><p><strong>概述</strong></p><pre><code>验证码是将一串随机产生的数字或符号，生成一幅图片，图片里加上一些干扰象素（防止OCR）。由用户肉眼识别其中的验证码信息，输入表单提交网站验证，验证成功后才能使用某项功能。作用的是现代的验证码一般是防止机器批量注册的，防止机器批量发帖回复。目前，不少网站为了防止用户利用机器人自动注册、登录、灌水，刷票都采用了验证码技术。</code></pre><p><strong>代码演示</strong></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//验证码</span></span><br><span class="line">    <span class="comment">//设置验证码内的字符</span></span><br><span class="line">    <span class="comment">//参数$length,每次获取几个随机字符</span></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">get_str</span>(<span class="params"><span class="variable">$length</span>=<span class="number">1</span></span>)</span>&#123;</span><br><span class="line">        <span class="variable">$chars</span>=<span class="string">&#x27;3456789ABCDEFGHIJKLMNOPQRSTUVWXYZ&#x27;</span>;<span class="comment">//字符库</span></span><br><span class="line">        <span class="variable">$s</span>=<span class="title function_ invoke__">str_shuffle</span>(<span class="variable">$chars</span>);<span class="comment">//随机打乱字符串</span></span><br><span class="line">        <span class="variable">$str</span>=<span class="title function_ invoke__">substr</span>(<span class="variable">$s</span>,<span class="number">0</span>,<span class="variable">$length</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="variable">$str</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//echo get_str();</span></span><br><span class="line">    <span class="comment">//生成验证码</span></span><br><span class="line">    <span class="comment">//创建图片</span></span><br><span class="line">    <span class="variable">$width</span>=<span class="number">80</span>;</span><br><span class="line">    <span class="variable">$height</span>=<span class="number">34</span>;</span><br><span class="line">    <span class="comment">// 创建画布</span></span><br><span class="line">    <span class="variable">$img</span>=<span class="title function_ invoke__">imagecreatetruecolor</span>(<span class="variable">$width</span>,<span class="variable">$height</span>);</span><br><span class="line">    <span class="comment">//设置背景颜色,颜色必须使用rgb格式</span></span><br><span class="line">    <span class="variable">$bgcolor</span>=<span class="title function_ invoke__">imagecolorallocate</span>(<span class="variable">$img</span>,<span class="number">238</span>,<span class="number">238</span>,<span class="number">238</span>);<span class="comment">//#eeeeee</span></span><br><span class="line">    <span class="comment">//设置文字颜色</span></span><br><span class="line">    <span class="variable">$textcolor</span>=<span class="title function_ invoke__">imagecolorallocate</span>(<span class="variable">$img</span>,<span class="number">255</span>,<span class="number">0</span>,<span class="number">0</span>);<span class="comment">//#ff0000</span></span><br><span class="line">    <span class="comment">//绘制图片背景,把背景颜色加入图片</span></span><br><span class="line">    <span class="title function_ invoke__">imagefilledrectangle</span>(<span class="variable">$img</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="variable">$width</span>,<span class="variable">$height</span>,<span class="variable">$bgcolor</span>);</span><br><span class="line">    <span class="comment">//第2个和第3个参数是左上角坐标</span></span><br><span class="line">    <span class="comment">//第4个和第5个参数是右下角坐标</span></span><br><span class="line">    <span class="comment">//这两个坐标可以确定一块矩形区域</span></span><br><span class="line">    <span class="comment">//获取验证码字符,每次1个一共获取4个随机字符</span></span><br><span class="line">    <span class="variable">$get_code1</span>=<span class="title function_ invoke__">get_str</span>();</span><br><span class="line">    <span class="variable">$get_code2</span>=<span class="title function_ invoke__">get_str</span>();</span><br><span class="line">    <span class="variable">$get_code3</span>=<span class="title function_ invoke__">get_str</span>();</span><br><span class="line">    <span class="variable">$get_code4</span>=<span class="title function_ invoke__">get_str</span>();</span><br><span class="line">    <span class="comment">//把验证码放入图片内</span></span><br><span class="line">    <span class="variable">$font</span>=<span class="string">&#x27;images/texb.ttf&#x27;</span>;<span class="comment">//注意：如果写相对路径，验证码出不来时，把路径写成绝对路径</span></span><br><span class="line">    <span class="title function_ invoke__">imagettftext</span>(<span class="variable">$img</span>,<span class="number">16</span>,<span class="title function_ invoke__">mt_rand</span>(-<span class="number">30</span>,<span class="number">30</span>),<span class="number">1</span>,<span class="number">26</span>,<span class="variable">$textcolor</span>,<span class="variable">$font</span>,<span class="variable">$get_code1</span>);</span><br><span class="line">    <span class="title function_ invoke__">imagettftext</span>(<span class="variable">$img</span>,<span class="number">16</span>,<span class="title function_ invoke__">mt_rand</span>(-<span class="number">30</span>,<span class="number">30</span>),<span class="number">20</span>,<span class="number">26</span>,<span class="variable">$textcolor</span>,<span class="variable">$font</span>,<span class="variable">$get_code2</span>);</span><br><span class="line">    <span class="title function_ invoke__">imagettftext</span>(<span class="variable">$img</span>,<span class="number">16</span>,<span class="title function_ invoke__">mt_rand</span>(-<span class="number">30</span>,<span class="number">30</span>),<span class="number">40</span>,<span class="number">26</span>,<span class="variable">$textcolor</span>,<span class="variable">$font</span>,<span class="variable">$get_code3</span>);</span><br><span class="line">    <span class="title function_ invoke__">imagettftext</span>(<span class="variable">$img</span>,<span class="number">16</span>,<span class="title function_ invoke__">mt_rand</span>(-<span class="number">30</span>,<span class="number">30</span>),<span class="number">60</span>,<span class="number">26</span>,<span class="variable">$textcolor</span>,<span class="variable">$font</span>,<span class="variable">$get_code4</span>);</span><br><span class="line">    <span class="comment">//第一个参数是图片变量</span></span><br><span class="line">    <span class="comment">//第二个参数是字体大小</span></span><br><span class="line">    <span class="comment">//第三个参数是字符倾斜度,负数向左,正数向右,数值越大角度越大</span></span><br><span class="line">    <span class="comment">//第四个和第五个参数是字符所在位置的x坐标和y坐标</span></span><br><span class="line">    <span class="comment">//第六个参数是字符颜色</span></span><br><span class="line">    <span class="comment">//第七个参数是字体库</span></span><br><span class="line">    <span class="comment">//第八个参数是需要放进去的字符</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">//绘制一些点状像素</span></span><br><span class="line">    <span class="keyword">for</span>(<span class="variable">$i</span>=<span class="number">0</span>;<span class="variable">$i</span>&lt;=<span class="number">10</span>;<span class="variable">$i</span>++)&#123;</span><br><span class="line">        <span class="title function_ invoke__">imagesetpixel</span>(<span class="variable">$img</span>,<span class="title function_ invoke__">mt_rand</span>(<span class="number">0</span>,<span class="variable">$width</span>),<span class="title function_ invoke__">mt_rand</span>(<span class="number">0</span>,<span class="variable">$height</span>),<span class="title function_ invoke__">imagecolorallocate</span>(<span class="variable">$img</span>,<span class="title function_ invoke__">mt_rand</span>(<span class="number">0</span>,<span class="number">255</span>),<span class="title function_ invoke__">mt_rand</span>(<span class="number">0</span>,<span class="number">255</span>),<span class="title function_ invoke__">mt_rand</span>(<span class="number">0</span>,<span class="number">255</span>)));</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//第二个和第三个参数是点的位置坐标</span></span><br><span class="line">    <span class="comment">//第四个参数是点的颜色</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">//绘制一些线像素</span></span><br><span class="line">    <span class="keyword">for</span>(<span class="variable">$i</span>=<span class="number">0</span>;<span class="variable">$i</span>&lt;=<span class="number">5</span>;<span class="variable">$i</span>++)&#123;</span><br><span class="line">        <span class="title function_ invoke__">imageline</span>(<span class="variable">$img</span>,<span class="title function_ invoke__">mt_rand</span>(<span class="number">0</span>,<span class="variable">$width</span>),<span class="title function_ invoke__">mt_rand</span>(<span class="number">0</span>,<span class="variable">$height</span>),<span class="title function_ invoke__">mt_rand</span>(<span class="number">0</span>,<span class="variable">$width</span>),<span class="title function_ invoke__">mt_rand</span>(<span class="number">0</span>,<span class="variable">$height</span>),<span class="title function_ invoke__">imagecolorallocate</span>(<span class="variable">$img</span>,<span class="title function_ invoke__">mt_rand</span>(<span class="number">0</span>,<span class="number">255</span>),<span class="title function_ invoke__">mt_rand</span>(<span class="number">0</span>,<span class="number">255</span>),<span class="title function_ invoke__">mt_rand</span>(<span class="number">0</span>,<span class="number">255</span>)));</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//第2/3/4/5个参数是线的两端坐标</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">//将验证码中的四个字符保存在session里面</span></span><br><span class="line">    <span class="title function_ invoke__">session_start</span>();</span><br><span class="line">    <span class="variable">$get_code</span>=<span class="variable">$get_code1</span>.<span class="variable">$get_code2</span>.<span class="variable">$get_code3</span>.<span class="variable">$get_code4</span>;</span><br><span class="line">    <span class="variable">$_SESSION</span>[<span class="string">&#x27;imgcode&#x27;</span>]=<span class="variable">$get_code</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//输出图片</span></span><br><span class="line">    <span class="title function_ invoke__">header</span>(<span class="string">&#x27;Content-Type:image/png&#x27;</span>);</span><br><span class="line">    <span class="title function_ invoke__">imagepng</span>(<span class="variable">$img</span>);</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 后端 </category>
          
          <category> PHP应用 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PHP </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>COOKIE缓存 &amp;&amp; SESSION缓存</title>
      <link href="/Lutianyao/blog/2022/10/23/01.%E5%90%8E%E7%AB%AF/03.PHP%E5%BA%94%E7%94%A8/02.COOKIE%E7%BC%93%E5%AD%98%20&amp;&amp;%20SESSION%E7%BC%93%E5%AD%98/"/>
      <url>/Lutianyao/blog/2022/10/23/01.%E5%90%8E%E7%AB%AF/03.PHP%E5%BA%94%E7%94%A8/02.COOKIE%E7%BC%93%E5%AD%98%20&amp;&amp;%20SESSION%E7%BC%93%E5%AD%98/</url>
      
        <content type="html"><![CDATA[<h1 id="COOKIE缓存-amp-amp-SESSION缓存"><a href="#COOKIE缓存-amp-amp-SESSION缓存" class="headerlink" title="COOKIE缓存 &amp;&amp; SESSION缓存"></a>COOKIE缓存 &amp;&amp; SESSION缓存</h1><h2 id="cookie和session的区别"><a href="#cookie和session的区别" class="headerlink" title="cookie和session的区别"></a>cookie和session的区别</h2><pre><code>cookie和session都可以暂时保存多个页面中使用的变量。但是它们有本质的差别:cookie 存放在客户端浏览器中，session保存在服务器上;它们之间的联系是sessionID一般保存在cookie中,或者放在URL上。当客户端禁用cookie时,session_id将无法传递, 此时session失效。不过php5在linux/unix平台可以自动检查cookie状态,如果客户端设置了禁用,则系统自动把session_id附加到url上传递。windows主机则无此功能</code></pre><h2 id="COOKIE"><a href="#COOKIE" class="headerlink" title="COOKIE"></a>COOKIE</h2><pre><code>cookie是在http协议下,服务器或脚本可以维护客户端信息的一种方式。cookie是web服务器保存在用户浏览器上的小甜饼(一个很小的文本文件)。它可以包含有关用户的信息,常用于保存用户名,密码,个性化设置,个人偏好记录等。当用户访问服务器时,服务器可以设置和访问cookie的信息。cookie保存在客户端,通常是IE或Firefox浏览器的cookie临时文件夹中,可以手动删除。Cookie是利用了网页代码中的HTTP头信息进行传递的,浏览器的每一次网页请求,都可以伴随Cookie传递。注意:如果浏览器上cookie 太多,超过了系统所允许的范围,浏览器也会手动对它进行删除。</code></pre><h3 id="cookie-工作原理"><a href="#cookie-工作原理" class="headerlink" title="cookie 工作原理"></a>cookie 工作原理</h3><pre><code>当客户访问某个基于PHP技术的网站时,在PHP中可以使用setcookie函数生成一个cookie.系统经处理把这个cookie发送到客户端并保存在C:\Documents and Settings\用户名\Cookies目录下。cookie是HTTP头的一部分,因此setcookie()函数必须在HTML本身的任何内容送到浏览器之前调用。这种限制与header函数一样。当客户再次访问该网站时。浏览器会自动把C:\Documents and Settings\用户名\Cookies目录下与该站点对应的cookie发送到服务器.服务器则把从客户端传来的cookie将自动地转化成一个PHP变量。在PHP5中,客户端发来的cookie将被转换成全局变量。可以通过$_COOKIE[&#39;xxx&#39;]读取</code></pre><h3 id="设置cookie"><a href="#设置cookie" class="headerlink" title="设置cookie"></a>设置cookie</h3><table><thead><tr><th>参数</th><th>说明</th></tr></thead><tbody><tr><td>name</td><td>设置cookie的名字(必须)</td></tr><tr><td>value</td><td>设置cookie的值</td></tr><tr><td>expire</td><td>可选。规定 cookie 的过期时间</td></tr><tr><td>path</td><td>可选。规定 cookie 的服务器路径</td></tr><tr><td>domain</td><td>可选。规定 cookie 的域名</td></tr><tr><td>secure</td><td>可选</td></tr></tbody></table><pre><code>语法    setcookie(name,value,expire,path,domain,secure)例    setcookie(“username”, “admin”, time() + 60 * 60);</code></pre><h3 id="接收和使用cookie"><a href="#接收和使用cookie" class="headerlink" title="接收和使用cookie"></a>接收和使用cookie</h3><pre><code>PHP对cookie有很好的支持,和form表单一样.在接收的时候PHP会自动从web服务器接收HTTP头并且分析它。接收的时候和表单接收一样    echo $_COOKIE[&quot;username&quot;];</code></pre><h3 id="删除Cookie"><a href="#删除Cookie" class="headerlink" title="删除Cookie"></a>删除Cookie</h3><pre><code>调用只带有name参数的setcookie,那么名为这个cookie将被从客户机上删除; 例:setcookie(“MyCookie”);设置Cookie的失效时间为time()或time()-1setcookie(&quot;username&quot;,&quot;admin&quot;,time()-1);time()减多少没有关系,只要是过期时间就行。那么这个Cookie在这个页面的浏览完之后就被删除了(其实是失效了)。 当这个Cookie被删除时,它的值在当前页仍然有效。如果要把cookie设置成在浏览器关闭后就失效。那么可以直接把expiretime设为0,或者不设置此值。setcookie(&quot;name&quot;,&quot;value&quot;,0)。</code></pre><h3 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a>注意事项</h3><pre><code>setcookie()之前不能有任何html输出,就是空格,空白行都不行。       setcookie()后,在当前页调用echo $_COOKIE[“name”]不会有输出。必须刷新或到下一个页面才可以看到cookie值。使用cookie的限制。一个浏览器能创建的cookie数量最多为300个,并且每个不能超过4KB,每个WEB站点能设置的cookie总数不能超过20个。cookie是保存在客户端的,用户禁用了cookie,你的cookie自然也就没作用啦!如果在某个页面获取不到cookie的，那需要设置cookie的第四个参数，    例     setcookie(&quot;id&quot;,$id, time()+36002430 ,&#39;/&#39;);</code></pre><h2 id="SESSION"><a href="#SESSION" class="headerlink" title="SESSION"></a>SESSION</h2><pre><code>Session从用户访问页面开始,到断开与网站连接为止,形成一个会话的生命周期。在会话期间, 分配客户唯一的一个SessionID,用来标识当前用户,与其他用户进行区分。Session会话时,SessionID会分别保存在客户端和服务器端两个位置,对于客户端使用临时的Cookie保存(Cookie名称为PHPSESSID)或者通过URL字符串传递,服务器端也以文本文件形式保存在指定的Session目录中。Session通过ID接受每个访问请求,从而识别当前用户、跟踪和保持用户具体资料,以及Session变量,比如session_name等等,这些变量信息保存在服务器端。SessionID可以作为会话信息保存到数据库中,进行Session持久化,这样可以跟踪每个用户的登陆次数、在线与否、在线时间等。</code></pre><h3 id="会话控制"><a href="#会话控制" class="headerlink" title="会话控制"></a>会话控制</h3><pre><code>为了使得网站可以跟踪客户端与服务器之间的交互,保存和记忆每个用户的身份和信息.我们需要一种强有力的解决方案,这样就产生了会话控制。HTTP是一个无状态的协议,此协议无法来维护两个事务之间的联系。当一个用户请求一个页面后再请求另外一个页面时,HTTP无法告诉我们这两个请求是来自同一个人。会话控制思想就是能够在网站中跟踪一个变量,我们可以跟踪变量,就可以做到对用户的支持。并根据授权和用户身份显示不同内容,不同页面。</code></pre><h3 id="使用会话的基本步骤"><a href="#使用会话的基本步骤" class="headerlink" title="使用会话的基本步骤"></a>使用会话的基本步骤</h3><pre><code>开始会话 &gt; 注册会话变量 &gt; 使⽤会话变量 &gt; 注销变量并销毁会话</code></pre><h3 id="开始会话"><a href="#开始会话" class="headerlink" title="开始会话"></a>开始会话</h3><pre><code>session_start() 开始一个会话或者返回已经存在的会话。说明:这个函数没有参数,且返回值均为true。如果你使用基于cookie的session,那么在使用session_start()之前浏览器不能有任何输出,否则会发生以下错误:Warning: Cannot send session cache limiter - headers already sent (output started at /var/www/html/test.php:2)也可以在php.ini中启动session.auto_start=1,这样就无需每次使用session之前都要调用session_start()。启用此指令的缺点是无法在会话中存储对象,因为定义要在会话开始之前加载才能重新创建对象。</code></pre><h3 id="注册、使用会话变量"><a href="#注册、使用会话变量" class="headerlink" title="注册、使用会话变量"></a>注册、使用会话变量</h3><pre><code>PHP5使用$_SESSION[‘xxx’]=xxx 注册SESSION全局变量。和GET,POST,COOKIE的使用方法相似。session_start();$_SESSION[&#39;username&#39;] = &quot;david&quot;;echo &quot;Your username is &quot;.$_SESSION[&#39;username&#39;];</code></pre><h3 id="注销会话变量"><a href="#注销会话变量" class="headerlink" title="注销会话变量"></a>注销会话变量</h3><pre><code>session_unset()函数清除存储在当前会话中的所有变量,它能有效地将会话重置为创建时的状态。session_destroy()函数从存储机制中完全删除会话,使当前会话失效。</code></pre><h3 id="存储session信息"><a href="#存储session信息" class="headerlink" title="存储session信息"></a>存储session信息</h3><pre><code>session.save_path = /tmp;     设为文件时, session文件保存的路径session.use_cookies = 1 ;     是否使用cookiessession.name = PHPSESSID;     在cookie的session的名字session.auto_start = 0 ;      是否自动启动sessionsession.cookie_lifetime = 0;  设置会话cookie的有效期,以秒为单位,为0时表示直到浏览器被重启session.cookie_path = / ;     cookie的有效路径session.cookie_domain = ;     cookie的有效域session.cache_expire = 180;   设置缓存中的会话文档在 n 分钟后过时</code></pre>]]></content>
      
      
      <categories>
          
          <category> 后端 </category>
          
          <category> PHP应用 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PHP </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>PHP表单操作</title>
      <link href="/Lutianyao/blog/2022/10/23/01.%E5%90%8E%E7%AB%AF/03.PHP%E5%BA%94%E7%94%A8/01.%E8%A1%A8%E5%8D%95%E6%93%8D%E4%BD%9C/"/>
      <url>/Lutianyao/blog/2022/10/23/01.%E5%90%8E%E7%AB%AF/03.PHP%E5%BA%94%E7%94%A8/01.%E8%A1%A8%E5%8D%95%E6%93%8D%E4%BD%9C/</url>
      
        <content type="html"><![CDATA[<h1 id="表单操作"><a href="#表单操作" class="headerlink" title="表单操作"></a>表单操作</h1><h3 id="GET"><a href="#GET" class="headerlink" title="$_GET"></a>$_GET</h3><pre><code>所有表单输入的数据被加载到请求的URL地址后面;如：test.php?username=free&amp;password=123&amp;content=dfdsfsfd;GET方式提交数据只能传递文本，能够提交的数据量大小有限，安全性差;</code></pre><h3 id="POST"><a href="#POST" class="headerlink" title="$_POST"></a>$_POST</h3><pre><code>POST提交数据的方式把表单的数据打包放入http请求中;POST能够提交更多的数据;</code></pre><h3 id="接收数据"><a href="#接收数据" class="headerlink" title="接收数据"></a>接收数据</h3><pre><code>表单提交的数据会自动封装为数组;     用$_GET, $_POST, 或$_REQUEST获得表单提交的数据;</code></pre><h3 id="处理多值表单控件"><a href="#处理多值表单控件" class="headerlink" title="处理多值表单控件"></a>处理多值表单控件</h3><pre><code>多值表单控件（如复选框和多选框），大大提高了基于web的数据收集能力;因为这些组件是多值的，所以表单处理函数必须能够识别一个表单变量中可能有多个值;为了让php识别一个表单变量的多个值（即考虑为数组），需要对表单名(元素的name属性值）增加一对中括号，如:&lt;input type=&quot;checkbox&quot; name=&quot;love[]&quot; /&gt;</code></pre><h3 id="REQUEST"><a href="#REQUEST" class="headerlink" title="$_REQUEST"></a>$_REQUEST</h3><pre><code>$_REQUEST 支持两种方式发送过来的请求，即 post 和 get 它都可以接受，显示不显示要看传递方法。get 会显示在 url 中（有字符数限制），post 不会在 url 中显示，可以传递任意多的数据（只要服务器支持）</code></pre><h3 id="代码示例"><a href="#代码示例" class="headerlink" title="代码示例"></a>代码示例</h3><p><strong>HTML代码</strong></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;IE=edge&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">&quot;register.php&quot;</span> <span class="attr">method</span>=<span class="string">&quot;post&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">table</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">td</span>&gt;</span>用户名：<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">name</span>=<span class="string">&quot;username&quot;</span> <span class="attr">placeholder</span>=<span class="string">&quot;请输入用户名&quot;</span> <span class="attr">required</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">td</span>&gt;</span>密码：<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;password&quot;</span> <span class="attr">name</span>=<span class="string">&quot;pwd&quot;</span> <span class="attr">placeholder</span>=<span class="string">&quot;请输入密码&quot;</span> <span class="attr">required</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">td</span>&gt;</span>爱好<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">td</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;checkbox&quot;</span> <span class="attr">name</span>=<span class="string">&quot;love[]&quot;</span> <span class="attr">value</span>=<span class="string">&quot;1&quot;</span>&gt;</span>看电影</span><br><span class="line">                    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;checkbox&quot;</span> <span class="attr">name</span>=<span class="string">&quot;love[]&quot;</span> <span class="attr">value</span>=<span class="string">&quot;2&quot;</span>&gt;</span>玩游戏</span><br><span class="line">                    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;checkbox&quot;</span> <span class="attr">name</span>=<span class="string">&quot;love[]&quot;</span> <span class="attr">value</span>=<span class="string">&quot;3&quot;</span>&gt;</span>写代码</span><br><span class="line">                <span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;submit&quot;</span> <span class="attr">value</span>=<span class="string">&quot;登陆&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p><strong>php代码</strong></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">    <span class="comment">// 接收POST提交过来的数据</span></span><br><span class="line">    <span class="title function_ invoke__">print_r</span>(<span class="variable">$_POST</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 后端 </category>
          
          <category> PHP应用 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PHP </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>封装函数</title>
      <link href="/Lutianyao/blog/2022/10/23/01.%E5%90%8E%E7%AB%AF/02.MySQL/08.%E5%B0%81%E8%A3%85%E5%87%BD%E6%95%B0/"/>
      <url>/Lutianyao/blog/2022/10/23/01.%E5%90%8E%E7%AB%AF/02.MySQL/08.%E5%B0%81%E8%A3%85%E5%87%BD%E6%95%B0/</url>
      
        <content type="html"><![CDATA[<h1 id="封装函数"><a href="#封装函数" class="headerlink" title="封装函数"></a>封装函数</h1><pre><code>在日常使用PHP对mysql进行增删改查时有很多代码是重复的，所以可以对增删改查几个数据库操作进行封装</code></pre><p><strong>function.php</strong></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//声明编码</span></span><br><span class="line"><span class="title function_ invoke__">header</span>(<span class="string">&quot;Content-Type:text/html;charset=utf-8&quot;</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//单条查询</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">find</span>(<span class="params"><span class="variable">$sql</span> = <span class="literal">null</span></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">//引入全局变量</span></span><br><span class="line">    <span class="keyword">global</span> <span class="variable">$conn</span>;</span><br><span class="line">    <span class="variable">$res</span> = <span class="title function_ invoke__">mysqli_query</span>(<span class="variable">$conn</span>, <span class="variable">$sql</span>);</span><br><span class="line">    <span class="keyword">if</span>(!<span class="variable">$res</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;SQL语句执行失败：&quot;</span>.<span class="variable">$sql</span>;</span><br><span class="line">        <span class="keyword">exit</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//返回数据</span></span><br><span class="line">    <span class="keyword">return</span> <span class="title function_ invoke__">mysqli_fetch_assoc</span>(<span class="variable">$res</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//多条查询</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">all</span>(<span class="params"><span class="variable">$sql</span> = <span class="literal">null</span></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">//引入全局变量</span></span><br><span class="line">    <span class="keyword">global</span> <span class="variable">$conn</span>;</span><br><span class="line">    <span class="variable">$res</span> = <span class="title function_ invoke__">mysqli_query</span>(<span class="variable">$conn</span>, <span class="variable">$sql</span>);</span><br><span class="line">    <span class="keyword">if</span>(!<span class="variable">$res</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;SQL语句执行失败：&quot;</span>.<span class="variable">$sql</span>;</span><br><span class="line">        <span class="keyword">exit</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 多条数据就是要循环</span></span><br><span class="line">    <span class="variable">$list</span> = [];</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span>(<span class="variable">$data</span> = <span class="title function_ invoke__">mysqli_fetch_assoc</span>(<span class="variable">$res</span>))</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="variable">$list</span>[] = <span class="variable">$data</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//返回数据</span></span><br><span class="line">    <span class="keyword">return</span> <span class="variable">$list</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">// 插入函数</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">add</span>(<span class="params"><span class="variable">$table</span>, <span class="variable">$data</span></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">// INSERT INTO 表名(`字段1`,`字段2`,`字段3`)VALUES(&#x27;值1&#x27;,&#x27;值2&#x27;,&#x27;值3&#x27;)</span></span><br><span class="line">    <span class="keyword">global</span> <span class="variable">$conn</span>;</span><br><span class="line">    <span class="keyword">global</span> <span class="variable">$pre_</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//给表名拼接上表前缀</span></span><br><span class="line">    <span class="variable">$table</span> = <span class="variable">$pre_</span>.<span class="variable">$table</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//将数组里面的索引全部提取出来变成一个新数组</span></span><br><span class="line">    <span class="variable">$keys</span> = <span class="title function_ invoke__">array_keys</span>(<span class="variable">$data</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">//数组变成字符串</span></span><br><span class="line">    <span class="variable">$fields</span> = <span class="string">&quot;`&quot;</span>.<span class="title function_ invoke__">implode</span>(<span class="string">&quot;`,`&quot;</span>, <span class="variable">$keys</span>).<span class="string">&quot;`&quot;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="variable">$values</span> = <span class="string">&quot;&#x27;&quot;</span>.<span class="title function_ invoke__">implode</span>(<span class="string">&quot;&#x27;,&#x27;&quot;</span>, <span class="variable">$data</span>).<span class="string">&quot;&#x27;&quot;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="variable">$sql</span> = <span class="string">&quot;INSERT INTO <span class="subst">$table</span>(<span class="subst">$fields</span>)VALUES(<span class="subst">$values</span>)&quot;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//执行语句</span></span><br><span class="line">    <span class="variable">$res</span> = <span class="title function_ invoke__">mysqli_query</span>(<span class="variable">$conn</span>, <span class="variable">$sql</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(!<span class="variable">$res</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;SQL语句执行失败：&quot;</span>.<span class="variable">$sql</span>;</span><br><span class="line">        <span class="keyword">exit</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//返回插入ID</span></span><br><span class="line">    <span class="keyword">return</span> <span class="title function_ invoke__">mysqli_insert_id</span>(<span class="variable">$conn</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//更新</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">update</span>(<span class="params"><span class="variable">$table</span>, <span class="variable">$data</span>, <span class="variable">$where</span> = <span class="number">1</span></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">//UPDATE 表名 SET `字段1` = &#x27;值1&#x27;, `字段2` = &#x27;值2&#x27; WHERE 条件</span></span><br><span class="line">    <span class="keyword">global</span> <span class="variable">$conn</span>;</span><br><span class="line">    <span class="keyword">global</span> <span class="variable">$pre_</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//拼接表名</span></span><br><span class="line">    <span class="variable">$table</span> = <span class="variable">$pre_</span>.<span class="variable">$table</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//直接组装</span></span><br><span class="line">    <span class="variable">$str</span> = <span class="string">&quot;&quot;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">foreach</span>(<span class="variable">$data</span> <span class="keyword">as</span> <span class="variable">$key</span>=&gt;<span class="variable">$item</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="variable">$str</span> .= <span class="string">&quot;`<span class="subst">$key</span>` = &#x27;<span class="subst">$item</span>&#x27;,&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="variable">$str</span> = <span class="title function_ invoke__">trim</span>(<span class="variable">$str</span>, <span class="string">&quot;,&quot;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">//组装sql语句</span></span><br><span class="line">    <span class="variable">$sql</span> = <span class="string">&quot;UPDATE <span class="subst">$table</span> SET <span class="subst">$str</span> WHERE <span class="subst">$where</span>&quot;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//执行sql</span></span><br><span class="line">    <span class="variable">$res</span> = <span class="title function_ invoke__">mysqli_query</span>(<span class="variable">$conn</span>, <span class="variable">$sql</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(!<span class="variable">$res</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;SQL语句执行失败：&quot;</span>.<span class="variable">$sql</span>;</span><br><span class="line">        <span class="keyword">exit</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//返回影响行数</span></span><br><span class="line">    <span class="keyword">return</span> <span class="title function_ invoke__">mysqli_affected_rows</span>(<span class="variable">$conn</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//删除</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">del</span>(<span class="params"><span class="variable">$table</span>, <span class="variable">$where</span> = <span class="number">1</span></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">//DELETE FROM 表名 WHERE where</span></span><br><span class="line">    <span class="keyword">global</span> <span class="variable">$conn</span>;</span><br><span class="line">    <span class="keyword">global</span> <span class="variable">$pre_</span>;</span><br><span class="line"></span><br><span class="line">    <span class="variable">$table</span> = <span class="variable">$pre_</span>.<span class="variable">$table</span>;</span><br><span class="line"></span><br><span class="line">    <span class="variable">$sql</span> = <span class="string">&quot;DELETE FROM <span class="subst">$table</span> WHERE <span class="subst">$where</span>&quot;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//执行sql</span></span><br><span class="line">    <span class="variable">$res</span> = <span class="title function_ invoke__">mysqli_query</span>(<span class="variable">$conn</span>, <span class="variable">$sql</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(!<span class="variable">$res</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;SQL语句执行失败：&quot;</span>.<span class="variable">$sql</span>;</span><br><span class="line">        <span class="keyword">exit</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//返回影响行数</span></span><br><span class="line">    <span class="keyword">return</span> <span class="title function_ invoke__">mysqli_affected_rows</span>(<span class="variable">$conn</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>config.php</strong></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_ invoke__">header</span>(<span class="string">&quot;Content-Type:text/html;charset=utf-8&quot;</span>);</span><br><span class="line">    <span class="comment">/* </span></span><br><span class="line"><span class="comment">    连接数据库</span></span><br><span class="line"><span class="comment">        host        主机地址</span></span><br><span class="line"><span class="comment">        username    用户名</span></span><br><span class="line"><span class="comment">        password    密码</span></span><br><span class="line"><span class="comment">        dbname      默认使用数据库</span></span><br><span class="line"><span class="comment">        port        连接到 MySQL 服务器的端口</span></span><br><span class="line"><span class="comment">        socket      socket 或要使用的已命名 pipe</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">    <span class="variable">$conn</span>=<span class="title function_ invoke__">mysqli_connect</span>(<span class="string">&#x27;localhost&#x27;</span>,<span class="string">&#x27;root&#x27;</span>,<span class="string">&#x27;root&#x27;</span>);</span><br><span class="line">    <span class="keyword">if</span>(!<span class="variable">$conn</span>)&#123;<span class="comment">//如果连接数据库失败</span></span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;错误码：&quot;</span>. <span class="title function_ invoke__">mysqli_connect_errno</span>();</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;错误：&quot;</span>. <span class="title function_ invoke__">mysqli_connect_error</span>();</span><br><span class="line">        <span class="keyword">exit</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//选择数据库</span></span><br><span class="line">    <span class="title function_ invoke__">mysqli_select_db</span>(<span class="variable">$conn</span>, <span class="string">&quot;company&quot;</span>);</span><br><span class="line">    <span class="comment">//设置默认客户端字符集</span></span><br><span class="line">    <span class="title function_ invoke__">mysqli_set_charset</span>(<span class="variable">$conn</span>,<span class="string">&quot;utf8&quot;</span>);</span><br><span class="line">    <span class="comment">// 引入function函数库</span></span><br><span class="line">    <span class="keyword">include_once</span>(<span class="string">&#x27;function.php&#x27;</span>);</span><br></pre></td></tr></table></figure><p><strong>使用</strong></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">include_once</span>(<span class="string">&#x27;config.php&#x27;</span>);</span><br><span class="line">    <span class="comment">//新增数据</span></span><br><span class="line">    <span class="variable">$data</span>=<span class="keyword">array</span>(</span><br><span class="line">        <span class="string">&#x27;name&#x27;</span>=&gt;<span class="string">&#x27;市场部&#x27;</span></span><br><span class="line">    );</span><br><span class="line">    <span class="variable">$res</span> = <span class="title function_ invoke__">add</span>(<span class="string">&#x27;pre_department&#x27;</span>,<span class="variable">$data</span>);</span><br><span class="line">    <span class="keyword">if</span>(<span class="variable">$res</span>)&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&#x27;成功&#x27;</span>;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&#x27;失败&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//修改数据 假如修改市场部的名称 在这里id为28，以你的数据为准</span></span><br><span class="line">    <span class="variable">$savedata</span>=<span class="keyword">array</span>(</span><br><span class="line">        <span class="string">&#x27;name&#x27;</span>=&gt;<span class="string">&#x27;市场二部&#x27;</span></span><br><span class="line">    );</span><br><span class="line">    <span class="variable">$res</span> = <span class="title function_ invoke__">update</span>(<span class="string">&#x27;pre_department&#x27;</span>,<span class="variable">$savedata</span>,<span class="string">&#x27;id=28&#x27;</span>);</span><br><span class="line">    <span class="keyword">if</span>(<span class="variable">$res</span>)&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&#x27;成功&#x27;</span>;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&#x27;失败&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//查询全部数据</span></span><br><span class="line">    <span class="variable">$sql</span> = <span class="string">&quot;select * from `pre_department`&quot;</span>;</span><br><span class="line">    <span class="variable">$data</span> = <span class="title function_ invoke__">all</span>(<span class="variable">$sql</span>);</span><br><span class="line">    <span class="title function_ invoke__">var_dump</span>(<span class="variable">$data</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">//查询单条数据</span></span><br><span class="line">    <span class="variable">$sql</span> = <span class="string">&quot;select * from `pre_department` where id=28&quot;</span>;</span><br><span class="line">    <span class="variable">$data</span> = <span class="title function_ invoke__">find</span>(<span class="variable">$sql</span>);</span><br><span class="line">    <span class="title function_ invoke__">var_dump</span>(<span class="variable">$data</span>);</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 后端 </category>
          
          <category> MySQL </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PHP </tag>
            
            <tag> MySQL </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>PHPMySQL操作</title>
      <link href="/Lutianyao/blog/2022/10/23/01.%E5%90%8E%E7%AB%AF/02.MySQL/07.PHPMySQL%E6%93%8D%E4%BD%9C/"/>
      <url>/Lutianyao/blog/2022/10/23/01.%E5%90%8E%E7%AB%AF/02.MySQL/07.PHPMySQL%E6%93%8D%E4%BD%9C/</url>
      
        <content type="html"><![CDATA[<h1 id="PHPMySQL操作"><a href="#PHPMySQL操作" class="headerlink" title="PHPMySQL操作"></a>PHPMySQL操作</h1><h3 id="常用函数"><a href="#常用函数" class="headerlink" title="常用函数"></a>常用函数</h3><table><thead><tr><th>函数名</th><th>说明</th></tr></thead><tbody><tr><td>mysqli_connect</td><td>链接数据库</td></tr><tr><td>mysqli_connect_errno</td><td>链接时提示错误码</td></tr><tr><td>mysqli_connect_error</td><td>链接时提示错误信息</td></tr><tr><td>mysqli_select_db</td><td>选择数据库</td></tr><tr><td>mysqli_set_charset</td><td>设置编码</td></tr><tr><td>mysqli_query</td><td>执行Sql语句</td></tr><tr><td>mysqli_num_rows</td><td>获取返回结果行数</td></tr><tr><td>mysqli_fetch_all</td><td>获取返回所有数据的关联数组，第二个参数是规定返回的数组类型，关联数组：MYSQLI_ASSOC 索引数组：MYSQLI_NUM 所有数组类型：MYSQLI_BOTH</td></tr><tr><td>mysqli_fetch_assoc</td><td>获取返回的结果集里的一组关联数组</td></tr><tr><td>mysqli_insert_id</td><td>返回最后一个查询中自动生成的 ID（通过 AUTO_INCREMENT 生成）</td></tr><tr><td>mysqli_error</td><td>返回执行失败的错误信息</td></tr><tr><td>mysqli_affected_rows</td><td>返回最后执行SQL语句所影响的记录行数</td></tr></tbody></table><h3 id="链接数据库"><a href="#链接数据库" class="headerlink" title="链接数据库"></a>链接数据库</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="title function_ invoke__">header</span>(<span class="string">&quot;Content-Type:text/html;charset=utf-8&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">/* </span></span><br><span class="line"><span class="comment">    链接数据库</span></span><br><span class="line"><span class="comment">        host        主机地址</span></span><br><span class="line"><span class="comment">        username    用户名</span></span><br><span class="line"><span class="comment">        password    密码</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="variable">$conn</span> = @<span class="title function_ invoke__">mysqli_connect</span>(<span class="string">&#x27;localhost&#x27;</span>,<span class="string">&#x27;root&#x27;</span>,<span class="string">&#x27;root&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">//链接数据库失败</span></span><br><span class="line"><span class="keyword">if</span>(!<span class="variable">$conn</span>)&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&#x27;错误码：&#x27;</span> . <span class="title function_ invoke__">mysqli_connect_errno</span>() . <span class="string">&#x27;&lt;br&gt;&#x27;</span>;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&#x27;错误信息：&#x27;</span> . <span class="title function_ invoke__">mysqli_connect_error</span>();</span><br><span class="line">    <span class="keyword">exit</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$select</span> = <span class="title function_ invoke__">mysqli_select_db</span>(<span class="variable">$conn</span>,<span class="string">&#x27;company&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(!<span class="variable">$select</span>)&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&#x27;选择数据库失败&#x27;</span>;</span><br><span class="line">    <span class="keyword">exit</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 设置编码</span></span><br><span class="line"><span class="title function_ invoke__">mysqli_set_charset</span>(<span class="variable">$conn</span>,<span class="string">&#x27;utf8&#x27;</span>);</span><br></pre></td></tr></table></figure><h3 id="查询所有数据"><a href="#查询所有数据" class="headerlink" title="查询所有数据"></a>查询所有数据</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// sql语句</span></span><br><span class="line"></span><br><span class="line"><span class="variable">$sql</span> = <span class="string">&quot;SELECT * FROM `pre_admin`&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="variable">$res</span> = <span class="title function_ invoke__">mysqli_query</span>(<span class="variable">$conn</span>,<span class="variable">$sql</span>);</span><br><span class="line"></span><br><span class="line"><span class="variable">$data</span> = [];</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$res</span> &amp;&amp; <span class="title function_ invoke__">mysqli_num_rows</span>(<span class="variable">$res</span>) &gt; <span class="number">0</span>)&#123;</span><br><span class="line"></span><br><span class="line">  <span class="variable">$data</span> = <span class="title function_ invoke__">mysqli_fetch_all</span>(<span class="variable">$res</span>,MYSQLI_ASSOC);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="title function_ invoke__">var_dump</span>(<span class="variable">$data</span>);</span><br></pre></td></tr></table></figure><h3 id="查询单条数据"><a href="#查询单条数据" class="headerlink" title="查询单条数据"></a>查询单条数据</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$sql</span> = <span class="string">&quot;SELECT * FROM `pre_admin` WHERE `id` = &#x27;1&#x27;&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="variable">$res</span> = <span class="title function_ invoke__">mysqli_query</span>(<span class="variable">$conn</span>,<span class="variable">$sql</span>);</span><br><span class="line"></span><br><span class="line"><span class="variable">$data</span> = [];</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$res</span> &amp;&amp; <span class="title function_ invoke__">mysqli_num_rows</span>(<span class="variable">$res</span>) &gt; <span class="number">0</span>)&#123;</span><br><span class="line">    <span class="variable">$data</span> = <span class="title function_ invoke__">mysqli_fetch_assoc</span>(<span class="variable">$res</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="title function_ invoke__">var_dump</span>(<span class="variable">$data</span>);</span><br></pre></td></tr></table></figure><h3 id="插入一条新的数据"><a href="#插入一条新的数据" class="headerlink" title="插入一条新的数据"></a>插入一条新的数据</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$username</span> = <span class="string">&#x27;admin&#x27;</span>;</span><br><span class="line"><span class="variable">$salt</span> = <span class="string">&#x27;6xChSuJQag&#x27;</span>;</span><br><span class="line"><span class="variable">$pwd</span> = <span class="title function_ invoke__">md5</span>(<span class="string">&#x27;123456&#x27;</span>.<span class="variable">$salt</span>);</span><br><span class="line"><span class="variable">$avatar</span> = <span class="string">&#x27;2021082310582038867120.jpg&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="variable">$sql</span> = <span class="string">&quot;INSERT INTO `pre_admin`(`username`,`password`,`avatar`,`salt`)VALUES(&#x27;<span class="subst">$username</span>&#x27;,&#x27;<span class="subst">$pwd</span>&#x27;,&#x27;<span class="subst">$avatar</span>&#x27;,&#x27;<span class="subst">$salt</span>&#x27;)&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="variable">$res</span> = <span class="title function_ invoke__">mysqli_query</span>(<span class="variable">$conn</span>,<span class="variable">$sql</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$res</span>)&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="title function_ invoke__">mysqli_insert_id</span>(<span class="variable">$conn</span>);</span><br><span class="line">&#125;<span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;SQL语句执行失败：&quot;</span> . <span class="variable">$sql</span> . <span class="string">&#x27;&lt;br /&gt;&#x27;</span>;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;错误信息：&quot;</span>.<span class="title function_ invoke__">mysqli_error</span>(<span class="variable">$conn</span>);</span><br><span class="line">    <span class="keyword">exit</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="更新一条数据"><a href="#更新一条数据" class="headerlink" title="更新一条数据"></a>更新一条数据</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$username</span> = <span class="string">&#x27;demo&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="variable">$sql</span> = <span class="string">&quot;UPDATE `pre_admin` SET `username` = &#x27;<span class="subst">$username</span>&#x27; WHERE `id` = &#x27;1&#x27;&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="variable">$res</span> = <span class="title function_ invoke__">mysqli_query</span>(<span class="variable">$conn</span>,<span class="variable">$sql</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$res</span>)&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="title function_ invoke__">mysqli_affected_rows</span>(<span class="variable">$conn</span>);</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&#x27;SQL语句执行失败：&#x27;</span> . <span class="variable">$sql</span> .<span class="string">&#x27;&lt;br /&gt;&#x27;</span>;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&#x27;错误信息：&#x27;</span> . <span class="title function_ invoke__">mysqli_error</span>(<span class="variable">$conn</span>);</span><br><span class="line">    <span class="keyword">exit</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="删除一条数据"><a href="#删除一条数据" class="headerlink" title="删除一条数据"></a>删除一条数据</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 按条件删除</span></span><br><span class="line"><span class="variable">$id</span> = <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line"><span class="variable">$sql</span> = <span class="string">&quot;DELETE FROM `pre_admin` WHERE `id` = &#x27;<span class="subst">$id</span>&#x27;&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="variable">$res</span> = <span class="title function_ invoke__">mysqli_query</span>(<span class="variable">$conn</span>,<span class="variable">$sql</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$res</span>)&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="title function_ invoke__">mysqli_affected_rows</span>(<span class="variable">$conn</span>);</span><br><span class="line">&#125;<span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&#x27;SQL语句执行错误：&#x27;</span> . <span class="variable">$sql</span>;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&#x27;错误信息：&#x27;</span> . <span class="title function_ invoke__">mysqli_error</span>(<span class="variable">$conn</span>);</span><br><span class="line">    <span class="keyword">exit</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 后端 </category>
          
          <category> MySQL </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PHP </tag>
            
            <tag> MySQL </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>SQL函数</title>
      <link href="/Lutianyao/blog/2022/10/23/01.%E5%90%8E%E7%AB%AF/02.MySQL/05.SQL%E5%87%BD%E6%95%B0/"/>
      <url>/Lutianyao/blog/2022/10/23/01.%E5%90%8E%E7%AB%AF/02.MySQL/05.SQL%E5%87%BD%E6%95%B0/</url>
      
        <content type="html"><![CDATA[<h1 id="SQL函数"><a href="#SQL函数" class="headerlink" title="SQL函数"></a>SQL函数</h1><p>Aggregate 函数的操作面向一系列的值，并返回一个单一的值</p><table><thead><tr><th>函数</th><th>描述</th></tr></thead><tbody><tr><td>AVG(column)</td><td>返回某列的平均值</td></tr><tr><td>COUNT(column)</td><td>返回某列的行数（不包括 NULL 值）</td></tr><tr><td>COUNT(*)</td><td>返回被选行数</td></tr><tr><td>MAX(column)</td><td>返回某列的最高值</td></tr><tr><td>MIN(column)</td><td>返回某列的最低值</td></tr><tr><td>SUM(column)</td><td>返回某列的总和</td></tr></tbody></table><pre><code>AVG    SELECT AVG(column) FROM `表名`;COUNT     SELECT COUNT(column) FROM `表名`;MAX    SELECT MAX(column) FROM `表名`;MIN    SELECT MIN(column) FROM `表名`;SUM    SELECT SUM(column) FROM `表名`;</code></pre>]]></content>
      
      
      <categories>
          
          <category> 后端 </category>
          
          <category> MySQL </category>
          
      </categories>
      
      
        <tags>
            
            <tag> MySQL </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MySQL运算符</title>
      <link href="/Lutianyao/blog/2022/10/23/01.%E5%90%8E%E7%AB%AF/02.MySQL/04.SQL%E8%BF%90%E7%AE%97%E7%AC%A6/"/>
      <url>/Lutianyao/blog/2022/10/23/01.%E5%90%8E%E7%AB%AF/02.MySQL/04.SQL%E8%BF%90%E7%AE%97%E7%AC%A6/</url>
      
        <content type="html"><![CDATA[<h1 id="运算符"><a href="#运算符" class="headerlink" title="运算符"></a>运算符</h1><h2 id="算术运算符"><a href="#算术运算符" class="headerlink" title="算术运算符"></a>算术运算符</h2><table><thead><tr><th>符号</th><th>说明</th></tr></thead><tbody><tr><td>+</td><td>加法运算</td></tr><tr><td>-</td><td>减法运算</td></tr><tr><td>*</td><td>乘法运算</td></tr><tr><td>&#x2F;</td><td>除法运算,返回商</td></tr><tr><td>%</td><td>求余运算,返回余数</td></tr></tbody></table><h2 id="比较运算符"><a href="#比较运算符" class="headerlink" title="比较运算符"></a>比较运算符</h2><table><thead><tr><th>符号</th><th>说明</th></tr></thead><tbody><tr><td>&gt;</td><td>大于</td></tr><tr><td>&lt;</td><td>小于</td></tr><tr><td>&gt;&#x3D;</td><td>大于等于</td></tr><tr><td>&lt;&#x3D;</td><td>小于等于</td></tr><tr><td>!&#x3D;,&lt;&gt;</td><td>不等于</td></tr><tr><td>&#x3D;</td><td>等于</td></tr></tbody></table><h2 id="逻辑运算符"><a href="#逻辑运算符" class="headerlink" title="逻辑运算符"></a>逻辑运算符</h2><table><thead><tr><th>符号</th><th>说明</th></tr></thead><tbody><tr><td><code>NOT</code>或者<code>!</code></td><td>逻辑非</td></tr><tr><td><code>AND</code>或者<code>&amp;&amp;</code></td><td>逻辑与</td></tr><tr><td><code>OR</code>或者&#96;</td><td></td></tr></tbody></table><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&gt;= 查询 id大于等于9</span><br><span class="line">    SELECT * FROM `pre_department` WHERE id&gt;=9;</span><br><span class="line"></span><br><span class="line">not 查询 ID 除 3 和 10 之外的所有值</span><br><span class="line">    SELECT * FROM `pre_department` WHERE id NOT IN (&#x27;3&#x27;,&#x27;10&#x27;);</span><br><span class="line"></span><br><span class="line">and 查询 id为9和名称为技术部</span><br><span class="line">    SELECT * FROM `pre_department` WHERE id = 9  AND NAME = &#x27;技术部&#x27;;</span><br><span class="line"></span><br><span class="line">or 查询 id为9或者id为1</span><br><span class="line">    SELECT * FROM `pre_department` WHERE id = 9 OR id = 1;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 后端 </category>
          
          <category> MySQL </category>
          
      </categories>
      
      
        <tags>
            
            <tag> MySQL </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>SQL命令行</title>
      <link href="/Lutianyao/blog/2022/10/22/01.%E5%90%8E%E7%AB%AF/02.MySQL/03.SQL%E5%91%BD%E4%BB%A4%E8%A1%8C/"/>
      <url>/Lutianyao/blog/2022/10/22/01.%E5%90%8E%E7%AB%AF/02.MySQL/03.SQL%E5%91%BD%E4%BB%A4%E8%A1%8C/</url>
      
        <content type="html"><![CDATA[<h1 id="SQL命令行"><a href="#SQL命令行" class="headerlink" title="SQL命令行"></a>SQL命令行</h1><blockquote><p>除了用Navicat和phpmyadmin对数据库进行增删改查，还可以用命令行</p><p>可以使用windows自带的cmd或者cmder其中一个，首先打开我们的命令行</p></blockquote><p><strong>连接MySQL服务</strong></p><pre><code>mysql -h localhost -u root -p dbName-u指的是用户名 -p 指的是密码 -h 指的是主机地址 dbName指的是数据库名</code></pre><p><strong>查看数据库列表</strong></p><pre><code>show databases;</code></pre><p><strong>创建数据库并且设置编码</strong></p><pre><code>create database 数据库名 charset utf8;</code></pre><p><strong>删除数据库</strong></p><pre><code>drop database 数据库名;</code></pre><p><strong>选择使用数据库</strong></p><pre><code>use 数据库名;</code></pre><p><strong>查看某个数据库里的数据表列表</strong></p><pre><code>show tables;</code></pre><p><strong>查看数据库的创建sql</strong></p><pre><code>show create database 数据库名;</code></pre><p><strong>查看表的创建sql</strong></p><pre><code>show create table 表名;</code></pre><p><strong>查看当前数据库</strong></p><pre><code>select database();</code></pre><p><strong>查看当前MySQL的版本</strong></p><pre><code>select version();</code></pre><p><strong>删除一张表里所有的数据</strong></p><pre><code>truncate table1;</code></pre><p><strong>删除一张表;</strong></p><pre><code>drop table 表名;</code></pre><p><strong>修改表名</strong></p><pre><code>alter table test rename to test2;</code></pre><p><strong>修改表编码</strong></p><pre><code>ALTER TABLE `table` DEFAULT CHARACTER SET utf8;  </code></pre><p><strong>查看存储引擎</strong></p><pre><code>show engines;</code></pre><p><strong>查看某个数据库里的所有表</strong></p><pre><code>show tables from 数据库名;</code></pre><p><strong>导出数据库</strong></p><pre><code>mysqldump -u 用户名 -p 数据库名 &gt; 存放位置/导出的文件名mysqldump -u root -p company &gt; e:\demo.sql</code></pre><p><strong>导出数据表</strong></p><pre><code>mysqldump -u 用户名 -p 数据库名 表名&gt; 存放位置/导出的文件名mysqldump -u root -p demo user&gt; e:\demo.sql</code></pre><p><strong>导入数据表</strong></p><pre><code>第一种    mysql -u 用户名 -p 数据库名 &lt; 存放位置    mysql -u root -p demo &lt; e:\demo.sql第二种    mysql -u root -p    mysql&gt;show databases;    mysql&gt;use demo;    mysql&gt;source e:\demo.sql</code></pre><p><strong>清空表语句</strong></p><pre><code>delete和truncate是一样的，但它们有一点不同，那就是DELETE可以返回被删除的记录数，而TRUNCATE TABLE返回的是0。基本语法：TRUNCATE TABLE 表名;示例：TRUNCATE TABLE user;示例说明：清空表的数据，并且让自增的id从1开始自增</code></pre>]]></content>
      
      
      <categories>
          
          <category> 后端 </category>
          
          <category> MySQL </category>
          
      </categories>
      
      
        <tags>
            
            <tag> MySQL </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>SQL语句</title>
      <link href="/Lutianyao/blog/2022/10/22/01.%E5%90%8E%E7%AB%AF/02.MySQL/06.SQL%E8%AF%AD%E5%8F%A5/"/>
      <url>/Lutianyao/blog/2022/10/22/01.%E5%90%8E%E7%AB%AF/02.MySQL/06.SQL%E8%AF%AD%E5%8F%A5/</url>
      
        <content type="html"><![CDATA[<h1 id="SQL语句"><a href="#SQL语句" class="headerlink" title="SQL语句"></a>SQL语句</h1><pre><code>需要在数据库上执行的大部分工作都由 SQL 语句完成。注意：一定要记住，SQL 对大小写不敏感！分号是在数据库系统中分隔每条 SQL 语句的标准方法。SQL (结构化查询语言)是用于执行查询的语法。但是 SQL 语言也包含用于更新、插入和删除记录的语法。</code></pre><h2 id="数据定义语言-DML"><a href="#数据定义语言-DML" class="headerlink" title="数据定义语言(DML)"></a>数据定义语言(DML)</h2><h3 id="INSERT-INTO-插入语句"><a href="#INSERT-INTO-插入语句" class="headerlink" title="INSERT INTO(插入语句)"></a>INSERT INTO(插入语句)</h3><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">单条数据插入</span><br><span class="line">    INSERT INTO `表名`(`字段1`,`字段2`)VALUES(&#x27;值1&#x27;，&#x27;值2&#x27;);</span><br><span class="line"></span><br><span class="line">多条数据插入</span><br><span class="line">    INSERT INTO `表名`(`字段1`,`字段2`)VALUES(&#x27;值1&#x27;，‘值2’),(&#x27;值1&#x27;,&#x27;值2&#x27;);</span><br><span class="line"></span><br><span class="line">例：</span><br><span class="line">/*在部门表插入数据*/</span><br><span class="line">    INSERT INTO `pre_department`(`name`)VALUES(&#x27;技术部&#x27;);</span><br></pre></td></tr></table></figure><h3 id="UPDATE-更新语句"><a href="#UPDATE-更新语句" class="headerlink" title="UPDATE(更新语句)"></a>UPDATE(更新语句)</h3><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">更新一个表的数据</span><br><span class="line">    UPDATE 表名 SET `字段1`=值1,`字段2`=值2,`字段n`=值n WHERE 条件；</span><br><span class="line"></span><br><span class="line">例：</span><br><span class="line">/*把技术部更新为行政部*/</span><br><span class="line">    UPDATE `pre_department` SET `name`=&#x27;行政部&#x27; WHERE `id` = 1;</span><br></pre></td></tr></table></figure><h3 id="DELETE-删除语句"><a href="#DELETE-删除语句" class="headerlink" title="DELETE(删除语句)"></a>DELETE(删除语句)</h3><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">删除一条数据</span><br><span class="line">    DELETE FROM `表` WHERE 条件;</span><br><span class="line">删除多条数据</span><br><span class="line">    DELETE FROM `表` WHERE `id` IN (&#x27;值1&#x27;,&#x27;值2&#x27;);</span><br><span class="line"></span><br><span class="line">例：</span><br><span class="line">    DELETE FROM `pre_department` WHERE `id` IN (&#x27;1&#x27;,&#x27;2&#x27;);</span><br></pre></td></tr></table></figure><h3 id="SELECT-查询语句"><a href="#SELECT-查询语句" class="headerlink" title="SELECT(查询语句)"></a>SELECT(查询语句)</h3><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line">表示查询全部字段</span><br><span class="line">    SELECT * FROM `表`;</span><br><span class="line"></span><br><span class="line">要查哪个字段就直接写字段</span><br><span class="line">    SELECT 字段1,字段2 FROM 表;</span><br><span class="line"></span><br><span class="line">根据where后面的条件查询内容</span><br><span class="line">    SELECT * FROM `表` WHERE 条件;</span><br><span class="line"></span><br><span class="line">查询的条件是id=5并且depid=3的数据</span><br><span class="line">    SELECT * FROM `表` WHERE `id`=5 and `depid`=3;</span><br><span class="line"></span><br><span class="line">查询的条件是id=5或者是id=8的数据</span><br><span class="line">    SELECT * FROM `表` WHERE `id`=5 or `id`=8;</span><br><span class="line"></span><br><span class="line">查询 5 - 10之间的数据</span><br><span class="line">    SELECT * FROM `表` WHERE `id` BETWEEN 5 AND 10;</span><br><span class="line">    SELECT * FROM `表` WHERE `id` &gt;= 5 AND `id` &lt;= 10;</span><br><span class="line"></span><br><span class="line">查询的条件是id=1，或者id=3，或者id=6的数据    </span><br><span class="line">    SELECT * FROM `表` WHERE `id` IN (1,3,6);</span><br><span class="line"></span><br><span class="line">查询的条件是id不等于1,3,6的数据</span><br><span class="line">    SELECT * FROM `表` WHERE `id` NOT IN (1,3,6);</span><br><span class="line"></span><br><span class="line">只查询5条</span><br><span class="line">    SELECT * FROM `表` LIMIT 5;</span><br><span class="line"></span><br><span class="line">从第4条数据开始，只查询5条</span><br><span class="line">    SELECT * FROM `表` LIMIT 3,5;</span><br><span class="line"></span><br><span class="line">排序（升序：asc，降序：desc）</span><br><span class="line">    SELECT * FROM `表` ORDER BY `id` ASC;</span><br><span class="line"></span><br><span class="line">根据title分组（把相同的title数据分到一组）</span><br><span class="line">    SELECT * FROM `表` GROUP BY title;</span><br><span class="line"></span><br><span class="line">模糊查询name这个字段里面数据有 &#x27;你是&#x27;</span><br><span class="line">    SELECT * FROM `表` WHERE `name` like &#x27;%你是%&#x27;;</span><br></pre></td></tr></table></figure><h2 id="连表查询"><a href="#连表查询" class="headerlink" title="连表查询"></a>连表查询</h2><h3 id="LEFT-JOIN-左连表"><a href="#LEFT-JOIN-左连表" class="headerlink" title="LEFT JOIN(左连表)"></a>LEFT JOIN(左连表)</h3><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">以左边的表为基准，先把左边的表查出来，再查右边的表，若右边的表没对应的数据显示的就为NULL。</span><br><span class="line"></span><br><span class="line">left join是以A表的记录为基础的,A可以看成左表,B可以看成右表,left join是以左表为准的.</span><br><span class="line">换句话说,左表(A)的记录将会全部表示出来,而右表(B)只会显示符合搜索条件的记录(例子中为: A.ID = B.bID).</span><br><span class="line">B表记录不足的地方均为NULL.</span><br><span class="line"></span><br><span class="line">例：</span><br><span class="line">    SELECT d.name,j.name FROM `pre_department` as d LEFT JOIN `pre_job` as j on d.id = j.depid;</span><br></pre></td></tr></table></figure><h3 id="RIGHT-JOIN-右连表"><a href="#RIGHT-JOIN-右连表" class="headerlink" title="RIGHT JOIN(右连表)"></a>RIGHT JOIN(右连表)</h3><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">以右边的表为基准，先把右边的表查出来，再查左边的表，若左边的表没对应的数据显示的就为NULL</span><br><span class="line"></span><br><span class="line">仔细观察一下,就会发现right join和left join的结果刚好相反,这次是以右表(B)为基础的,</span><br><span class="line">A表不足的地方用NULL填充。</span><br><span class="line"></span><br><span class="line">例：</span><br><span class="line">    SELECT j.name,d.name FROM `pre_job` as j RIGHT JOIN `pre_department` as d on j.depid = d.id;</span><br></pre></td></tr></table></figure><h3 id="INNER-JOIN-内连表"><a href="#INNER-JOIN-内连表" class="headerlink" title="INNER JOIN(内连表)"></a>INNER JOIN(内连表)</h3><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">以两个表中有至少一个匹配，否则不显示</span><br><span class="line">这说明inner join并不以谁为基础,它只显示符合条件的记录。</span><br><span class="line"></span><br><span class="line">    SELECT d.name,j.name FROM `pre_department` as d INNER JOIN `pre_job` as j ON d.id = j.depid;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 后端 </category>
          
          <category> MySQL </category>
          
      </categories>
      
      
        <tags>
            
            <tag> MySQL </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>数据库的结构</title>
      <link href="/Lutianyao/blog/2022/10/22/01.%E5%90%8E%E7%AB%AF/02.MySQL/02.%E6%95%B0%E6%8D%AE%E5%BA%93%E7%9A%84%E7%BB%93%E6%9E%84/"/>
      <url>/Lutianyao/blog/2022/10/22/01.%E5%90%8E%E7%AB%AF/02.MySQL/02.%E6%95%B0%E6%8D%AE%E5%BA%93%E7%9A%84%E7%BB%93%E6%9E%84/</url>
      
        <content type="html"><![CDATA[<h1 id="数据库的结构"><a href="#数据库的结构" class="headerlink" title="数据库的结构"></a>数据库的结构</h1><h2 id="表引擎"><a href="#表引擎" class="headerlink" title="表引擎"></a>表引擎</h2><pre><code>MySQL的强大之处在于它的插件式存储引擎，我们可以基于表的特点使用不同的存储引擎，从而达到最好的性能。mysql在创建表的时候，可以指定对应的引擎。在mysql命令中使用：show engines;可以查看到当前服务器支持的所有引擎。使用哪一种引擎需要灵活选择，一个数据库中多个表可以使用不同引擎以满足各种性能和实际需求，使用合适的存储引擎，将会提高整个数据库的性能</code></pre><h3 id="MyISAM"><a href="#MyISAM" class="headerlink" title="MyISAM"></a>MyISAM</h3><pre><code>MyISAM 存储引擎独立于操作系统，也就是可以在windows上使用，也可以比较简单的将数据转移到linux操作系统上去。这种存储引擎在创建表的时候，会创建三个文件，一个是.frm文件用于存储表的定义，一个是.MYD文件用于存储表的数据，另一个是.MYI文件，存储的是索引。操作系统对大文件的操作是比较慢的，这样将表分为三个文件，那么.MYD这个文件单独来存放数据自然可以优化数据库的查询等操作。1.不支持事务，但是并不代表着有事务操作的项目不能用MyISAM存储引擎，可以在service层进行根据自己的业务需求进行相应的控制。2.不支持外键。3.查询速度很快，如果数据库insert和update的操作比较多的话比较适用。4.对表进行加锁。</code></pre><h3 id="InnoDB"><a href="#InnoDB" class="headerlink" title="InnoDB"></a>InnoDB</h3><pre><code>可以把InnoDB看做是MyISAM的一种更新换代产品，它增加了以下几种新功能:事务：InnoDB数据表里的数据库操作可以被执行为一个事务，这将允许把几条有着内在逻辑关系的SQL命令当做一个整体来执行。如果在执行时发行错误，所有的命令都将失效，就好像从未执行过这些命令;数据行级锁定机制：在执行一个事务的时候，InnoDB数据表的驱动程序使用的是它自已内建的数据行级锁定机制（不是MySQL提供的数据表级锁定机制）。也就是说，在事务的过程中数据表是不会被锁定的，其他用户仍可以访问它，被锁定的只是正在接受事务处理的数据记录;外键约束条件：如果在数据表之间定义了关系，InnoDB驱动程序将自动保证数据表的引用一致性在执行过DELETE命令之后也能保持。也就是说，不可能出现数据表A里的一条记录引用了数据表B里一条不复存在的记录的问题。用数据库的术语来讲，这一功能叫做”外键约束条件“;崩溃恢复：在发生崩溃后，InnoDB数据表能够迅速地自动恢复到一个稳定可用的状态（前提是计算机文件系统没有被破坏）;</code></pre><h3 id="Memory"><a href="#Memory" class="headerlink" title="Memory"></a>Memory</h3><pre><code>将数据存在内存，为了提高数据的访问速度，每一个表实际上和一个磁盘文件关联。文件是frm。（1）支持的数据类型有限制，比如：不支持TEXT和BLOB类型，对于字符串类型的数据，    只支持固定长度的行，VARCHAR会被自动存储为CHAR类型；（2）支持的锁粒度为表级锁。所以，在访问量比较大时，表级锁会成为MEMORY存储引擎的瓶颈；（3）由于数据是存放在内存中，一旦服务器出现故障，数据都会丢失；（4）查询的时候，如果有用到临时表，而且临时表中有BLOB，TEXT类型的字段，    那么这个临时表就会转化为MyISAM类型的表，性能会急剧降低；（5）默认使用hash索引。（6）如果一个内部表很大，会转化为磁盘表。</code></pre><h2 id="字段"><a href="#字段" class="headerlink" title="字段"></a>字段</h2><pre><code>我们把表中的每一行叫做一个“记录”，每一个记录包含这行中的所有信息，就像在通讯录数据库中某个人全部的信息，但记录在数据库中并没有专门的记录名，常常用它所在的行数表示这是第几个记录。字段是比记录更小的单位，字段集合组成记录，每个字段描述文献的某一特征，即数据项，并有唯一的供计算机识别的字段标识符。</code></pre><h2 id="字段的数据类型"><a href="#字段的数据类型" class="headerlink" title="字段的数据类型"></a>字段的数据类型</h2><pre><code>MySQL中存的是数据。只要是数据，我们就会规定数据的类型。在表的字段中规定了使用的是某个数据类型。那么，在插入的数据中就要使用对应的数据类型。并且，遵守数据类型的长度要求。在MySQL里面我们将数据类型分为了以下一些类型：1、数值类型（整型、浮点）2、字符串类型3、日期时间类型4、复合类型5、空间类型</code></pre><h3 id="整型"><a href="#整型" class="headerlink" title="整型"></a>整型</h3><table><thead><tr><th>MySQL数据类型</th><th>所占字节</th><th>值范围</th></tr></thead><tbody><tr><td>tinyint</td><td>1字节</td><td>-128~127</td></tr><tr><td>smallint</td><td>2字节</td><td>-32768~32767</td></tr><tr><td>mediumint</td><td>3字节</td><td>-8388608~8388607</td></tr><tr><td>int</td><td>4字节</td><td>范围-2147483648~2147483647</td></tr><tr><td>bigint</td><td>8字节</td><td>±9.22*10的18次方</td></tr></tbody></table><pre><code>整型的长度不同，在实际使用过程也就不同。MySQL 以一个可选的显示宽度指示器的形式对 SQL 标准进行扩展，这样当从数据库检索一个值时，可以把这个值加长到指定的长度。例如，指定一个字段的类型为 INT(6)，就可以保证所包含数字少于 6 个的值从数据库中检索出来时能够自动地用空格填充。需要注意的是，使用一个宽度指示器不会影响字段的大小和它可以存储的值的范围。</code></pre><p>注意：</p><blockquote><ul><li><p>同样,人的年龄也是，在创建表字段时可用用无符号的整型。因为人的年龄没有负数</p></li><li><p>在实际使用过程中。我们业务中最大需要存储多大的数值。我们创建表时，就选择什么样的类型来存储这样的值。</p></li></ul></blockquote><h3 id="浮点类型"><a href="#浮点类型" class="headerlink" title="浮点类型"></a>浮点类型</h3><table><thead><tr><th>MySQL数据类型</th><th>所占字节</th><th>值范围</th></tr></thead><tbody><tr><td>float(m, d)</td><td>4字节</td><td>单精度浮点型，m总个数，d小数位</td></tr><tr><td>double(m, d)</td><td>8字节</td><td>-32768~32767</td></tr><tr><td>decimal(m, d)</td><td></td><td>decimal是存储为字符串的浮点数</td></tr></tbody></table><p>注意：</p><blockquote><ul><li><p>浮点是非精确值，会存在不太准确的情况</p></li><li><p>而decimal叫做定点数。在MySQL内部，本质上是用字符串存储的。</p></li></ul></blockquote><p>实际使用过程中如果存在金额、钱精度要求比较高的浮点数存储，建议使用decimal（定点数）这个类型。</p><h3 id="字符类型"><a href="#字符类型" class="headerlink" title="字符类型"></a>字符类型</h3><table><thead><tr><th>MySQL数据类型</th><th>所占字节</th><th>值范围</th></tr></thead><tbody><tr><td>CHAR</td><td>0~255字节</td><td>定长字符串</td></tr><tr><td>VARCHAR</td><td>0~255字节</td><td>变长字符串</td></tr><tr><td>TINYBLOB</td><td>0~255字节</td><td>不超过255个字符的二进制字符串</td></tr><tr><td>TINYTEXT</td><td>0~255字节</td><td>短文本字符串</td></tr><tr><td>BLOB</td><td>0-65535字节</td><td>二进制形式的长文本数据</td></tr><tr><td>TEXT</td><td>0-65535字节</td><td>长文本数据</td></tr><tr><td>MEDIUMBLOB</td><td>0-16 777 215字节</td><td>二进制形式的中等长度文本数据</td></tr><tr><td>MEDIUMTEXT</td><td>0-16 777 215字节</td><td>中等长度文本数据</td></tr><tr><td>LOGNGBLOB</td><td>0-4 294 967 295字节</td><td>二进制形式的极大文本数据</td></tr><tr><td>LONGTEXT</td><td>0-4 294 967 295字节</td><td>极大文本数据</td></tr><tr><td>VARBINARY(M)</td><td>允许长度0-M个字节的定长字节符串</td><td>值的长度+1个字节</td></tr><tr><td>BINARY(M)</td><td>M</td><td>允许长度0-M个字节的定长字节符串</td></tr></tbody></table><p><strong>CHAR</strong></p><pre><code>类型用于定长字符串，并且必须在圆括号内用一个大小修饰符来定义。这个大小修饰符的范围从 0-255。比指定长度大的值将被截短，而比指定长度小的值将会用空格作填补。</code></pre><p><strong>VARCHAR</strong></p><pre><code>把这个大小视为值的大小，在长度不足的情况下就用空格补足。而 VARCHAR 类型把它视为最大值并且只使用存储字符串实际需要的长度类型不会被空格填补，但长于指示器的值仍然会被截短。因为 VARCHAR 类型可以根据实际内容动态改变存储值的长度，所以在不能确定字段需要多少字符时使用 VARCHAR 类型可以大大地节约磁盘空间、提高存储效率。4.0版本以下，varchar(20)，指的是20字节，如果存放UTF8汉字时，只能存6个（每个汉字3字节）5.0版本以上，varchar(20)，指的是20字符，无论存放的是数字、字母还是UTF8汉字（每个汉字3字节），都可以存放20个，最大大小是65532字节</code></pre><p><strong>text类型与blob类型</strong></p><pre><code>对于字段长度要求超过 255 个的情况下，MySQL 提供了 TEXT 和 BLOB 两种类型。根据存储数据的大小，它们都有不同的子类型。这些大型的数据用于存储文本块或图像、声音文件等二进制数据类型。TEXT 和 BLOB 类型在分类和比较上存在区别。BLOB 类型区分大小写，而 TEXT 不区分大小写。大小修饰符不用于各种 BLOB 和 TEXT 子类型。</code></pre><h3 id="时间类型"><a href="#时间类型" class="headerlink" title="时间类型"></a>时间类型</h3><table><thead><tr><th>MySQL数据类型</th><th>所占字节</th><th>值范围</th></tr></thead><tbody><tr><td>date</td><td>3字节</td><td>日期，格式：2014-09-18</td></tr><tr><td>time</td><td>3字节</td><td>时间，格式：08:42:30</td></tr><tr><td>datetime</td><td>8字节</td><td>日期时间，格式：2014-09-18 08:42:30</td></tr><tr><td>timestamp</td><td>4字节</td><td>自动存储记录修改的时间</td></tr><tr><td>year</td><td>1字节</td><td>年份</td></tr></tbody></table><p>注意：</p><blockquote><ul><li><p>时间类型在web系统中用的比较少，很多时候很多人喜欢使用int来存储时间。<br>插入时插入的是unix时间戳，因为这种方式更方便计算。在前端业务中用date类型的函数，<br>再将unix时间戳转成人们可识别的时间。</p></li><li><p>上面的类型你可以根据实际情况实际进行选择</p></li><li><p>有些人为了在数据库管理中方便查看，也有人使用datetime类型来存储时间。</p></li></ul></blockquote><h3 id="复合类型"><a href="#复合类型" class="headerlink" title="复合类型"></a>复合类型</h3><table><thead><tr><th>MySQL数据类型</th><th>所占字节</th><th>值范围</th></tr></thead><tbody><tr><td>set</td><td>集合类型</td><td>set(“member”, “member2″, … “member64″)</td></tr><tr><td>enum</td><td>枚举类型</td><td>enum(“member1″, “member2″, … “member65535″)</td></tr></tbody></table><p>一个 ENUM 类型只允许从一个集合中取得一个值；而 SET 类型允许从一个集合中取得任意多个值</p><p><strong>SET 类型</strong></p><pre><code>SET 类型与 ENUM 类型相似但不相同。SET类型可以从预定义的集合中取得任意数量的值。并且与 ENUM 类型相同的是任何试图在 SET 类型字段中插入非预定义的值都会使MySQL插入一个空字符串。如果插入一个即有合法的元素又有非法的元素的记录，MySQL 将会保留合法的元素，除去非法的元素。一个 SET 类型最多可以包含 64 个元素。在 SET 元素中值被存储为一个分离的“位”序列，这些“位”表示与它相对应的元素。“位”是创建有序元素集合的一种简单而有效的方式。并且它还去除了重复的元素，所以SET类型中不可能包含两个相同的元素。希望从 SET 类型字段中找出非法的记录只需查找包含空字符串或二进制值为 0 的行。</code></pre><p><strong>ENUM 类型</strong></p><pre><code>ENUM 类型因为只允许在集合中取得一个值，有点类似于单选项。在处理相互排拆的数据时容易让人理解，比如人类的性别。ENUM 类型字段可以从集合中取得一个值或使用null值，除此之外的输入将会使 MySQL 在这个字段中插入一个空字符串。另外如果插入值的大小写与集合中值的大小写不匹配，MySQL会自动使用插入值的大小写转换成与集合中大小写一致的值。ENUM 类型在系统内部可以存储为数字，并且从1开始用数字做索引。一个 ENUM 类型最多可以包含 65536 个元素，其中一个元素被 MySQL 保留，用来存储错误信息，这个错误值用索引 0 或者一个空字符串表示。MySQL 认为 ENUM 类型集合中出现的值是合法输入，除此之外其它任何输入都将失败。这说明通过搜索包含空字符串或对应数字索引为 0 的行就可以很容易地找到错误记录的位置。</code></pre><h3 id="字段其他属性设置"><a href="#字段其他属性设置" class="headerlink" title="字段其他属性设置"></a>字段其他属性设置</h3><p><strong>UNSIGNED</strong></p><pre><code>UNSIGNED（无符号）主要用于整型和浮点类型，使用无符号。即，没有前面面的-（负号）。</code></pre><p><strong>ZEROFILL</strong></p><pre><code>如果宽度小于设定的宽度，则自动填充0，要注意的是，这只是最后显示的结果，在MYSQL中 实际存储的还是1.</code></pre><p><strong>default</strong></p><pre><code>可以使用DEFAULT为字段设定一个默认值，当插入记录时，当忘记传该字段的值时，MySQL 会自动为您设置上该字段的默认值default属性确保在没有任何值可用的情况下，赋予某个常量值，这个值必须是常量，因为MySQL不允许插入函数或表达式值。此外，此属性无法用于BLOB或TEXT列。如果已经为此列指定了NULL属性，没有指定默认值时默认值将为NULL，否则默认值将依赖于字段的数据类型。</code></pre><p><strong>not null</strong></p><pre><code>如果某一个字段设置not null，只能插入空值，不能插入null，因为null并不是空值，而是要占用空间。建议在重要情况下始终使用not null属性，因为它提供了一个基本验证，确保已经向查询传递了所有必要的值。</code></pre><p><strong>null</strong></p><pre><code>为列指定null属性时，该列可以保持为空，而不论行中其它列是否已经被填充。记住，null精确的说法是“无”，而不是空字符串或0。</code></pre><h2 id="索引"><a href="#索引" class="headerlink" title="索引"></a>索引</h2><pre><code>索引是对数据库表中一列或多列的值进行排序的一种结构，使用索引可快速访问数据库表中的特定信息。举例说明索引：如果把数据库中的某一张看成一本书，那么索引就像是书的目录，可以通过目录快速查找书中指定内容的位置，对于数据库表来说，可以通过索引快速查找表中的数据。</code></pre><h3 id="索引的优缺点"><a href="#索引的优缺点" class="headerlink" title="索引的优缺点"></a>索引的优缺点</h3><pre><code>优：    1.建立索引的列可以保证行的唯一性，生成唯一的rowId    2.建立索引可以有效缩短数据的检索时间    3.建立索引可以加快表与表之间的连接    4.为用来排序或者是分组的字段添加索引可以加快分组和排序顺序缺：    1.创建索引和维护索引需要时间成本，这个成本随着数据量的增加而加大    2.创建索引和维护索引需要空间成本，每一条索引都要占据数据库的物理存储空间，    数据量越大，占用空间也越大（数据表占据的是数据库的数据空间）    3.引也不易过多，索引越多写入，修改的速度越慢，会降低表的增删改的效率，    因为每次增删改索引需要进行动态维护，导致时间变长</code></pre><h3 id="MySQL的索引类型"><a href="#MySQL的索引类型" class="headerlink" title="MySQL的索引类型"></a>MySQL的索引类型</h3><table><thead><tr><th>索引类型</th><th>功能说明</th></tr></thead><tbody><tr><td>普通索引</td><td>最基本的索引，它没有任何限制</td></tr><tr><td>唯一索引</td><td>某一行启用了唯一索引则不准许这一列的行数据中有重复的值。针对这一列的每一行数据都要求是唯一的</td></tr><tr><td>主键索引</td><td>它是一种特殊的唯一索引，不允许有空值。一般是在建表的时候同时创建主键索引，常用于用户ID。类似于书中的页码</td></tr><tr><td>全文索引</td><td>对于需要全局搜索的数据，进行全文索引</td></tr></tbody></table><p><strong>普通索引</strong></p><table><thead><tr><th>类型</th><th>详细说明</th></tr></thead><tbody><tr><td>基本语法</td><td>alter table 表 add index(字段)</td></tr><tr><td>示例</td><td>ALTER TABLE money ADD INDEX(username);</td></tr><tr><td>示例解释</td><td>为money表的username字段增加索引</td></tr></tbody></table><p><strong>唯一索引</strong></p><table><thead><tr><th>类型</th><th>详细说明</th></tr></thead><tbody><tr><td>基本语法</td><td>alter table 表 add UNIQUE(字段)</td></tr><tr><td>示例</td><td>ALTER TABLE money ADD UNIQUE(email);</td></tr><tr><td>示例解释</td><td>为money表的email字段增加唯一索引</td></tr></tbody></table><p><strong>主键索引</strong></p><table><thead><tr><th>类型</th><th>详细说明</th></tr></thead><tbody><tr><td>基本语法</td><td>alter table 表 add PRIMARY KEY(字段)</td></tr><tr><td>示例</td><td>ALTER TABLE money ADD PRIMARY KEY(id);</td></tr><tr><td>示例解释</td><td>为money表的id字段增加主键索引</td></tr></tbody></table><p><strong>全文索引</strong></p><table><thead><tr><th>类型</th><th>详细说明</th></tr></thead><tbody><tr><td>基本语法</td><td>alter table 表 add FULLTEXT(字段)</td></tr><tr><td>示例</td><td>ALTER TABLE money ADD FULLTEXT(content);</td></tr><tr><td>示例解释</td><td>为money表的content字段增加唯一索引</td></tr></tbody></table><h3 id="创建表时声明索引"><a href="#创建表时声明索引" class="headerlink" title="创建表时声明索引"></a>创建表时声明索引</h3><p>创建表时可在创建表语句后加上对应的类型即可声明索引：</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">PRIMARY KEY(字段)</span><br><span class="line">INDEX [索引名] (字段)</span><br><span class="line">FULLTEXT [索引名] (字段)</span><br><span class="line">UNIQUE[索引名] (字段)</span><br></pre></td></tr></table></figure><p>整体示例如下：</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">CREATE TABLE test (</span><br><span class="line">    id INT NOT NULL ,</span><br><span class="line">    username VARCHAR(20) NOT NULL ,</span><br><span class="line">    password INT NOT NULL ,</span><br><span class="line">    content INT NOT NULL ,</span><br><span class="line">    PRIMARY KEY (id),</span><br><span class="line">    INDEX pw (password),</span><br><span class="line">    UNIQUE (username),</span><br><span class="line">    FULLTEXT (content)</span><br><span class="line">) ENGINE = InnoDB;</span><br></pre></td></tr></table></figure><h3 id="英文字符集"><a href="#英文字符集" class="headerlink" title="英文字符集"></a>英文字符集</h3><table><thead><tr><th>字符集</th><th>说明</th><th>字节长度</th></tr></thead><tbody><tr><td>ASCII</td><td>美国标准信息交换代码</td><td>单字节</td></tr><tr><td>GBK</td><td>汉字内码扩展规范</td><td>双字节</td></tr><tr><td>unicode</td><td>万国码</td><td>4字节</td></tr><tr><td>UTF-8</td><td>Unicode的可变长度字符编码</td><td>1到6个字节</td></tr></tbody></table>]]></content>
      
      
      <categories>
          
          <category> 后端 </category>
          
          <category> MySQL </category>
          
      </categories>
      
      
        <tags>
            
            <tag> MySQL </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>魔术方法</title>
      <link href="/Lutianyao/blog/2022/10/22/01.%E5%90%8E%E7%AB%AF/01.PHP/14.%E9%AD%94%E6%9C%AF%E6%96%B9%E6%B3%95/"/>
      <url>/Lutianyao/blog/2022/10/22/01.%E5%90%8E%E7%AB%AF/01.PHP/14.%E9%AD%94%E6%9C%AF%E6%96%B9%E6%B3%95/</url>
      
        <content type="html"><![CDATA[<h1 id="魔术方法"><a href="#魔术方法" class="headerlink" title="魔术方法"></a>魔术方法</h1><p><strong>概述</strong><br>    PHP 将所有以 __（两个下划线）开头的类方法保留为魔术方法。</p><pre><code>所以在定义类方法时，除了上述魔术方法，建议不要以 __ 为前缀。所有的魔术方法 必须 声明为 public。</code></pre><h3 id="构造函数"><a href="#构造函数" class="headerlink" title="构造函数"></a>构造函数</h3><pre><code>通常我们希望在对象实例化时可以初始化某些属性,或执行某些方法当然,可以在对象实例化之后再这么做,不过如果能在实例化的时候自动完成这些操作会更方便oop就有这样一种机制,称为构造函数</code></pre><blockquote><p>声明构造函数格式:</p></blockquote><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">BaseClass</span></span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;In BaseClass constructor\n&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$obj</span> = <span class="keyword">new</span> <span class="title class_">BaseClass</span>();</span><br><span class="line"></span><br><span class="line"><span class="title function_ invoke__">var_dump</span>(<span class="variable">$obj</span>);</span><br></pre></td></tr></table></figure><h3 id="析构函数"><a href="#析构函数" class="headerlink" title="析构函数"></a>析构函数</h3><pre><code>在PHP4中没有析构函数,php5中引入了析构函数析构函数允许在销毁一个类之前执行的一些操作或完成一些功能,这些操作或功能通常在所有对该类的引用都被重置或超出作用域时自动发生。</code></pre><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">BaseClass</span></span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&#x27;class instance destroyed&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$obj</span> = <span class="keyword">new</span> <span class="title class_">BaseClass</span>();</span><br><span class="line"></span><br><span class="line"><span class="title function_ invoke__">var_dump</span>(<span class="variable">$obj</span>);</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 后端 </category>
          
          <category> PHP </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PHP </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>访问修饰符</title>
      <link href="/Lutianyao/blog/2022/10/22/01.%E5%90%8E%E7%AB%AF/01.PHP/13.%E8%AE%BF%E9%97%AE%E4%BF%AE%E9%A5%B0%E7%AC%A6/"/>
      <url>/Lutianyao/blog/2022/10/22/01.%E5%90%8E%E7%AB%AF/01.PHP/13.%E8%AE%BF%E9%97%AE%E4%BF%AE%E9%A5%B0%E7%AC%A6/</url>
      
        <content type="html"><![CDATA[<h1 id="访问修饰符"><a href="#访问修饰符" class="headerlink" title="访问修饰符"></a>访问修饰符</h1><p><strong>概述</strong></p><blockquote><p>访问修饰符允许开发人员对类成员的访问进行限制,这是PHP5的新特性。</p></blockquote><p><code>public</code> (公共修饰符)</p><pre><code>类的成员将没有访问限制,所有的外部成员都可以访问(读和写)这个类成员。在属性或方法前面加上关键字public,或不加任何关键字,都可以声明一个公共属性或方法。</code></pre><p><code>private</code> (私有修饰符)</p><pre><code>被定义为private的成员,对于同一个类的所有成员是可见的,即没有访问限制;但对于该类的外部代码是不允许改变甚至读操作,对于该类的子类也不能访问。</code></pre><p><code>protected</code> (保护修饰符)</p><pre><code>被修饰为protected的成员不能被该类的外部代码访问。但是对于该类的直接子类有访问权限,可以进行属性、方法的读及写操作。被子类继承的protected成员,在子类外部同样不能被访问</code></pre><h3 id="public"><a href="#public" class="headerlink" title="public"></a>public</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">demo</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$name</span> = <span class="string">&#x27;alan scott&#x27;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">test</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="variable language_">$this</span>-&gt;name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$demo</span> = <span class="keyword">new</span> <span class="title function_ invoke__">demo</span>();</span><br><span class="line"></span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$demo</span>-&gt;name;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;&lt;br /&gt;&quot;</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$demo</span>-&gt;<span class="title function_ invoke__">test</span>();</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h3 id="private"><a href="#private" class="headerlink" title="private"></a>private</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">demo</span></span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="variable">$name</span> = <span class="string">&#x27;alan scott&#x27;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">test</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">      <span class="keyword">return</span> <span class="variable language_">$this</span>-&gt;name;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">test</span> <span class="keyword">extends</span> <span class="title">demo</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">test2</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">      <span class="keyword">return</span> <span class="variable language_">$this</span>-&gt;name;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$demo</span> = <span class="keyword">new</span> <span class="title function_ invoke__">demo</span>();</span><br><span class="line"></span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$demo</span>-&gt;<span class="title function_ invoke__">test</span>();</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;&lt;br /&gt;&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="variable">$test</span> = <span class="keyword">new</span> <span class="title function_ invoke__">test</span>();</span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$test</span>-&gt;<span class="title function_ invoke__">test2</span>();<span class="comment">//为空</span></span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h3 id="protected"><a href="#protected" class="headerlink" title="protected"></a>protected</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">demo</span></span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$name</span> = <span class="string">&#x27;alan scott&#x27;</span>;</span><br><span class="line">    <span class="keyword">protected</span> <span class="variable">$age</span> = <span class="string">&#x27;1000&#x27;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">test</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">      <span class="keyword">return</span> <span class="variable language_">$this</span>-&gt;age;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">test</span> <span class="keyword">extends</span> <span class="title">demo</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">test2</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">      <span class="keyword">return</span> <span class="variable language_">$this</span>-&gt;age;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$demo</span> = <span class="keyword">new</span> <span class="title function_ invoke__">demo</span>();</span><br><span class="line"></span><br><span class="line"><span class="comment">// echo $demo-&gt;age;//会报错</span></span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;&lt;br /&gt;&quot;</span>;</span><br><span class="line"><span class="comment">// echo $demo-&gt;test();</span></span><br><span class="line"></span><br><span class="line"><span class="variable">$test</span> = <span class="keyword">new</span> <span class="title function_ invoke__">test</span>();</span><br><span class="line"></span><br><span class="line"><span class="comment">// echo $test-&gt;age;//会报错</span></span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;&lt;br /&gt;&quot;</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$test</span>-&gt;<span class="title function_ invoke__">test2</span>();</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 后端 </category>
          
          <category> PHP </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PHP </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>类与对象</title>
      <link href="/Lutianyao/blog/2022/10/22/01.%E5%90%8E%E7%AB%AF/01.PHP/12.%E7%B1%BB%E4%B8%8E%E5%AF%B9%E8%B1%A1/"/>
      <url>/Lutianyao/blog/2022/10/22/01.%E5%90%8E%E7%AB%AF/01.PHP/12.%E7%B1%BB%E4%B8%8E%E5%AF%B9%E8%B1%A1/</url>
      
        <content type="html"><![CDATA[<h1 id="类与对象"><a href="#类与对象" class="headerlink" title="类与对象"></a>类与对象</h1><h3 id="过程式编程"><a href="#过程式编程" class="headerlink" title="过程式编程"></a>过程式编程</h3><pre><code>初学编程的方法通常由顺序结构开始。这是步骤式的过程性编程,过程式编程方法下的制成品,是一个“大胖子”,为什么呢?假设拆开这个制成品，里面是无数纠缠不清的程序和数据(变量等),数据是给各程序共享的。即任何程序都可以读取或修改它,一个程序接着另一个程序来执行。假设要修改这个制成品,就有一种触发牵动全身的感觉,例如改了这个程序,可能会影响其他的程序。</code></pre><h3 id="面向对象编程"><a href="#面向对象编程" class="headerlink" title="面向对象编程"></a>面向对象编程</h3><pre><code>OOP(Object-Oriented Programming)面向对象编程面向对象程序设计的诞生为开发策略带来的极大的改变,使编程的注意力重新从应用程序的逻辑回到其数据上来。换句话说,OOP将焦点从过程式编程转向最终建模的真实体。这使得应用程序更接近我们周围的现实世界。OOP达到了软件工程的三个目标:重用性、灵活性和扩展性。采用面向对象方法可以使系统各部分各司其职、各尽所能;使其编程的代码更简洁、更易于维护,并且具有更强的可重用性</code></pre><p><strong>OOP三个基本概念</strong></p><blockquote><p>OOP三个基本概念:封装、继承、多态</p></blockquote><p><strong>封装</strong></p><pre><code>封装就是把对象的属性和行为结合成一个独立的相同单位,并尽可能隐蔽对象的内部细节信息隐蔽.即尽可能隐蔽对象的内部细节,对外形成一道屏障只保留有限的对外接口使之与外部发生联系。封装的原则在软件上的反映是:要求使对象以外的部分不能随意存取对象的内部数据(属性)从而有效的避免了外部错误对它的“交叉感染”,使软件错误能够局部化,大大减少查错和排错的难度。类的封装性带来的优点:隐藏类的实现细节,让使用者只能通过事先定义好的方法来访问数据可以方便的加入逻辑控制,进行数据检查,限制对属性的不合理操作。便于修改增强代码的可维护性。</code></pre><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">test</span></span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="variable">$name</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="variable">$age</span>;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">get_age</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">$this</span>-&gt;age;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">set_age</span>(<span class="params"><span class="variable">$age</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="variable">$age</span> &lt; <span class="number">0</span> || <span class="variable">$age</span> &gt; <span class="number">130</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="variable language_">$this</span>-&gt;age = <span class="variable">$age</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$test</span> = <span class="keyword">new</span> <span class="title function_ invoke__">test</span>();</span><br><span class="line"><span class="variable">$test</span>-&gt;<span class="title function_ invoke__">set_age</span>(<span class="number">10</span>);</span><br><span class="line"><span class="variable">$age</span> = <span class="variable">$test</span>-&gt;<span class="title function_ invoke__">get_age</span>();</span><br><span class="line"><span class="title function_ invoke__">var_dump</span>(<span class="variable">$test</span>);</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p><strong>继承</strong></p><pre><code>面向对象开发方法建立在继承概念的基础上,这种策略提高了代码的重用性继承是指建立一个新的派生类,从先前定义的类中继承属性和方法而且可以重新定义或加进新的属性和方法,从而建立类的层次或等级说的简单点就是,继承是子类自动共享父类的数据结构和方法的机制,这是类之间的一种关系在定义和实现一个类的时候,可以在一个已经存在的类的基础之上来进行,把这个已经存在的类所定义的内容作为自己的内容,并加入若干新的内容。 在PHP中,类继承通过 extends 关键字实现;继承其他类的类称为子类(child class 或 subclass)子类所继承的类称为父类( parent class) 或 基类 (base class)</code></pre><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">test</span></span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="variable">$x</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="variable">$y</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"><span class="variable">$x</span>=<span class="string">&#x27;&#x27;</span>,<span class="variable">$y</span>=<span class="string">&#x27;&#x27;</span></span>)</span>&#123;</span><br><span class="line">      <span class="variable language_">$this</span>-&gt;x = <span class="variable">$x</span>;</span><br><span class="line">      <span class="variable language_">$this</span>-&gt;y = <span class="variable">$y</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">add</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">      <span class="keyword">return</span> <span class="variable language_">$this</span>-&gt;x + <span class="variable language_">$this</span>-&gt;y;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">demo</span> <span class="keyword">extends</span> <span class="title">test</span></span>&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$demo</span> = <span class="keyword">new</span> <span class="title function_ invoke__">demo</span>(<span class="string">&#x27;2&#x27;</span>,<span class="string">&#x27;3&#x27;</span>);</span><br><span class="line"><span class="variable">$add</span> = <span class="variable">$demo</span>-&gt;<span class="title function_ invoke__">add</span>();</span><br><span class="line"><span class="title function_ invoke__">var_dump</span>(<span class="variable">$add</span>)</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p><strong>多态</strong></p><pre><code>对象的多态性是指在父类中定义的属性或行为被子类继承之后可以具有不同的数据类型或表现出不同的行为这使得同一个属性或行为在父类及其各个子类中具有不同的语义</code></pre><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">animal</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">can</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;this function weill be re-write in the children&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">cat</span> <span class="keyword">extends</span> <span class="title">animal</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">can</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;I can climb&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">dog</span> <span class="keyword">extends</span> <span class="title">animal</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">can</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;I can swim&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">test</span>(<span class="params"><span class="variable">$obj</span></span>)</span>&#123;</span><br><span class="line">    <span class="variable">$obj</span>-&gt;<span class="title function_ invoke__">can</span>();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="title function_ invoke__">test</span>(<span class="keyword">new</span> <span class="title function_ invoke__">cat</span>());</span><br><span class="line"><span class="title function_ invoke__">test</span>(<span class="keyword">new</span> <span class="title function_ invoke__">dog</span>());</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p><strong>对象链</strong></p><blockquote><p>实例化一个对象后，连续的调用多个方法成员。使用return this表示本对象</p></blockquote><p>语法格式:</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$obj</span>-&gt;<span class="title function_ invoke__">a</span>()-&gt;<span class="title function_ invoke__">b</span>()-&gt;<span class="title function_ invoke__">c</span>();</span><br></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">test</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$name</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"><span class="variable">$name</span> = <span class="string">&#x27;&#x27;</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;name = <span class="variable">$name</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">self</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;我是<span class="subst">&#123;$this-&gt;name&#125;</span>,&quot;</span>;</span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">$this</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">eat</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;正在吃饭，&quot;</span>;</span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">$this</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">sleep</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;已经吃饱，正在睡觉，非诚勿扰。&quot;</span>;</span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">$this</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$test</span> = <span class="keyword">new</span> <span class="title function_ invoke__">test</span>(<span class="string">&#x27;小明&#x27;</span>);</span><br><span class="line"><span class="variable">$test</span>-&gt;<span class="built_in">self</span>()-&gt;<span class="title function_ invoke__">eat</span>()-&gt;<span class="title function_ invoke__">sleep</span>();</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h3 id="类"><a href="#类" class="headerlink" title="类"></a>类</h3><pre><code>日常环境由无数实体组成:植物,人群,交通工具,食物... 每个实体都由一组性质和行为来定义。例如: 男人可以定义有:身高,体重,是否帅,肤色等性质,并且定义有能赚钱,能下厨,能开车等行为。在OOP术语中,实体的性质和行为的具体定义称为类</code></pre><h3 id="对象"><a href="#对象" class="headerlink" title="对象"></a>对象</h3><pre><code>通过类创建出来的实体称为对象。对象是系统中用来描述客观事物的一个实体。它是构成系统的一个基本单位,数据与代码都被捆绑在一个实体中。一个对象由一组属性和对这组属性进行操作的一组行为组成。从更抽象的角度来说,对象是问题域或实现域中某些事物的一个抽象.它反映该事物在系统中需要保存的信息和发挥的作用.它是一组属性和有权对这些属性进行操作的一组行为的封装体。客观世界是由对象和对象之间的联系组成的。</code></pre><h3 id="类和对象的关系"><a href="#类和对象的关系" class="headerlink" title="类和对象的关系"></a>类和对象的关系</h3><pre><code>类与对象的关系就如模具和铸件的关系,类的实例化结果就是对象,对象的抽象就是类。类描述了一组有相同特性(属性)和相同行为(方法)的对象</code></pre><h3 id="PHP的面向对象"><a href="#PHP的面向对象" class="headerlink" title="PHP的面向对象"></a>PHP的面向对象</h3><pre><code>PHP4开始提供了面向对象功能,但存在许多不足。从PHP4到PHP5是一次全新革新,PHP5已经完全支持面向对象,对PHP面向对象功能大幅改进和提高。</code></pre><h3 id="定义类"><a href="#定义类" class="headerlink" title="定义类"></a>定义类</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">Class test &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$name</span> = <span class="string">&quot;test&quot;</span>;<span class="comment">//声明属性，并且赋初值</span></span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$age</span> = <span class="string">&quot;22&quot;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">say</span>(<span class="params"></span>)</span>&#123;<span class="comment">//方法</span></span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&#x27;你好！&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h3 id="创建对象-实例化"><a href="#创建对象-实例化" class="headerlink" title="创建对象(实例化)"></a>创建对象(实例化)</h3><blockquote><p>创建对象使用 new 关键字</p></blockquote><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$test</span> = <span class="keyword">new</span> <span class="title function_ invoke__">test</span>();</span><br></pre></td></tr></table></figure><h3 id="属性"><a href="#属性" class="headerlink" title="属性"></a>属性</h3><pre><code>属性用于描述类某个层面的性质,它与一般的PHP变量非常相似。因为PHP是弱类型的语类,属性甚至不需要声明;但不建议这么做。相反常见的做法是在类开始处声明属性,可以为属性赋初值。</code></pre><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">test</span> </span>&#123;</span><br><span class="line">     <span class="keyword">public</span> <span class="variable">$name</span>;</span><br><span class="line">     <span class="keyword">public</span> <span class="variable">$age</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="方法"><a href="#方法" class="headerlink" title="方法"></a>方法</h3><pre><code>方法与函数非常相似,只不过方法用来定义特定类的行为。与函数一样,方法可以接受输入参数,可以向调用者返回一个值</code></pre><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">say</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="variable">$str</span> = <span class="string">&#x27;hello&#x27;</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="variable">$str</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="访问对象中的成员"><a href="#访问对象中的成员" class="headerlink" title="访问对象中的成员"></a>访问对象中的成员</h3><pre><code>PHP对象中的成员有两种:一种是成员属性,一种是成员方法;怎么去使用对象的成员呢?要想访问对象中的成员就要使用一个特殊的操作符“-&gt;”来完成对象成员的访问</code></pre><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$test</span> = <span class="keyword">new</span> test;<span class="comment">//实例化test类</span></span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$test</span>-&gt;name;<span class="comment">//访问对象属性</span></span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$test</span>-&gt;<span class="title function_ invoke__">say</span>();<span class="comment">//访问对象方法</span></span><br></pre></td></tr></table></figure><h3 id="this"><a href="#this" class="headerlink" title="this"></a>this</h3><pre><code>访问对象中的成员,是通过“对象-&gt;成员”的方式访问的这是在对象的外部去访问对象中成员的形式那么如果我想在对象的内部,让对象里的方法访问本对象的属性因为对象里面的所有的成员都要用对象来调用,包括对象的内部成员之间的调用,所以在PHP里面给我们提供了一个本对象的引用$this;</code></pre><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">test</span> </span>&#123;</span><br><span class="line">  <span class="keyword">public</span> <span class="variable">$name</span>;</span><br><span class="line">  <span class="keyword">public</span> <span class="variable">$age</span>;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">function</span> <span class="title">say</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="variable language_">$this</span>-&gt;name;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="const常量"><a href="#const常量" class="headerlink" title="const常量"></a>const常量</h3><pre><code>可以在类中定义常量,即不会在类中改变的值。对于从该类实例化的任何对象来说,常量值在这些对象的整个生命周期中都保持不变。类常量如下创建:const NAME = ‘value’;假设定义一个与数学有关的类,其包括一些定义数学函数的方法以及常量</code></pre><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">math_function</span> </span>&#123;</span><br><span class="line">  <span class="keyword">const</span> <span class="variable constant_">PI</span> = <span class="number">3.1415926</span>;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">test</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">self</span>::<span class="variable constant_">PI</span>;<span class="comment">//类内部访问</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//访问常量</span></span><br><span class="line"><span class="variable">$self</span> = <span class="keyword">new</span> <span class="title function_ invoke__">math_function</span>();</span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$self</span>-&gt;<span class="title function_ invoke__">test</span>()  <span class="comment">//调用类的方法</span></span><br><span class="line"><span class="keyword">echo</span> math_function::<span class="variable constant_">PI</span>; <span class="comment">//类外部访问</span></span><br></pre></td></tr></table></figure><h3 id="static静态属性与静态方法"><a href="#static静态属性与静态方法" class="headerlink" title="static静态属性与静态方法"></a>static静态属性与静态方法</h3><blockquote><p>使用static 关键字可以用来标识成员属性,也可以用来标识成员方法.</p></blockquote><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">static</span> <span class="variable">$test_static</span> = <span class="string">&#x27;value&#x27;</span>; <span class="comment">//属性</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">static</span> <span class="function"><span class="keyword">function</span> <span class="title">test</span>(<span class="params"></span>)</span>&#123;   <span class="comment">//方法</span></span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><pre><code>声明类属性或方法为静态,就可以不实例化类而直接访问静态方法不需要通过对象即可调用,所以伪变量 $this 在静态方法中不可用。静态属性不可以由对象通过 -&gt; 操作符来访问。    </code></pre><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Test</span></span>&#123;</span><br><span class="line">  <span class="built_in">static</span> <span class="variable">$a</span>=<span class="string">&#x27;static&#x27;</span>;</span><br><span class="line">  <span class="built_in">static</span> <span class="function"><span class="keyword">function</span> <span class="title">m</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">self</span>::<span class="variable">$a</span>; <span class="comment">//类内部访问</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">echo</span> <span class="title class_">Test</span>::<span class="variable">$a</span>; <span class="comment">//外部访问属性         </span></span><br><span class="line"><span class="keyword">echo</span> <span class="title class_">Test</span>::<span class="title function_ invoke__">m</span>(); <span class="comment">//外部访问方法  </span></span><br></pre></td></tr></table></figure><pre><code>静态的成员属于类所有,所以我们在静态方法里,不能使用$this来引用静态成员建议使用self关键字来调用。</code></pre>]]></content>
      
      
      <categories>
          
          <category> 后端 </category>
          
          <category> PHP </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PHP </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>PHP文件操作</title>
      <link href="/Lutianyao/blog/2022/10/22/01.%E5%90%8E%E7%AB%AF/01.PHP/11.%E6%96%87%E4%BB%B6%E6%93%8D%E4%BD%9C/"/>
      <url>/Lutianyao/blog/2022/10/22/01.%E5%90%8E%E7%AB%AF/01.PHP/11.%E6%96%87%E4%BB%B6%E6%93%8D%E4%BD%9C/</url>
      
        <content type="html"><![CDATA[<h1 id="文件操作"><a href="#文件操作" class="headerlink" title="文件操作"></a>文件操作</h1><blockquote><p>PHP 拥有的多种函数可供创建、读取、上传以及编辑文件</p></blockquote><h3 id="读取文件"><a href="#读取文件" class="headerlink" title="读取文件"></a>读取文件</h3><p><strong>file_get_contents</strong></p><table><thead><tr><th>参数</th><th>描述</th></tr></thead><tbody><tr><td>path</td><td>必需。规定要读取的文件</td></tr><tr><td>include_path</td><td>可选</td></tr><tr><td>context</td><td>可选</td></tr><tr><td>start</td><td>可选。规定在文件中开始读取的位置。该参数是 PHP 5.1 中新增的</td></tr><tr><td>max_length</td><td>可选。规定读取的字节数。该参数是 PHP 5.1 中新增的</td></tr></tbody></table><p>例</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_ invoke__">file_get_contents</span>(path,include_path,context,start,max_length) <span class="comment">//函数将文件内容读到字符串中;</span></span><br><span class="line"></span><br><span class="line"><span class="variable">$str</span> = <span class="title function_ invoke__">file_get_contents</span>(<span class="string">&quot;a.txt&quot;</span>);</span><br><span class="line"><span class="title function_ invoke__">var_dump</span>(<span class="variable">$str</span>);</span><br></pre></td></tr></table></figure><h3 id="写入文件"><a href="#写入文件" class="headerlink" title="写入文件"></a>写入文件</h3><p><strong>file_put_contents</strong></p><blockquote><p>函数把一个字符串写入文件中。与依次调用 fopen()，fwrite() 以及 fclose() 功能一样。</p></blockquote><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$str</span> = <span class="string">&quot;hello&quot;</span>;</span><br><span class="line"><span class="title function_ invoke__">file_put_contents</span>(<span class="string">&quot;test.txt&quot;</span>, <span class="variable">$str</span>);  返回写入文件的长度</span><br></pre></td></tr></table></figure><h3 id="复制-重命名-移动-删除文件"><a href="#复制-重命名-移动-删除文件" class="headerlink" title="复制,重命名,移动,删除文件"></a>复制,重命名,移动,删除文件</h3><p><strong>copy</strong></p><table><thead><tr><th>参数</th><th>描述</th></tr></thead><tbody><tr><td>file</td><td>必需。规定要复制的文件。</td></tr><tr><td>to_file</td><td>必需。规定复制文件的目的地。</td></tr></tbody></table><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//copy(file,to_file) 将文件从 source 拷贝到 dest。如果成功则返回 TRUE,失败则返回 FALSE。</span></span><br><span class="line"><span class="title function_ invoke__">copy</span>(<span class="string">&quot;test.txt&quot;</span>, <span class="string">&quot;test.txt.bak&quot;</span>);</span><br></pre></td></tr></table></figure><p><strong>rename</strong></p><table><thead><tr><th>参数</th><th>描述</th></tr></thead><tbody><tr><td>oldname</td><td>必需。规定要重命名的文件或目录。</td></tr><tr><td>newname</td><td>必需。规定文件或目录的新名称。</td></tr><tr><td>context</td><td>必需。可选。规定文件句柄的环境。context 是一套可以修改流的行为的选项。</td></tr></tbody></table><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//rename(oldname,newname,context) 重命名和移动文件</span></span><br><span class="line"></span><br><span class="line"><span class="title function_ invoke__">rename</span>(<span class="string">&quot;b.txt&quot;</span>,<span class="string">&quot;c.txt&quot;</span>);  <span class="comment">//重命名文件(oldname,newnanme)</span></span><br><span class="line"><span class="title function_ invoke__">rename</span>(<span class="string">&quot;c.txt&quot;</span>,<span class="string">&quot;./a/c.txt&quot;</span>);   <span class="comment">//移动文件</span></span><br></pre></td></tr></table></figure><p><strong>unlink</strong></p><table><thead><tr><th>参数</th><th>描述</th></tr></thead><tbody><tr><td>filename</td><td>必需。规定要重命名的文件或目录。</td></tr><tr><td>context</td><td>可选</td></tr></tbody></table><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//unlink(filename,context) 函数删除文件。</span></span><br><span class="line"></span><br><span class="line"><span class="title function_ invoke__">unlink</span>(<span class="string">&quot;a.txt&quot;</span>);      <span class="comment">//删除文件</span></span><br></pre></td></tr></table></figure><p><strong>filesize</strong></p><table><thead><tr><th>参数</th><th>描述</th></tr></thead><tbody><tr><td>filename</td><td>必需。规定要检查的文件。</td></tr></tbody></table><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//filesize(filename) 函数返回指定文件的大小。</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">echo</span> <span class="title function_ invoke__">filesize</span>(<span class="string">&quot;test.txt&quot;</span>);</span><br></pre></td></tr></table></figure><p><strong>file_exists</strong></p><table><thead><tr><th>参数</th><th>描述</th></tr></thead><tbody><tr><td>path</td><td>必需。规定要检查的路径。</td></tr></tbody></table><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//file_exists(path) 检查文件是否存在 存在返回 true 否则返回 false</span></span><br><span class="line"></span><br><span class="line"><span class="title function_ invoke__">var_dump</span>(<span class="title function_ invoke__">file_exists</span>(<span class="string">&quot;a.txt&quot;</span>));</span><br></pre></td></tr></table></figure><h3 id="目录操作"><a href="#目录操作" class="headerlink" title="目录操作"></a>目录操作</h3><p><strong>scandir</strong></p><table><thead><tr><th>参数</th><th>描述</th></tr></thead><tbody><tr><td>directory</td><td>必需。规定要扫描的目录。</td></tr><tr><td>sorting_order</td><td>可选</td></tr><tr><td>context</td><td>可选</td></tr></tbody></table><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_ invoke__">var_dump</span>(<span class="title function_ invoke__">scandir</span>(<span class="string">&quot;.&quot;</span>));         <span class="comment">//返回当前目录下面的文件结构数组</span></span><br></pre></td></tr></table></figure><p><strong>mkdir</strong></p><table><thead><tr><th>参数</th><th>描述</th></tr></thead><tbody><tr><td>path</td><td>必需。规定要创建的目录的名称。</td></tr><tr><td>mode</td><td>可选。规定权限。默认是 0777（允许全局访问）。</td></tr><tr><td>recursive</td><td>可选。规定是否设置递归模式。（PHP 5 中新增的）</td></tr></tbody></table><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//mkdir(path,mode,recursive,context) 函数创建目录。</span></span><br><span class="line"></span><br><span class="line"><span class="title function_ invoke__">mkdir</span>(<span class="string">&quot;testing&quot;</span>);</span><br></pre></td></tr></table></figure><p><strong>rmdir</strong></p><table><thead><tr><th>参数</th><th>描述</th></tr></thead><tbody><tr><td>dir</td><td>必需。规定要删除的目录</td></tr><tr><td>context</td><td>可选</td></tr></tbody></table><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//rmdir(dir,context) 函数删除空的目录。</span></span><br><span class="line"></span><br><span class="line"><span class="variable">$path</span> = <span class="string">&quot;images&quot;</span>;</span><br><span class="line"><span class="keyword">if</span>(!<span class="title function_ invoke__">rmdir</span>(<span class="variable">$path</span>))&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;Could not remove <span class="subst">$path</span>&quot;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>pathinfo</strong></p><table><thead><tr><th>参数</th><th>描述</th></tr></thead><tbody><tr><td>path</td><td>必需。规定要检查的路径</td></tr><tr><td>options</td><td>可选。PATHINFO_DIRNAME，PATHINFO_BASENAME，PATHINFO_EXTENSION</td></tr></tbody></table><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//pathinfo(path,options) 返回一个关联数组 其中包括路径中的三个部分：目录名，文件名，扩展名，</span></span><br><span class="line"></span><br><span class="line"><span class="title function_ invoke__">pathinfo</span>(<span class="variable">$_SERVER</span>[<span class="string">&#x27;SCRIPT_FILENAME&#x27;</span>],PATHINFO_DIRNAME);<span class="comment">//返回路径部分</span></span><br><span class="line"><span class="title function_ invoke__">pathinfo</span>(<span class="variable">$_SERVER</span>[<span class="string">&#x27;SCRIPT_FILENAME&#x27;</span>].PATHINFO_BASENAME);<span class="comment">//返回文件名</span></span><br><span class="line"><span class="title function_ invoke__">pathinfo</span>(<span class="variable">$_SERVER</span>[<span class="string">&#x27;SCRIPT_FILENAME&#x27;</span>],PATHINFO_EXTENSION);<span class="comment">//返回后缀部分</span></span><br></pre></td></tr></table></figure><p><strong>is_dir</strong></p><table><thead><tr><th>参数</th><th>描述</th></tr></thead><tbody><tr><td>path</td><td>必需。规定要检查的文件</td></tr></tbody></table><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//is_dir(file) 判断是否是一个目录</span></span><br><span class="line"></span><br><span class="line"><span class="variable">$file</span> = <span class="string">&quot;images&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="title function_ invoke__">is_dir</span>(<span class="variable">$file</span>))&#123;</span><br><span class="line">    <span class="keyword">echo</span> (<span class="string">&quot;<span class="subst">$file</span> 是一个目录&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="keyword">echo</span> (<span class="string">&quot;<span class="subst">$file</span> 不是一个目录&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>is_file</strong></p><table><thead><tr><th>参数</th><th>描述</th></tr></thead><tbody><tr><td>path</td><td>必需。规定要检查的文件</td></tr></tbody></table><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//is_file(file) 函数检查指定的文件是否是常规的文件。</span></span><br><span class="line"></span><br><span class="line"><span class="variable">$file</span> = <span class="string">&quot;test.txt&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="title function_ invoke__">is_file</span>(<span class="variable">$file</span>))&#123;</span><br><span class="line">    <span class="keyword">echo</span> (<span class="string">&quot;<span class="subst">$file</span> 是一个常规文件&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="keyword">echo</span> (<span class="string">&quot;<span class="subst">$file</span> 不是一个常规文件&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 后端 </category>
          
          <category> PHP </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PHP </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>PHP字符串函数</title>
      <link href="/Lutianyao/blog/2022/10/22/01.%E5%90%8E%E7%AB%AF/01.PHP/10.%E5%AD%97%E7%AC%A6%E4%B8%B2%E5%87%BD%E6%95%B0/"/>
      <url>/Lutianyao/blog/2022/10/22/01.%E5%90%8E%E7%AB%AF/01.PHP/10.%E5%AD%97%E7%AC%A6%E4%B8%B2%E5%87%BD%E6%95%B0/</url>
      
        <content type="html"><![CDATA[<h1 id="字符串函数"><a href="#字符串函数" class="headerlink" title="字符串函数"></a>字符串函数</h1><p><strong>var_dump</strong></p><blockquote><p>var_dump() 函数用于输出变量的相关信息。显示关于一个或多个表达式的结构信息，包括表达式的类型与值。数组将递归展开值，通过缩进显示其结构。</p></blockquote><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$a</span> = <span class="keyword">array</span>(<span class="number">1</span>, <span class="number">2</span>, <span class="keyword">array</span>(<span class="string">&quot;a&quot;</span>, <span class="string">&quot;b&quot;</span>, <span class="string">&quot;c&quot;</span>));</span><br><span class="line"><span class="title function_ invoke__">var_dump</span>(<span class="variable">$a</span>);</span><br></pre></td></tr></table></figure><p><strong>printf()</strong></p><table><thead><tr><th>参数</th><th>描述</th></tr></thead><tbody><tr><td>format</td><td>必需。规定字符串以及如何格式化其中的变量。</td></tr></tbody></table><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">定义和用法</span><br><span class="line">printf() 函数输出格式化的字符串。</span><br><span class="line"></span><br><span class="line">语法</span><br><span class="line">printf(format,arg1,arg2,arg++)</span><br><span class="line"></span><br><span class="line">说明</span><br><span class="line">%% - 返回百分比符号</span><br><span class="line">%b - 二进制数</span><br><span class="line">%c - 依照 ASCII 值的字符</span><br><span class="line">%d - 带符号十进制数</span><br><span class="line">%e - 可续计数法（比如 1.5e+3）</span><br><span class="line">%u - 无符号十进制数</span><br><span class="line">%f - 浮点数(local settings aware)</span><br><span class="line">%F - 浮点数(not local settings aware)</span><br><span class="line">%o - 八进制数</span><br><span class="line">%s - 字符串</span><br><span class="line">%x - 十六进制数（小写字母）</span><br><span class="line">%X - 十六进制数（大写字母）</span><br><span class="line"></span><br><span class="line">例</span><br><span class="line">$str = &quot;123 test&quot;;</span><br><span class="line">printf(&quot;整数：%d&quot;, $str);</span><br><span class="line">printf(&quot;浮点数：%.2f&quot;, $str);</span><br><span class="line">printf(&quot;字符串：%s&quot;, $str);</span><br></pre></td></tr></table></figure><p><strong>ltrim rtrim trim</strong></p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">定义和用法</span><br><span class="line">ltrim() 函数从字符串左侧删除空格或其他预定义字符。</span><br><span class="line">rtrim() 函数从字符串右侧删除空格或其他预定义字符。</span><br><span class="line">trim() 函数从字符串的两端删除空白字符和其他预定义字符。</span><br><span class="line"></span><br><span class="line">语法</span><br><span class="line">ltrim(string,charlist)</span><br><span class="line"></span><br><span class="line">例</span><br><span class="line">$str = &quot;       Hello World!&quot;;</span><br><span class="line">echo ltrim($str);</span><br><span class="line"></span><br><span class="line">$str = &quot;Hello World!    &quot;;、</span><br><span class="line">echo rtrim($str);</span><br><span class="line"></span><br><span class="line">$str = &quot; Hello World! &quot;;</span><br><span class="line">echo trim($str);</span><br></pre></td></tr></table></figure><p><strong>md5</strong></p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">定义和用法</span><br><span class="line">md5() 函数计算字符串的 MD5 散列。</span><br><span class="line"></span><br><span class="line">md5() 函数使用 RSA 数据安全，包括 MD5 报文摘译算法。</span><br><span class="line"></span><br><span class="line">如果成功，则返回所计算的 MD5 散列，如果失败，则返回 false。</span><br><span class="line"></span><br><span class="line">语法</span><br><span class="line">md5(_string_,_raw_)</span><br><span class="line"></span><br><span class="line">例</span><br><span class="line">$str = &quot;Hello&quot;;</span><br><span class="line">echo md5($str);</span><br></pre></td></tr></table></figure><p><strong>sha1</strong></p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">定义和用法</span><br><span class="line">sha1() 函数计算字符串的 SHA-1 散列。</span><br><span class="line"></span><br><span class="line">sha1() 函数使用美国 Secure Hash 算法 1。</span><br><span class="line"></span><br><span class="line">如果成功，则返回所计算的 SHA-1 散列，如果失败，则返回 false。</span><br><span class="line"></span><br><span class="line">语法</span><br><span class="line">sha1(_string_,_raw_)</span><br><span class="line"></span><br><span class="line">例</span><br><span class="line">$str = &#x27;Hello&#x27;;</span><br><span class="line">echo sha1($str);</span><br></pre></td></tr></table></figure><p><strong>str_replace str_ireplace</strong></p><table><thead><tr><th>参数</th><th>描述</th></tr></thead><tbody><tr><td>find</td><td>必需。规定要查找的值。</td></tr><tr><td>replace</td><td>必需。规定替换 find 中的值的值。</td></tr><tr><td>string</td><td>必需。规定被搜索的字符串。</td></tr><tr><td>count</td><td>可选。一个变量，对替换数进行计数。</td></tr></tbody></table><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">定义和用法</span><br><span class="line">str_replace() 函数使用一个字符串替换字符串中的另一些字符。</span><br><span class="line">str_ireplace() 函数使用一个字符串替换字符串中的另一些字符。</span><br><span class="line"></span><br><span class="line">语法</span><br><span class="line">str_replace(find,replace,string,count)</span><br><span class="line"></span><br><span class="line">例子</span><br><span class="line">echo str_replace(&quot;world&quot;,&quot;John&quot;,&quot;Hello world!&quot;);</span><br></pre></td></tr></table></figure><p><strong>strpos stripos</strong></p><table><thead><tr><th>参数</th><th>描述</th></tr></thead><tbody><tr><td>string</td><td>必需。规定被搜索的字符串。</td></tr><tr><td>find</td><td>必需。规定要查找的字符。</td></tr><tr><td>start</td><td>可选。规定开始搜索的位置。</td></tr></tbody></table><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">定义和用法</span><br><span class="line">stripos() 函数返回字符串在另一个字符串中第一次出现的位置。</span><br><span class="line">如果没有找到该字符串，则返回 false。</span><br><span class="line">strpos() 查找字符串在另一字符串中第一次出现的位置（区分大小写）</span><br><span class="line">strripos()查找字符串在另一字符串中最后一次出现的位置（不区分大小写）</span><br><span class="line"></span><br><span class="line">语法</span><br><span class="line">stripos(string,find,start)</span><br><span class="line"></span><br><span class="line">提示和注释</span><br><span class="line">注释：该函数对大小写不敏感。如需进行对大小写敏感的搜索，请使用 strpos() 函数。</span><br><span class="line"></span><br><span class="line">例</span><br><span class="line">echo stripos(&quot;Hello world!&quot;,&quot;WO&quot;);</span><br></pre></td></tr></table></figure><p><strong>str_shuffle</strong></p><table><thead><tr><th>参数</th><th>描述</th></tr></thead><tbody><tr><td>string</td><td>必需。规定要打乱的字符串。</td></tr></tbody></table><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">定义和用法</span><br><span class="line">str_shuffle() 函数随机地打乱字符串中的所有字符。</span><br><span class="line"></span><br><span class="line">语法</span><br><span class="line">str_shuffle(string)</span><br><span class="line"></span><br><span class="line">例</span><br><span class="line">echo str_shuffle(&quot;Hello World&quot;);</span><br></pre></td></tr></table></figure><p><strong>strip_tags</strong></p><table><thead><tr><th>参数</th><th>描述</th></tr></thead><tbody><tr><td>string</td><td>必需。规定要检查的字符串。</td></tr><tr><td>allow</td><td>可选。规定允许的标签。这些标签不会被删除。</td></tr></tbody></table><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">定义和用法</span><br><span class="line">strip_tags() 函数剥去 HTML、XML 以及 PHP 的标签。</span><br><span class="line"></span><br><span class="line">语法</span><br><span class="line">strip_tags(string,allow)</span><br><span class="line"></span><br><span class="line">例</span><br><span class="line">echo strip_tags(&quot;Hello &lt;b&gt;world!&lt;/b&gt;&quot;);</span><br><span class="line"></span><br><span class="line">例</span><br><span class="line">echo strip_tags(&quot;Hello &lt;b&gt;&lt;i&gt;world!&lt;/i&gt;&lt;/b&gt;&quot;,&quot;&lt;b&gt;&quot;);</span><br></pre></td></tr></table></figure><p><strong>strtolower</strong></p><table><thead><tr><th>参数</th><th>描述</th></tr></thead><tbody><tr><td>string</td><td>必需。规定要转换的字符串。</td></tr></tbody></table><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">定义和用法</span><br><span class="line">strtolower() 函数把字符串转换为小写。</span><br><span class="line"></span><br><span class="line">语法</span><br><span class="line">strtolower(string)</span><br><span class="line"></span><br><span class="line">例</span><br><span class="line">echo strtolower(&quot;Hello WORLD!&quot;);</span><br></pre></td></tr></table></figure><p><strong>strtoupper</strong></p><table><thead><tr><th>参数</th><th>描述</th></tr></thead><tbody><tr><td>string</td><td>必需。规定要转换的字符串。</td></tr></tbody></table><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">定义和用法</span><br><span class="line">strtoupper() 函数把字符串转换为大写。</span><br><span class="line"></span><br><span class="line">语法</span><br><span class="line">strtoupper(string)</span><br><span class="line"></span><br><span class="line">例</span><br><span class="line">echo strtoupper(&quot;Hello WORLD!&quot;);</span><br></pre></td></tr></table></figure><p><strong>substr</strong></p><table><thead><tr><th>参数</th><th>描述</th></tr></thead><tbody><tr><td>string</td><td>必需。规定要返回其中一部分的字符串。</td></tr><tr><td>start</td><td>必需。规定在字符串的何处开始。 正数 - 在字符串的指定位置开始 负数 - 在从字符串结尾的指定位置开始 0 - 在字符串中的第一个字符处开始</td></tr><tr><td>length</td><td>可选。规定要返回的字符串长度。默认是直到字符串的结尾。 正数 - 从 start 参数所在的位置返回 负数 - 从字符串末端返回</td></tr></tbody></table><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">定义和用法</span><br><span class="line">substr() 函数返回字符串的一部分。</span><br><span class="line"></span><br><span class="line">语法</span><br><span class="line">substr(_string_,_start_,_length_)</span><br><span class="line"></span><br><span class="line">echo substr(&quot;Hello world&quot;,10).&quot;&lt;br&gt;&quot;;</span><br><span class="line">echo substr(&quot;Hello world&quot;,1).&quot;&lt;br&gt;&quot;;</span><br><span class="line">echo substr(&quot;Hello world&quot;,3).&quot;&lt;br&gt;&quot;;</span><br><span class="line">echo substr(&quot;Hello world&quot;,7).&quot;&lt;br&gt;&quot;;</span><br><span class="line"></span><br><span class="line">echo substr(&quot;Hello world&quot;,-1).&quot;&lt;br&gt;&quot;;</span><br><span class="line">echo substr(&quot;Hello world&quot;,-10).&quot;&lt;br&gt;&quot;;</span><br><span class="line">echo substr(&quot;Hello world&quot;,-8).&quot;&lt;br&gt;&quot;;</span><br><span class="line">echo substr(&quot;Hello world&quot;,-4).&quot;&lt;br&gt;&quot;;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 后端 </category>
          
          <category> PHP </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PHP </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>PHP数组函数</title>
      <link href="/Lutianyao/blog/2022/10/22/01.%E5%90%8E%E7%AB%AF/01.PHP/09.%E6%95%B0%E7%BB%84%E5%87%BD%E6%95%B0/"/>
      <url>/Lutianyao/blog/2022/10/22/01.%E5%90%8E%E7%AB%AF/01.PHP/09.%E6%95%B0%E7%BB%84%E5%87%BD%E6%95%B0/</url>
      
        <content type="html"><![CDATA[<h1 id="数组函数"><a href="#数组函数" class="headerlink" title="数组函数"></a>数组函数</h1><p><strong>概述</strong></p><pre><code>数组可以理解为有序的（键-值)对组成的数据值的集合;如果我们把变量理解为单个值的容器，那么数组就是可以包含多个值的容器; 根据索引值的不同数组分为：索引数组和关联数组;</code></pre><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$week</span> = <span class="keyword">array</span>(<span class="string">&quot;a&quot;</span>=&gt; <span class="string">&quot;星期一&quot;</span>, <span class="string">&quot;b&quot;</span>=&gt;<span class="string">&quot;星期二&quot;</span>, <span class="string">&quot;c&quot;</span>=&gt; <span class="string">&quot;星期三&quot;</span>);<span class="comment">//a是键，星期一是值</span></span><br></pre></td></tr></table></figure><h3 id="创建数组"><a href="#创建数组" class="headerlink" title="创建数组"></a>创建数组</h3><pre><code>与其它语言的数组实现方式不同，php不需要在创建数组时指定其大小;因为php是一种松散类型的语言，所以甚至不需要在使用前先声明;索引可以是整型数字或者是字符串;索引数组：索引为整数,如果没有指定索引值则默认为零，依次递增;关联数组：索引为字符串的数组;</code></pre><p>例：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$arr</span> = <span class="keyword">array</span>();</span><br><span class="line"><span class="variable">$fruits</span> = <span class="keyword">array</span>(<span class="string">&quot;orange&quot;</span>, <span class="string">&quot;apple&quot;</span>, <span class="string">&quot;banana&quot;</span>);</span><br><span class="line"><span class="variable">$languages</span> = <span class="keyword">array</span>(<span class="string">&quot;en&quot;</span>=&gt; <span class="string">&quot;english&quot;</span>, <span class="string">&quot;cn&quot;</span>=&gt; <span class="string">&quot;china&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="variable">$arr</span>[key] = value;  直接对数组变量赋值</span><br></pre></td></tr></table></figure><blockquote><p>如果方括号中没有指定索引，则取当前最大整数索引值，新的键名将是该值 + 1。</p><p>如果当前还没有整数索引，则键名将为0。如果指定的键名已经有值了，该值将被覆盖。</p></blockquote><p>例：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$fruits</span>[] = <span class="string">&quot;orange&quot;</span>;</span><br><span class="line"><span class="variable">$fruits</span>[] = <span class="string">&quot;apple&quot;</span>;</span><br><span class="line"><span class="variable">$languages</span>[<span class="string">&quot;en&quot;</span>] = <span class="string">&quot;english&quot;</span>;</span><br><span class="line"><span class="variable">$languages</span>[<span class="string">&quot;cn&quot;</span>] = <span class="string">&quot;china&quot;</span>;</span><br></pre></td></tr></table></figure><blockquote><p>使用函数创建数组  range() 建立一个包含指定范围单元的数组</p></blockquote><p>例：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$num</span> = <span class="title function_ invoke__">range</span>(<span class="number">1</span>, <span class="number">100</span>);</span><br><span class="line"><span class="title function_ invoke__">var_dump</span>(<span class="variable">$num</span>);</span><br><span class="line"></span><br><span class="line"><span class="variable">$letter</span> = <span class="title function_ invoke__">range</span>(<span class="string">&#x27;a&#x27;</span>,<span class="string">&#x27;I&#x27;</span>);</span><br><span class="line"><span class="title function_ invoke__">var_dump</span>(<span class="variable">$letter</span>);</span><br></pre></td></tr></table></figure><h3 id="删除数组或数组元素"><a href="#删除数组或数组元素" class="headerlink" title="删除数组或数组元素"></a>删除数组或数组元素</h3><pre><code>删除数组或数组元素  (注意：删除数组元素不会重建索引)unset 释放给定的变量</code></pre><p>例：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$fruits</span> = <span class="keyword">array</span>(<span class="string">&#x27;apple&#x27;</span>, <span class="string">&#x27;banana&#x27;</span>, <span class="string">&#x27;orange&#x27;</span>);</span><br><span class="line"><span class="title function_ invoke__">print_r</span>(<span class="variable">$fruits</span>);</span><br><span class="line"><span class="keyword">unset</span>(<span class="variable">$fruits</span>[<span class="number">1</span>]);</span><br><span class="line"><span class="title function_ invoke__">print_r</span>(<span class="variable">$fruits</span>);</span><br></pre></td></tr></table></figure><h3 id="常用的数组函数"><a href="#常用的数组函数" class="headerlink" title="常用的数组函数"></a>常用的数组函数</h3><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">1.print_r() 打印数组</span><br><span class="line">    $today = getdate();</span><br><span class="line">    print_r($today);</span><br><span class="line"></span><br><span class="line">2.count() 取得数组大小</span><br><span class="line">    count($week); </span><br><span class="line"></span><br><span class="line">3.in_array() 检查数组中是否包含某个值</span><br><span class="line">    in_array(&#x27;apple&#x27;, $fruits);</span><br><span class="line">    var_dump(in_array(apple, $fruits));</span><br></pre></td></tr></table></figure><h3 id="数组排序"><a href="#数组排序" class="headerlink" title="数组排序"></a>数组排序</h3><blockquote><p>sort() 、 rsort() 对数组进行升序和降序</p></blockquote><p>例：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$fruits</span> = <span class="keyword">array</span>(<span class="string">&quot;lemon&quot;</span>, <span class="string">&quot;orange&quot;</span>, <span class="string">&quot;banana&quot;</span>, <span class="string">&quot;apple&quot;</span>);</span><br><span class="line"><span class="title function_ invoke__">sort</span>(<span class="variable">$fruits</span>);</span><br><span class="line"><span class="title function_ invoke__">print_r</span>(<span class="variable">$fruits</span>);</span><br></pre></td></tr></table></figure><blockquote><p>ksort()、krsort() 对数组按索引进行升序或降序, 并保持索引关系</p></blockquote><p>例：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$fruits</span> = <span class="keyword">array</span>(<span class="string">&quot;l&quot;</span>=&gt;<span class="string">&quot;lemon&quot;</span>, <span class="string">&quot;o&quot;</span>=&gt;<span class="string">&quot;orange&quot;</span>, <span class="string">&quot;b&quot;</span>=&gt;<span class="string">&quot;banana&quot;</span>, <span class="string">&quot;a&quot;</span>=&gt;<span class="string">&quot;apple&quot;</span>);</span><br><span class="line"><span class="title function_ invoke__">ksort</span>(<span class="variable">$fruits</span>);</span><br><span class="line"><span class="title function_ invoke__">print_r</span>(<span class="variable">$fruits</span>);</span><br></pre></td></tr></table></figure><h3 id="字符串与数组转换"><a href="#字符串与数组转换" class="headerlink" title="字符串与数组转换"></a>字符串与数组转换</h3><blockquote><p>explode  explode() 函数把字符串打散为数组。</p></blockquote><p>例：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$str</span> = <span class="string">&quot;1,2,3,4,5,6&quot;</span>;</span><br><span class="line"><span class="variable">$arr</span> = <span class="title function_ invoke__">explode</span>(<span class="string">&#x27;,&#x27;</span>, <span class="variable">$str</span>);</span><br><span class="line"><span class="title function_ invoke__">print_r</span>(<span class="variable">$arr</span>);</span><br></pre></td></tr></table></figure><blockquote><p>implode  implode() 函数将数组元素连接成字符</p></blockquote><p>例：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$arr</span> = <span class="keyword">array</span>(<span class="string">&#x27;a&#x27;</span>,<span class="string">&#x27;b&#x27;</span>, <span class="string">&#x27;c&#x27;</span>, <span class="string">&#x27;d&#x27;</span>);</span><br><span class="line"><span class="variable">$str</span> = <span class="title function_ invoke__">implode</span>(<span class="string">&#x27;|&#x27;</span>, <span class="variable">$arr</span> );</span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$str</span>;</span><br></pre></td></tr></table></figure><h3 id="array-rand"><a href="#array-rand" class="headerlink" title="array_rand"></a>array_rand</h3><pre><code>array_rand() 函数从数组中随机选出一个或多个元素，并返回。第二个参数用来确定要选出几个元素。如果选出的元素不止一个，则返回包含随机键名的数组，否则返回该元素的键名。注：自 PHP 4.2.0 起，不再需要用 srand() 或 mt_srand() 函数给随机数发生器播种，现已被自动完成。</code></pre><table><thead><tr><th>参数</th><th>描述</th></tr></thead><tbody><tr><td>array</td><td>必需。规定输入的数组参数</td></tr><tr><td>number</td><td>可选。默认是 1。规定返回多少个随机的元素</td></tr></tbody></table><p>例：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$a</span> = <span class="keyword">array</span>(<span class="string">&quot;a&quot;</span> =&gt; <span class="string">&quot;Dog&quot;</span>, <span class="string">&quot;b&quot;</span> =&gt; <span class="string">&quot;Cat&quot;</span>, <span class="string">&quot;c&quot;</span> =&gt; <span class="string">&quot;Horse&quot;</span>);</span><br><span class="line">  <span class="title function_ invoke__">print_r</span>(<span class="title function_ invoke__">array_rand</span>(<span class="variable">$a</span>, <span class="number">2</span>));</span><br><span class="line"></span><br><span class="line">  <span class="variable">$array</span> = <span class="keyword">array</span>(</span><br><span class="line">      <span class="string">&#x27;fruit1&#x27;</span> =&gt; <span class="string">&#x27;apple&#x27;</span>,</span><br><span class="line">      <span class="string">&#x27;fruit2&#x27;</span> =&gt; <span class="string">&#x27;orange&#x27;</span>,</span><br><span class="line">      <span class="string">&#x27;fruit3&#x27;</span> =&gt; <span class="string">&#x27;grape&#x27;</span>,</span><br><span class="line">      <span class="string">&#x27;fruit4&#x27;</span> =&gt; <span class="string">&#x27;apple&#x27;</span>,</span><br><span class="line">      <span class="string">&#x27;fruit5&#x27;</span> =&gt; <span class="string">&#x27;apple&#x27;</span></span><br><span class="line">  );</span><br><span class="line">  <span class="title function_ invoke__">print_r</span>(<span class="title function_ invoke__">array_rand</span>(<span class="variable">$array</span>, <span class="number">1</span>));</span><br></pre></td></tr></table></figure><h3 id="array-sum"><a href="#array-sum" class="headerlink" title="array_sum"></a>array_sum</h3><pre><code>array_sum() 函数返回数组中所有值的总和。如果所有值多是整数，则返回一个整数值。如果其中有一个或多个值是浮点数，则返回浮点数。PHP 4.2.1 之前的版本修改了传入的数组本身，将其中的字符串值转换成数值（大多数情况下都转换成了零，根据具体制而定）。</code></pre><table><thead><tr><th>参数</th><th>描述</th></tr></thead><tbody><tr><td>array</td><td>必需。规定输入的数组参数</td></tr></tbody></table><p>例：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$a</span>=<span class="keyword">array</span>(<span class="number">0</span>=&gt;<span class="string">&quot;5&quot;</span>,<span class="number">1</span>=&gt;<span class="string">&quot;15&quot;</span>,<span class="number">2</span>=&gt;<span class="string">&quot;25&quot;</span>);</span><br><span class="line">  <span class="keyword">echo</span> <span class="title function_ invoke__">array_sum</span>(<span class="variable">$a</span>);</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 后端 </category>
          
          <category> PHP </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PHP </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>PHP日期函数</title>
      <link href="/Lutianyao/blog/2022/10/22/01.%E5%90%8E%E7%AB%AF/01.PHP/08.%E6%97%A5%E6%9C%9F%E5%87%BD%E6%95%B0/"/>
      <url>/Lutianyao/blog/2022/10/22/01.%E5%90%8E%E7%AB%AF/01.PHP/08.%E6%97%A5%E6%9C%9F%E5%87%BD%E6%95%B0/</url>
      
        <content type="html"><![CDATA[<h1 id="日期函数"><a href="#日期函数" class="headerlink" title="日期函数"></a>日期函数</h1><p><strong>date_default_timezone_set</strong></p><blockquote><p>设置在脚本中所有日期&#x2F;时间函数的默认时区</p></blockquote><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_ invoke__">date_default_timezone_set</span>(<span class="string">&quot;PRC&quot;</span>);</span><br></pre></td></tr></table></figure><p><strong>time</strong></p><blockquote><p>time() 函数返回当前时间的 Unix 时间戳，返回自从 Unix 纪元（格林威治时间 1970 年 1 月 1 日 00:00:00）到当前时间的秒数。</p></blockquote><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">echo</span> <span class="title function_ invoke__">time</span>()</span><br></pre></td></tr></table></figure><p><strong>date</strong></p><blockquote><p>date() 函数格式化一个本地时间／日期。</p></blockquote><table><thead><tr><th>参数</th><th>描述</th></tr></thead><tbody><tr><td>format</td><td>必需。规定如何返回结果。</td></tr><tr><td>timestamp</td><td>可选。</td></tr></tbody></table><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">echo</span> <span class="title function_ invoke__">date</span>(<span class="string">&quot;Y-m-d&quot;</span>,<span class="title function_ invoke__">time</span>());</span><br></pre></td></tr></table></figure><p><strong>strtotime</strong></p><blockquote><p>将任何英文文本的日期时间描述解析为 Unix 时间戳。</p></blockquote><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">echo</span> <span class="title function_ invoke__">strtotime</span>(<span class="string">&#x27;2021-08-26&#x27;</span>);</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 后端 </category>
          
          <category> PHP </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PHP </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>PHP数学函数</title>
      <link href="/Lutianyao/blog/2022/10/22/01.%E5%90%8E%E7%AB%AF/01.PHP/07.%E6%95%B0%E5%AD%A6%E5%87%BD%E6%95%B0/"/>
      <url>/Lutianyao/blog/2022/10/22/01.%E5%90%8E%E7%AB%AF/01.PHP/07.%E6%95%B0%E5%AD%A6%E5%87%BD%E6%95%B0/</url>
      
        <content type="html"><![CDATA[<h1 id="数学函数"><a href="#数学函数" class="headerlink" title="数学函数"></a>数学函数</h1><p><strong>概述</strong></p><pre><code>函数能处理 integer 和 float 范围内的值。</code></pre><p><strong>abs</strong></p><table><thead><tr><th>参数</th><th>描述</th></tr></thead><tbody><tr><td>x</td><td>必需。一个数。</td></tr></tbody></table><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">定义和用法</span><br><span class="line">abs() 函数返回一个数的绝对值</span><br><span class="line"></span><br><span class="line">语法</span><br><span class="line">abs(x)</span><br><span class="line"></span><br><span class="line">例</span><br><span class="line">echo(abs(6.7));</span><br><span class="line">echo(abs(-3));</span><br><span class="line">echo(abs(3));</span><br></pre></td></tr></table></figure><p><strong>ceil</strong></p><table><thead><tr><th>参数</th><th>描述</th></tr></thead><tbody><tr><td>x</td><td>必需。一个数。</td></tr></tbody></table><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">定义和用法</span><br><span class="line">ceil() 函数向上舍入为最接近的整数。</span><br><span class="line"></span><br><span class="line">语法</span><br><span class="line">ceil(x)</span><br><span class="line"></span><br><span class="line">说明</span><br><span class="line">返回不小于 x 的下一个整数，x 如果有小数部分则进一位。ceil() 返回的类型仍然是 float，因为 float 值的范围通常比 integer 要大。</span><br><span class="line"></span><br><span class="line">例</span><br><span class="line">echo(ceil(0.60));</span><br><span class="line">echo(ceil(0.40));</span><br><span class="line">echo(ceil(5));</span><br><span class="line">echo(ceil(5.1));</span><br><span class="line">echo(ceil(-5.1));</span><br><span class="line">echo(ceil(-5.9));</span><br></pre></td></tr></table></figure><p><strong>floor</strong></p><table><thead><tr><th>参数</th><th>描述</th></tr></thead><tbody><tr><td>x</td><td>必需。一个数。</td></tr></tbody></table><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">定义和用法</span><br><span class="line">floor() 函数向下舍入为最接近的整数。</span><br><span class="line"></span><br><span class="line">语法</span><br><span class="line">floor(x)</span><br><span class="line"></span><br><span class="line">说明</span><br><span class="line">返回不大于 x 的下一个整数，将 x 的小数部分舍去取整。floor() 返回的类型仍然是 float，因为 float 值的范围通常比 integer 要大。</span><br><span class="line"></span><br><span class="line">例</span><br><span class="line">echo(floor(0.60));</span><br><span class="line">echo(floor(0.40));</span><br><span class="line">echo(floor(5));</span><br><span class="line">echo(floor(5.1));</span><br><span class="line">echo(floor(-5.1));</span><br><span class="line">echo(floor(-5.9));</span><br></pre></td></tr></table></figure><p><strong>mt_rand</strong></p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">定义和用法</span><br><span class="line">mt_rand() 使用 Mersenne Twister 算法返回随机整数。</span><br><span class="line"></span><br><span class="line">语法</span><br><span class="line">mt_rand(min,max)</span><br><span class="line"></span><br><span class="line">例</span><br><span class="line">echo(mt_rand());</span><br><span class="line">echo(mt_rand());</span><br><span class="line">echo(mt_rand(10,100));</span><br></pre></td></tr></table></figure><p><strong>round</strong></p><table><thead><tr><th>参数</th><th>描述</th></tr></thead><tbody><tr><td>x</td><td>可选。规定要舍入的数字</td></tr><tr><td>prec</td><td>可选。规定小数点后的位数</td></tr></tbody></table><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">定义和用法</span><br><span class="line">round() 函数对浮点数进行四舍五入。</span><br><span class="line"></span><br><span class="line">语法</span><br><span class="line">round(x,prec)</span><br><span class="line"></span><br><span class="line">例</span><br><span class="line">echo(round(0.60));</span><br><span class="line">echo(round(0.50));</span><br><span class="line">echo(round(0.49));</span><br><span class="line">echo(round(-4.40));</span><br><span class="line">echo(round(-4.60));</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 后端 </category>
          
          <category> PHP </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PHP </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>PHP函数</title>
      <link href="/Lutianyao/blog/2022/10/22/01.%E5%90%8E%E7%AB%AF/01.PHP/06.%E5%87%BD%E6%95%B0/"/>
      <url>/Lutianyao/blog/2022/10/22/01.%E5%90%8E%E7%AB%AF/01.PHP/06.%E5%87%BD%E6%95%B0/</url>
      
        <content type="html"><![CDATA[<h1 id="函数"><a href="#函数" class="headerlink" title="函数"></a>函数</h1><p><strong>概述</strong></p><pre><code>    函数是用来完成某种特定任务的可重用代码块;    函数可以使程序更具模块化,拥有良好的结构;    函数定义后在程序中可以重复调用;    函数分为内置函数和自定义函数</code></pre><h3 id="内置函数"><a href="#内置函数" class="headerlink" title="内置函数"></a>内置函数</h3><blockquote><p>PHP系统提供了大量功能强大的函数，帮助我们解决各种问题</p></blockquote><h3 id="创建自定义函数"><a href="#创建自定义函数" class="headerlink" title="创建自定义函数"></a>创建自定义函数</h3><pre><code>    函数用function关键字来声明;    函数名称是由字母或下划线开始,中间可以包含数字;    函数名不区分大小写,不过在调用函数的时候，通常使用其在定义时相同的形式;    php不支持函数重载, 所以自定义函数不能和内置函数重名;    不能在一个文件中自定义同名的函数;    参数出现在括号中,如果有多个参数用逗号分隔;</code></pre><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">function_name</span>(<span class="params">parameters</span>) </span>&#123;</span><br><span class="line"></span><br><span class="line">  <span class="comment">//function body</span></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">sayhello</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">  <span class="keyword">echo</span> <span class="string">&#x27;hello&#x27;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="传递参数"><a href="#传递参数" class="headerlink" title="传递参数"></a>传递参数</h3><blockquote><p>值传递(传值)</p></blockquote><pre><code>函数内对参数值的改变不会影响函数外部的值;</code></pre><blockquote><p>引用传递(传址)</p></blockquote><pre><code>有些情况下，可能希望在函数体内对参数的修改在函数体外也能反映;使用引用传递参数要在参数前加上&quot;&amp;&quot;符号;变量本身传入，传入后的变量与原变量建立联系;函数体内变量的变化，会影响到原变量本身;</code></pre><blockquote><p>默认参数值</p></blockquote><pre><code>可以为参数指定默认值，在没有提供其他值的情况下，则将默认值自动赋给该参数;</code></pre><blockquote><p>可选参数</p></blockquote><pre><code>可以指定某个参数为可选参数，这些参数需要放在参数列表的末尾，需且要指定其默认值为空;如果指定了多个可选参数，可以选择性地传递某些参数;</code></pre><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">demo</span>(<span class="params"><span class="variable">$name</span>,<span class="variable">$age</span> = <span class="literal">null</span></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&#x27;姓名：&#x27;</span> . <span class="variable">$name</span> . <span class="string">&#x27; 年龄：&#x27;</span> .<span class="variable">$age</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="title function_ invoke__">demo</span>(<span class="string">&#x27;李四&#x27;</span>);</span><br></pre></td></tr></table></figure><h3 id="从函数返回值"><a href="#从函数返回值" class="headerlink" title="从函数返回值"></a>从函数返回值</h3><pre><code>通常情况下，只依靠函数做某些事情还不够;需要将函数的执行结果返回给调用者，这时可以使用 return 语句返回结果;return 语句变执行后，将使得函数立即结束运行，并且将控制权返回被调用的行;</code></pre><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">mysquare</span>(<span class="params"><span class="variable">$num</span></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="variable">$num</span> == <span class="number">4</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&#x27;1&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="variable">$res</span> = <span class="variable">$num</span> * <span class="variable">$num</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="variable">$res</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">echo</span> <span class="title function_ invoke__">mysquare</span>(<span class="number">4</span>);</span><br></pre></td></tr></table></figure><h3 id="递归函数"><a href="#递归函数" class="headerlink" title="递归函数"></a>递归函数</h3><pre><code>递归函数是一个可以重复调用自身的函数，直到满足某个条件为止;递归函数常用来解决一些重复的问题;递归应该特别注意条件，防止进入死循环中;</code></pre><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">demo</span>(<span class="params"><span class="variable">$val</span></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(<span class="variable">$val</span> == <span class="number">0</span> || <span class="variable">$val</span> == <span class="number">1</span>)&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="variable">$val</span> * <span class="title function_ invoke__">demo</span>(<span class="variable">$val</span> - <span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">echo</span> <span class="title function_ invoke__">demo</span>(<span class="number">3</span>);</span><br></pre></td></tr></table></figure><h3 id="变量作用域和生命周期"><a href="#变量作用域和生命周期" class="headerlink" title="变量作用域和生命周期"></a>变量作用域和生命周期</h3><pre><code>由于引入了函数，程序中变量的能见度发生了变化，即变量的作用范围发生了改变; 变量分为:全局变量，局部变量，静态变量;</code></pre><h3 id="全局变量"><a href="#全局变量" class="headerlink" title="全局变量"></a>全局变量</h3><pre><code>函数体外定义的变量为全局变量，与局部变量相反，全局变量可以在程序的任何地方访问;  如果在函数体中需要使用全局变量，使用 global 关键字访问;    全局变量的作用域：从声明它的那条语句开始到文件末尾;</code></pre><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$test</span> = <span class="string">&#x27;test&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">demo</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">global</span> <span class="variable">$test</span>;</span><br><span class="line">    <span class="keyword">echo</span> <span class="variable">$test</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="title function_ invoke__">demo</span>();</span><br></pre></td></tr></table></figure><h3 id="局部变量"><a href="#局部变量" class="headerlink" title="局部变量"></a>局部变量</h3><blockquote><p>局部变量：只存在于对它做出声明的函数内部,在函数的外部无法相用它,局部变量的作用域仅限于函数内部</p></blockquote><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$test</span> = <span class="string">&#x27;test&#x27;</span>;<span class="comment">// 全局变量</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">demo</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="variable">$test</span> = <span class="string">&#x27;demo&#x27;</span>;<span class="comment">// 局部变量</span></span><br><span class="line">    <span class="keyword">echo</span> <span class="variable">$test</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="title function_ invoke__">demo</span>();</span><br></pre></td></tr></table></figure><h3 id="静态变量"><a href="#静态变量" class="headerlink" title="静态变量"></a>静态变量</h3><pre><code>局部变量在函数退出时会被撤消，与局部变量不同.静态变量在函数退出时不会丢失值，并且再次调用函数时还能保留这个值;在变量名前面加上 static 关键字就可以声明一个静态变量;</code></pre><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">keep_val</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="built_in">static</span> <span class="variable">$count</span> = <span class="number">0</span>;</span><br><span class="line">    <span class="variable">$count</span>++;</span><br><span class="line">    <span class="keyword">echo</span> <span class="variable">$count</span>;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&#x27;&lt;br&gt;&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="title function_ invoke__">keep_val</span>();</span><br><span class="line"><span class="title function_ invoke__">keep_val</span>();</span><br><span class="line"><span class="title function_ invoke__">keep_val</span>();</span><br></pre></td></tr></table></figure><h3 id="函数库"><a href="#函数库" class="headerlink" title="函数库"></a>函数库</h3><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">通常将常用的函数组织到函数库中，可以在以后类似的应用程序中重复使用。</span><br><span class="line">需要调用时使用include()或require()将函数库包含到脚本中;  </span><br><span class="line"></span><br><span class="line">include 与 require</span><br><span class="line"></span><br><span class="line">include()语句将在其被调用的位置处包含一个文件。</span><br><span class="line">  include(&quot;init.php&quot;);</span><br><span class="line"></span><br><span class="line">include_once()的作用与include()相同，不过它会首先验证是否已经包含了该文件.</span><br><span class="line">如果已经包含，则不再执行include_once();</span><br><span class="line"></span><br><span class="line">require()</span><br><span class="line">require_once() </span><br><span class="line"></span><br><span class="line">require() 与 include() 之间的区别</span><br><span class="line">如果require()包含文件出错时，脚本将停止执行。 而使用include()脚本将继续执行。</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 后端 </category>
          
          <category> PHP </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PHP </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>PHP循环</title>
      <link href="/Lutianyao/blog/2022/10/22/01.%E5%90%8E%E7%AB%AF/01.PHP/05.%E5%BE%AA%E7%8E%AF/"/>
      <url>/Lutianyao/blog/2022/10/22/01.%E5%90%8E%E7%AB%AF/01.PHP/05.%E5%BE%AA%E7%8E%AF/</url>
      
        <content type="html"><![CDATA[<h1 id="循环"><a href="#循环" class="headerlink" title="循环"></a>循环</h1><h3 id="do-while"><a href="#do-while" class="headerlink" title="do{}while()"></a>do{}while()</h3><p>do…while 语句会至少执行一次代码，然后检查条件，只要条件成立，就会重复进行循环</p><p>例：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$i</span>=<span class="number">1</span>;</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="variable">$i</span>++;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;The number is &quot;</span> . <span class="variable">$i</span> . <span class="string">&quot;&lt;br&gt;&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">while</span> (<span class="variable">$i</span>&lt;=<span class="number">5</span>);</span><br></pre></td></tr></table></figure><h3 id="while"><a href="#while" class="headerlink" title="while(){}"></a>while(){}</h3><p>while 循环将重复执行代码块，直到指定的条件不成立</p><p>例：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$i</span>=<span class="number">1</span>;</span><br><span class="line"><span class="keyword">while</span>(<span class="variable">$i</span>&lt;=<span class="number">5</span>)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;The number is &quot;</span> . <span class="variable">$i</span> . <span class="string">&quot;&lt;br&gt;&quot;</span>;</span><br><span class="line">    <span class="variable">$i</span>++;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="for"><a href="#for" class="headerlink" title="for(){}"></a>for(){}</h3><p>for 循环用于您预先知道脚本需要运行的次数的情况。</p><p>例:</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> (<span class="variable">$i</span>=<span class="number">1</span>; <span class="variable">$i</span>&lt;=<span class="number">5</span>; <span class="variable">$i</span>++)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;数字为 &quot;</span> . <span class="variable">$i</span> . ‘&lt;br&gt;’;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h3 id="foreach"><a href="#foreach" class="headerlink" title="foreach(){}"></a>foreach(){}</h3><p>foreach 循环用于遍历数组，它根据数组中每个元素来循环代码块。</p><p>例：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$x</span> = <span class="keyword">array</span>(<span class="string">&quot;Google&quot;</span>, <span class="string">&quot;Runoob&quot;</span>, <span class="string">&quot;Taobao&quot;</span>);</span><br><span class="line"><span class="keyword">foreach</span> (<span class="variable">$x</span> <span class="keyword">as</span> <span class="variable">$value</span>) &#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="variable">$value</span>.‘&lt;br&gt;’;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="遍历二维数组"><a href="#遍历二维数组" class="headerlink" title="遍历二维数组"></a>遍历二维数组</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$products</span> = <span class="keyword">array</span>(</span><br><span class="line">        <span class="keyword">array</span>(</span><br><span class="line">            <span class="string">&#x27;pname&#x27;</span> =&gt; <span class="string">&#x27;nokia n73&#x27;</span>,</span><br><span class="line">            <span class="string">&#x27;price&#x27;</span> =&gt;  <span class="number">1500</span>,</span><br><span class="line">        ),</span><br><span class="line">        <span class="keyword">array</span>(</span><br><span class="line">            <span class="string">&#x27;pname&#x27;</span> =&gt; <span class="string">&#x27;nokia 5800&#x27;</span>,</span><br><span class="line">            <span class="string">&#x27;price&#x27;</span> =&gt;  <span class="number">2000</span>,</span><br><span class="line">        ),</span><br><span class="line">    );</span><br><span class="line"></span><br><span class="line">    <span class="keyword">foreach</span> (<span class="variable">$products</span> <span class="keyword">as</span> <span class="variable">$product_k</span> =&gt; <span class="variable">$product_v</span>) &#123;</span><br><span class="line">        <span class="keyword">foreach</span> (<span class="variable">$product_v</span> <span class="keyword">as</span> <span class="variable">$key</span> =&gt; <span class="variable">$val</span>) &#123;</span><br><span class="line">            <span class="keyword">echo</span> <span class="variable">$key</span> . <span class="string">&#x27;=&gt;&#x27;</span> . <span class="variable">$val</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><h3 id="break"><a href="#break" class="headerlink" title="break"></a>break</h3><p>如果包含一个break语句，将立即结束 while、do…while、for、foreach、switch的执行。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span>(<span class="variable">$i</span>=<span class="number">0</span>;<span class="variable">$i</span> &lt; <span class="number">5</span>;<span class="variable">$i</span>++)&#123;</span><br><span class="line">    <span class="keyword">if</span>(<span class="variable">$i</span> == <span class="number">3</span>)&#123;</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">echo</span> <span class="variable">$i</span>.<span class="string">&quot;&lt;br&gt;&quot;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="continue"><a href="#continue" class="headerlink" title="continue"></a>continue</h3><p>continue 语句使当前循环执行结束，并从下一次循环开始执行.</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span>(<span class="variable">$i</span>=<span class="number">0</span>;<span class="variable">$i</span> &lt; <span class="number">5</span>;<span class="variable">$i</span>++)&#123;</span><br><span class="line">    <span class="keyword">if</span>(<span class="variable">$i</span> == <span class="number">3</span>)&#123;</span><br><span class="line">        <span class="keyword">continue</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">echo</span> <span class="variable">$i</span>.<span class="string">&quot;&lt;br&gt;&quot;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 后端 </category>
          
          <category> PHP </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PHP </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>PHP流程控制</title>
      <link href="/Lutianyao/blog/2022/10/21/01.%E5%90%8E%E7%AB%AF/01.PHP/04.%E6%B5%81%E7%A8%8B%E6%8E%A7%E5%88%B6/"/>
      <url>/Lutianyao/blog/2022/10/21/01.%E5%90%8E%E7%AB%AF/01.PHP/04.%E6%B5%81%E7%A8%8B%E6%8E%A7%E5%88%B6/</url>
      
        <content type="html"><![CDATA[<h1 id="流程控制"><a href="#流程控制" class="headerlink" title="流程控制"></a>流程控制</h1><h3 id="if语句"><a href="#if语句" class="headerlink" title="if语句"></a>if语句</h3><p>If语句用括号中的表达式返回值（true 或 false )来控制是否执行指定的代码程序.</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$os</span> = <span class="string">&quot;windows&quot;</span>;</span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$os</span> == <span class="string">&#x27;mac&#x27;</span>)&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&#x27;你的系统OS是mac&#x27;</span>;</span><br><span class="line">&#125;<span class="keyword">else</span> <span class="keyword">if</span>(<span class="variable">$os</span> == <span class="string">&#x27;liunx&#x27;</span>)&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&#x27;你的系统OS是liunx&#x27;</span>;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&#x27;你的系统OS是windows&#x27;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="switch-语句"><a href="#switch-语句" class="headerlink" title="switch 语句"></a>switch 语句</h3><p>switch 语句可以看作是if-else组合的一种变体，如果需要比较有限值的变量，通常会使用switch语句;</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$os</span> = <span class="string">&quot;windows&quot;</span>;</span><br><span class="line"><span class="keyword">switch</span>(<span class="variable">$os</span>)&#123;</span><br><span class="line">  <span class="keyword">case</span> <span class="string">&#x27;mac&#x27;</span>:</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;你的系统OS是mac&quot;</span>;</span><br><span class="line">    <span class="keyword">break</span>;</span><br><span class="line">  <span class="keyword">case</span> <span class="string">&#x27;liunx&#x27;</span>:</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;你的系统OS是liunx&quot;</span>;</span><br><span class="line">    <span class="keyword">break</span>;</span><br><span class="line">  <span class="keyword">default</span>:</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;你的系统OS是windows&quot;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在每个case块的末尾处都有break语句，如果没有break语句，就会执行所有后续的case块直到遇到break语句为止;</p>]]></content>
      
      
      <categories>
          
          <category> 后端 </category>
          
          <category> PHP </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PHP </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>PHP运算符</title>
      <link href="/Lutianyao/blog/2022/10/21/01.%E5%90%8E%E7%AB%AF/01.PHP/03.%E8%BF%90%E7%AE%97%E7%AC%A6/"/>
      <url>/Lutianyao/blog/2022/10/21/01.%E5%90%8E%E7%AB%AF/01.PHP/03.%E8%BF%90%E7%AE%97%E7%AC%A6/</url>
      
        <content type="html"><![CDATA[<h1 id="运算符"><a href="#运算符" class="headerlink" title="运算符"></a>运算符</h1><h3 id="算术运算符"><a href="#算术运算符" class="headerlink" title="算术运算符"></a>算术运算符</h3><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">+ 加法运算      $a + $b</span><br><span class="line"></span><br><span class="line">- 减法运算      $a - $b</span><br><span class="line"></span><br><span class="line">* 乘法运算      $a * $b</span><br><span class="line"></span><br><span class="line">/ 除法运算      $a / $b</span><br><span class="line"></span><br><span class="line">% 取模运算（求余数)   $a % $b</span><br></pre></td></tr></table></figure><h3 id="赋值运算符"><a href="#赋值运算符" class="headerlink" title="赋值运算符"></a>赋值运算符</h3><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">赋值运算符，将一个数据值赋给一个变量;</span><br><span class="line">组合赋值运算符，在赋值之前会完成某个运算;</span><br><span class="line"></span><br><span class="line">$a = 5    赋值</span><br><span class="line">$a += 5   加法赋值    $a = $a + 5</span><br><span class="line">$a -= 5   减法赋值    $a = $a – 5</span><br><span class="line">$a *= 5   乘法赋值    $a = $a * 5</span><br><span class="line">$a /= 5   除法赋值    $a = $a / 5</span><br><span class="line">$a .= 5   拼接赋值    $a = $a.5</span><br></pre></td></tr></table></figure><h3 id="字符串运算符"><a href="#字符串运算符" class="headerlink" title="字符串运算符"></a>字符串运算符</h3><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">字符串运算符用于拼接字符串, 拼接表示将两个或多个对象组合起来;</span><br><span class="line">$a = &quot;hello&quot;;</span><br><span class="line">$b = $a . &quot;world&quot;;</span><br><span class="line">echo $b;</span><br><span class="line"></span><br><span class="line">$b = &quot;Hello&quot;;</span><br><span class="line">$b .= &quot;World!&quot;;</span><br><span class="line">echo $b;</span><br></pre></td></tr></table></figure><h3 id="递增-和递减-–-运算符"><a href="#递增-和递减-–-运算符" class="headerlink" title="递增(++)和递减(–)运算符"></a>递增(++)和递减(–)运算符</h3><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">递增和递减运算符将变量的当前值加1或减1，可以使代码更简洁;</span><br><span class="line"></span><br><span class="line">++$i    先加  $i的值加1，然后再返回$i的值;</span><br><span class="line"></span><br><span class="line">$i++    后加  先返回$i的值，然后再将$i的值加1;</span><br><span class="line"></span><br><span class="line">--$i    先减  $i的值减1，然后再返回$i的值;</span><br><span class="line"></span><br><span class="line">$i--    后减  先返回$i的值，然后再将$i的值减1;</span><br><span class="line"></span><br><span class="line">$i = 5;</span><br><span class="line">$a = $i++;</span><br><span class="line">echo &#x27;i = &#x27;.$i;</span><br><span class="line">echo &#x27;&lt;br&gt;&#x27;;</span><br><span class="line">echo &#x27;a = &#x27;.$a;</span><br></pre></td></tr></table></figure><h3 id="逻辑运算符"><a href="#逻辑运算符" class="headerlink" title="逻辑运算符"></a>逻辑运算符</h3><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">利用逻辑运算符可以根据多个变量的值进行判断，这使得控制程序的流程成为可能.</span><br><span class="line">逻辑操作符常用于控制结构中，如if条件和while及for循环;</span><br><span class="line">&amp;&amp;，  AND   逻辑与  </span><br><span class="line">||，  OR    逻辑或</span><br><span class="line">!,    NOT   逻辑非</span><br></pre></td></tr></table></figure><h3 id="比较运算符"><a href="#比较运算符" class="headerlink" title="比较运算符"></a>比较运算符</h3><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">比较运算符，返回一个布尔值 TRUE 或 FALSE;</span><br><span class="line">&gt;         大于</span><br><span class="line">&lt;         小于</span><br><span class="line">&gt;=        大于或等于</span><br><span class="line">&lt;=        小于或等于</span><br><span class="line">!=        不等于</span><br><span class="line">&lt;&gt;        不等于</span><br><span class="line">==        等于</span><br><span class="line">===       全等于 （两个比较的内容里，类型也要一样）</span><br><span class="line">!==       全不等</span><br></pre></td></tr></table></figure><h3 id="三元运算符"><a href="#三元运算符" class="headerlink" title="三元运算符"></a>三元运算符</h3><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">语法：expression1 ? expression2 : expression3</span><br><span class="line"></span><br><span class="line">$a = 5;</span><br><span class="line">$b = 2;</span><br><span class="line">$res = $a &gt; $b ? &quot;yes&quot;:&quot;no&quot;;</span><br><span class="line">echo $res;</span><br></pre></td></tr></table></figure><h3 id="运算符的优先级"><a href="#运算符的优先级" class="headerlink" title="运算符的优先级"></a>运算符的优先级</h3><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">所谓运算符的优先级指的是哪一个运算符应该先计算。 具体运算符的优先级，参考php手册;</span><br><span class="line">赋值运算，从右到左</span><br><span class="line"></span><br><span class="line">echo 1 + 2 * 3;   //outputs 7</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 后端 </category>
          
          <category> PHP </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PHP </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MySQL快速入门</title>
      <link href="/Lutianyao/blog/2022/10/21/01.%E5%90%8E%E7%AB%AF/02.MySQL/01.%E5%BF%AB%E9%80%9F%E5%85%A5%E9%97%A8/"/>
      <url>/Lutianyao/blog/2022/10/21/01.%E5%90%8E%E7%AB%AF/02.MySQL/01.%E5%BF%AB%E9%80%9F%E5%85%A5%E9%97%A8/</url>
      
        <content type="html"><![CDATA[<h1 id="快速入门"><a href="#快速入门" class="headerlink" title="快速入门"></a>快速入门</h1><h2 id="Mysql"><a href="#Mysql" class="headerlink" title="Mysql"></a>Mysql</h2><pre><code>Mysql 是一种关系型数据库系统; 它的安全性和稳定性已足以满足许多应用程序的要求，而且有着非常高的性价比这不仅是因为MySQL本身是免费的.还因为它对硬件性能要求不那么苛刻这些优点使MySQL成为数据库领域里事实上的标准之一.与其他的开源数据库系统相比，MySQL不仅在性能指标方面高出一截，在使用范围方面也远远领先于其他竞争对手</code></pre><h2 id="Mysql有什么作用？"><a href="#Mysql有什么作用？" class="headerlink" title="Mysql有什么作用？"></a>Mysql有什么作用？</h2><pre><code>MySQL是 开放源码的关系型数据库管理系统。       对数据库进行统一的管理和控制，使用户能方便定义和操纵数据.管理工具mysql.exe phpMyAdmin  MySQLDumper  Navicat  MySQL GUI Tools mysqlworkbench</code></pre><h2 id="什么是关系型数据库"><a href="#什么是关系型数据库" class="headerlink" title="什么是关系型数据库"></a>什么是关系型数据库</h2><pre><code>数据被存放在一些结构化的数据表中，而数据表之间形成内在的交叉关系。存在于数据表之间的这种关系使数据库又被称为关系型数据库</code></pre><h2 id="关系型数据库系统"><a href="#关系型数据库系统" class="headerlink" title="关系型数据库系统"></a>关系型数据库系统</h2><pre><code>MySQL、Oracle、Microsoft SQL Server 和IBM DB2都是关系型数据库系统(database system)。除了管理数据，一个这样的系统还包括用来管理各种关系数据库的程序。一个合格的关系数据库系统不仅要确保各种数据的存储情况安全可靠.还必须能够处理对现有数据进行查询、分析和排序以及对新数据进行保存等诸多命令。</code></pre><h2 id="什么是数据库"><a href="#什么是数据库" class="headerlink" title="什么是数据库"></a>什么是数据库</h2><pre><code>数据库(database)是按照数据结构来组织、存储和管理数据的仓库，也是说数据库是一个由一批数据构成的有序集合，这个集合通常被保存为一个或多个彼此相关的数据表。也可以说数据库是一个以某种有组织的方式存储的数据集合。理解数据库的一种最简单的办法是将其想象为一个文件柜。此文件柜是一个存放数据的物理位置，不管数据是什么以及如何组织的。</code></pre><h2 id="表"><a href="#表" class="headerlink" title="表"></a>表</h2><pre><code>将资料放入自己的文件柜时，并不是随便将它们扔进某个抽屉就完事了，而是在文件柜中创建文件，然后将相关的资料放入特定的文件中。在数据库领域中，这种文件称为表。表是一种结构化的文件，可用来存储某种特定类型的数据。表可以保存顾客清单、产品目录，或者其他信息清单。这里关键的一点在于，数据库中的每个表都有一个名字，用来标识自己。此名字是唯一的。</code></pre><h2 id="列和数据类型"><a href="#列和数据类型" class="headerlink" title="列和数据类型"></a>列和数据类型</h2><pre><code>表由列组成。列中存储着表中某部分的信息。理解列的最好办法是将数据库表想象为一个网格。网格中每一列存储着一条特定的信息。数据库中每个列都有相应的数据类型。数据类型定义列可以存储的数据种类。例如，如果列中存储的为数字（或许是订单中的物品数），则相应的数据类型应该为数值类型。如果列中存储的是日期、文本、注释、金额等，则应该用恰当的数据类型规定出来。</code></pre><h2 id="行"><a href="#行" class="headerlink" title="行"></a>行</h2><pre><code>表中的数据是按行存储的，所保存的每个记录存储在自己的行内。如果将表想象为网格，网格中垂直的列为表列，水平行为表行。例如，顾客表可以每行存储一个顾客。表中的行数为记录的总数。</code></pre><h2 id="主键"><a href="#主键" class="headerlink" title="主键"></a>主键</h2><pre><code>表中每一行都应该有可以唯一标识自己的一列（或一组列）。一个顾客表可以使用顾客ID列，而订单表可以使用订单ID注意    任意两行都不具有相同的主键值；    每个行都必须具有一个主键值（主键列不允许NULL值）    不更新主键列中的值    不重用主键列的值</code></pre><h2 id="外键"><a href="#外键" class="headerlink" title="外键"></a>外键</h2><pre><code>如果公共关键字在一个关系中是主关键字，那么这个公共关键字被称为另一个关系的外键。           由此可见，外键表示了两个关系之间的联系。以另一个关系的外键作主关键字的表被称为主表，          具有此外键的表被称为主表的从表。           外键的作用是引用另一个数据表的某条记录; 使两张表形成关联</code></pre><h2 id="实体属性"><a href="#实体属性" class="headerlink" title="实体属性"></a>实体属性</h2><pre><code>实体：客观存在并可相互区别的事物称为实体。实体可以是具体的人、事、物，也可以是抽象的概念或联系.属性：实体所具有的某一特性称为属性。一个实体可以由若干个属性来描述。</code></pre><h2 id="数据表的关系"><a href="#数据表的关系" class="headerlink" title="数据表的关系"></a>数据表的关系</h2><blockquote><ul><li><p><code>1:1</code><br>第一个数据表里的一条数据记录对应着第二个数据表里的一条数据记录，<br>同时第二个数据表里的每一条数据记录也分别对应着第一个数据表里的一条数据记录  </p></li><li><p><code>1:n</code><br>第一个数据表里的一条数据记录对应着第二个数据表的多条记录 </p></li><li><p><code>n:m</code><br>第一个数据表里的一条记录对应着第二个数据表里的多条记录，<br>同时第二个数据表里的一条记录也可以对应着第一个数据表的多条记录。</p></li></ul></blockquote>]]></content>
      
      
      <categories>
          
          <category> 后端 </category>
          
          <category> MySQL </category>
          
      </categories>
      
      
        <tags>
            
            <tag> MySQL </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>PHP数据类型</title>
      <link href="/Lutianyao/blog/2022/10/21/01.%E5%90%8E%E7%AB%AF/01.PHP/02.%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/"/>
      <url>/Lutianyao/blog/2022/10/21/01.%E5%90%8E%E7%AB%AF/01.PHP/02.%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/</url>
      
        <content type="html"><![CDATA[<h1 id="数据类型"><a href="#数据类型" class="headerlink" title="数据类型"></a>数据类型</h1><p><strong>概述</strong></p><pre><code>    String（字符串）, Integer（整型）, Float（浮点型）, Boolean（布尔型）, Array（数组）, Object（对象）, NULL（空值）resource（资源）这都是PHP的数据类型。    上面几种数据细分为标量类型、复合类型、还有特殊类型。</code></pre><h3 id="标量类型"><a href="#标量类型" class="headerlink" title="标量类型"></a>标量类型</h3><ul><li><p><strong>字符串</strong></p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">字符串有三种定义方式：单引号，双引号，定界符(heredoc);</span><br><span class="line">    单引号字符串中出现的变量不会被变量的值替代;</span><br><span class="line">    双引号字符串中最重要的一点是其中的变量会被变量值替代;</span><br><span class="line"></span><br><span class="line">    如果遇到美元符号($)解析器会尽可能多地取得后面的字符以组成一个合法的变量名.</span><br><span class="line">    如果想明确的指定名字的结束，用花括号把变量名括起来。</span><br><span class="line"></span><br><span class="line">    例：</span><br><span class="line"></span><br><span class="line">        $beer = &quot;Heineken&quot;;</span><br><span class="line">        echo &quot;He drank some &#123;$beer&#125;s&quot;;</span><br><span class="line"></span><br><span class="line">字符串定界的方法使用定界符语法 &quot;&lt;&lt;&lt;&quot;</span><br><span class="line"></span><br><span class="line">    例：</span><br><span class="line">        $str = &lt;&lt;&lt;EOD</span><br><span class="line">        This is test.</span><br><span class="line">        Hello word.</span><br><span class="line">        EOD;</span><br><span class="line">        echo $str;</span><br><span class="line"></span><br><span class="line">  转义字符</span><br><span class="line">    \n    换行</span><br><span class="line"></span><br><span class="line">    \r    回车 ( WINDOW \r\n ) (linux \n) （Mac OS \r）</span><br><span class="line"></span><br><span class="line">    \t    水平制表符 (按键盘 tab 产生的效果)</span><br><span class="line"></span><br><span class="line">    \\    反斜线</span><br><span class="line"></span><br><span class="line">    \$    美元符(表示变量的开始)</span><br><span class="line"></span><br><span class="line">    \&quot;    双引号</span><br></pre></td></tr></table></figure></li><li><p><strong>整型(integer)</strong></p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">整数是一个没有小数的数字。</span><br><span class="line">整数规则:</span><br><span class="line">    整数必须至少有一个数字 (0-9)</span><br><span class="line">    整数不能包含逗号或空格</span><br><span class="line">    整数是没有小数点的</span><br><span class="line">    整数可以是正数或负数</span><br><span class="line">    整型可以用三种格式来指定：十进制， 十六进制（ 以 0x 为前缀）或八进制（前缀为 0）</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">例：</span><br><span class="line">    $a = 1234;</span><br><span class="line">    var_dump($a);</span><br></pre></td></tr></table></figure></li><li><p><strong>浮点型(float, double)</strong></p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">浮点数是带小数部分的数字，或是指数形式。</span><br><span class="line"></span><br><span class="line">例：</span><br><span class="line">    $a = 1.234; </span><br><span class="line">    var_dump($a); //float(1.234)</span><br></pre></td></tr></table></figure></li><li><p><strong>布尔型（bool）</strong></p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">布尔型可以是 TRUE 或 FALSE，布尔型通常用于条件判断。</span><br><span class="line"></span><br><span class="line">以下值被认为是FALSE:</span><br><span class="line">    布尔值  FALSE</span><br><span class="line">    整型值 0</span><br><span class="line">    浮点型值 0.0</span><br><span class="line">    空白字符串和字符串 “0”</span><br><span class="line">    没有成员变量的数组</span><br><span class="line">    没有单元的对象(php4适用)</span><br><span class="line">    特殊类型的NULL</span><br><span class="line"></span><br><span class="line">例：</span><br><span class="line">    $fo1 = false;</span><br><span class="line">    var_dump($fo1);</span><br></pre></td></tr></table></figure></li></ul><h3 id="复合数据类型"><a href="#复合数据类型" class="headerlink" title="复合数据类型"></a>复合数据类型</h3><ul><li><p><strong>数组 (array)</strong></p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">数组可以在一个变量中存储多个值。</span><br><span class="line"></span><br><span class="line">例：</span><br><span class="line">    $data = [&#x27;一&#x27;,&#x27;二&#x27;,&#x27;三&#x27;];</span><br><span class="line">    $data1 = array(&#x27;a&#x27; =&gt; &#x27;周一&#x27;,&#x27;b&#x27; =&gt; &#x27;周二&#x27;,&#x27;c&#x27; =&gt; &#x27;周三&#x27;)</span><br><span class="line">    var_dump($data);</span><br><span class="line">    var_dump($data1);</span><br></pre></td></tr></table></figure></li><li><p><strong>对象 (Object)</strong></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">对象是存储数据和有关如何处理数据的信息的数据类型</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">foo</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">do_foo</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;Doing foo.&quot;</span>; </span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$bar</span> = <span class="keyword">new</span> foo;</span><br><span class="line"><span class="variable">$bar</span>-&gt;<span class="title function_ invoke__">do_foo</span>();</span><br></pre></td></tr></table></figure></li></ul><h3 id="特殊类型"><a href="#特殊类型" class="headerlink" title="特殊类型"></a>特殊类型</h3><ul><li><strong>资源 (resource)</strong><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">存放资源数据( PHP外部数据, 如数据库, 文件 )</span><br><span class="line"></span><br><span class="line">例：</span><br><span class="line">    $fh = fopen(&quot;test.txt&quot;, &quot;rw&quot;);</span><br><span class="line">    var_dump($fh);</span><br></pre></td></tr></table></figure></li><li><strong>空值 (null)</strong><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">null 无，表示没有值，null不表示空格，也不表示0;</span><br><span class="line">    以下情况，则认为是null:</span><br><span class="line"></span><br><span class="line">    没有设置为任何预定义的变量;</span><br><span class="line">    明确的赋值为null;</span><br><span class="line">    使用函数unset()清除;</span><br><span class="line">例：</span><br><span class="line">    $x = &quot;Hello world!&quot;;</span><br><span class="line">    $x = null;</span><br><span class="line">    var_dump($x);</span><br></pre></td></tr></table></figure></li></ul><h3 id="类型自动转换"><a href="#类型自动转换" class="headerlink" title="类型自动转换"></a>类型自动转换</h3><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">因为php对于类型定义非常的松散，所以有时会根据引用变量的环境，将变量自动转换为最适合的类型;</span><br><span class="line"></span><br><span class="line">例：</span><br><span class="line">    $num = 5;</span><br><span class="line">    $str = &quot;15&quot;;</span><br><span class="line">    echo $num + $str;</span><br><span class="line"></span><br><span class="line">    $str = &quot;100 hello&quot;;</span><br><span class="line">    $num = 200;</span><br><span class="line">    echo $num + $str;</span><br><span class="line"></span><br><span class="line">    $str = &#x27;1.2&#x27;;</span><br><span class="line">    if($str)&#123;  //if 判断为 true</span><br><span class="line">         echo &#x27;hello world&#x27;;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><h3 id="类型转换"><a href="#类型转换" class="headerlink" title="类型转换"></a>类型转换</h3><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">第一种转换方式： (int)  (bool)  (float)  (string)  (array) (object)</span><br><span class="line"></span><br><span class="line">例： </span><br><span class="line">    $num = 3.14;</span><br><span class="line">    $res = (int)$num;</span><br><span class="line">    $res = (float)$num;</span><br><span class="line">    $res = (string)$num;</span><br><span class="line">    $res = (bool)$num;</span><br><span class="line">    $res = (array)$num;</span><br><span class="line">    $res = (object)$num;</span><br><span class="line">    var_dump($res);</span><br><span class="line"></span><br><span class="line">第二种转换方式：  intval()  floatval()  strval()</span><br><span class="line"></span><br><span class="line">例：</span><br><span class="line">    $str=&quot;123.9abc&quot;;   </span><br><span class="line">    $int=intval($str);     //转换后数值：123   </span><br><span class="line">    $float=floatval($str); //转换后数值：123.9   </span><br><span class="line">    $str=strval($float);   //转换后字符串：&quot;123.9&quot;    </span><br><span class="line">    var_dump($int);</span><br><span class="line">    var_dump($float);</span><br><span class="line">    var_dump($str);</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 后端 </category>
          
          <category> PHP </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PHP </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>变量</title>
      <link href="/Lutianyao/blog/2022/10/21/01.%E5%90%8E%E7%AB%AF/01.PHP/01.%E5%8F%98%E9%87%8F/"/>
      <url>/Lutianyao/blog/2022/10/21/01.%E5%90%8E%E7%AB%AF/01.PHP/01.%E5%8F%98%E9%87%8F/</url>
      
        <content type="html"><![CDATA[<h1 id="变量"><a href="#变量" class="headerlink" title="变量"></a>变量</h1><p><strong>概述</strong></p><!-- <kbd>F12</kbd>键盘图标 --><pre><code>变量是用于储存值的容器，与代数类似，可以给 PHP 变量赋予某个值（x=5）或者表达式（z=x+y）。变量可以是很短的名称（如 x 和 y）或者更具描述性的名称（如 age、carname、totalvolume）。</code></pre><h3 id="变量命名规则"><a href="#变量命名规则" class="headerlink" title="变量命名规则"></a>变量命名规则</h3><pre><code>变量以美元符 $ 开头，然后是变量名;变量名由字母或下划线开头，由字母，下划线，数字组成;变量名区分大小写;变量名里面不能够有标点符号,空格 除了下划线以外php是弱类型的语言，不需要事先声明变量的数据类型;php可以不用显示的声明变量就直接使用，不过好的编码习惯：所有的变量在使用前应该进行声明;可以使用驼峰命名法、匈牙利命名法、帕斯卡命名法、来给变量进行命名。</code></pre><p>例：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$a</span> = <span class="number">25</span>;</span><br><span class="line"><span class="variable">$age</span> = <span class="number">18</span>;</span><br></pre></td></tr></table></figure><h3 id="变量赋值"><a href="#变量赋值" class="headerlink" title="变量赋值"></a>变量赋值</h3><pre><code>值赋值：就是将赋值表达式的值复制到变量;引用赋值：php4引入了引用赋值功能，创建的变量与另一个变量引用的内容相同。</code></pre><p>例：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$val_1</span> = <span class="string">&#x27;hello word&#x27;</span>;</span><br><span class="line"><span class="variable">$val_2</span> = &amp;<span class="variable">$val_1</span>; <span class="comment">//把$val_1的内存空间地址赋值给$val_2,是同一个值</span></span><br><span class="line"><span class="variable">$val_2</span> = <span class="string">&#x27;hello&#x27;</span>;</span><br><span class="line"><span class="variable">$val_1</span> = <span class="string">&#x27;hello&#x27;</span>;</span><br></pre></td></tr></table></figure><h3 id="PHP的超全局变量"><a href="#PHP的超全局变量" class="headerlink" title="PHP的超全局变量"></a>PHP的超全局变量</h3><p>php提供了很多有用的预定义变量，用于提供大量与环境有关的信息。</p><blockquote><p>（1）$_SERVER 服务器变量 该全局变量包含着服务器和客户端配置及当前请求环境的有关信息</p></blockquote><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$_SERVER</span>[<span class="string">&#x27;SERVER_NAME&#x27;</span>]; <span class="comment">//当前运行脚本所在的服务器的主机名</span></span><br><span class="line"><span class="variable">$_SERVER</span>[<span class="string">&#x27;REMOTE_ADDR&#x27;</span>]; <span class="comment">//客户端IP地址</span></span><br><span class="line"><span class="variable">$_SERVER</span>[<span class="string">&#x27;REQUEST_URI&#x27;</span>]; <span class="comment">//URL的路径部份</span></span><br><span class="line"><span class="variable">$_SERVER</span>[<span class="string">&#x27;HTTP_USER_AGENT&#x27;</span>]; <span class="comment">//操作系统和浏览器的有关信息</span></span><br></pre></td></tr></table></figure><blockquote><p>（2） $_GET 该变量包含使用 GET 方法传递的参数的有关信息;</p></blockquote><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">url: http:<span class="comment">//www.test.com?id=100&amp;page=2</span></span><br><span class="line"><span class="variable">$id</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;id&#x27;</span>];</span><br><span class="line"><span class="variable">$page</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;page&#x27;</span>];</span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$id</span>,<span class="variable">$page</span>;</span><br></pre></td></tr></table></figure><blockquote><p>（3）$_POST 该变量包含使用 POST 方法传递的参数的有关信息;</p></blockquote><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">&quot;index.php&quot;</span> <span class="attr">method</span>=<span class="string">&quot;POST&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">table</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">td</span>&gt;</span>用户名:<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">name</span>=<span class="string">&quot;username&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">td</span>&gt;</span>密码:<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;password&quot;</span> <span class="attr">name</span>=<span class="string">&quot;pwd&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;submit&quot;</span> <span class="attr">value</span>=<span class="string">&quot;提交&quot;</span> /&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$username</span> = <span class="variable">$_POST</span>[<span class="string">&#x27;username&#x27;</span>];</span><br><span class="line"><span class="variable">$passwd</span> = <span class="variable">$_POST</span>[<span class="string">&#x27;pwd&#x27;</span>];</span><br></pre></td></tr></table></figure><blockquote><p>(4) $_REQUEST 该变量记录着通过各种输入方法传递给脚本的变量，如GET POST,但不要用这个超级全局变量，因为它不安全而且速度比较慢;</p><p>(5) $_COOKIE  cookie变量数组</p><p>(6) $_SESSION 会话变量数组</p><p>(7) $_FILES 与上传文件有关的变量数组</p><p>(8) $_ENV 环境变量数组</p><p>(9) $GLOBALS 有全局变量数组</p></blockquote><h3 id="常量的定义"><a href="#常量的定义" class="headerlink" title="常量的定义"></a>常量的定义</h3><pre><code>常量是指在程序执行中无法修改的值。如 test (3.14);在脚本执行期间该值不能改变;常量对大小写敏感，通常常量名总是大写;常量是全局的，可以在脚本的任何地方引用;常量分为内置常量和自定义常量;常量使用define()函数定义;</code></pre><p>例：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_ invoke__">define</span>(<span class="string">&#x27;test&#x27;</span>,<span class="number">3.14</span>);</span><br><span class="line"><span class="keyword">echo</span> test;  </span><br></pre></td></tr></table></figure><h3 id="内置常量"><a href="#内置常量" class="headerlink" title="内置常量"></a>内置常量</h3><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">PHP_OS           PHP所在的操作系统的名字</span><br><span class="line">PHP_VERSION      当前 PHP 的版本</span><br></pre></td></tr></table></figure><h3 id="魔术常量"><a href="#魔术常量" class="headerlink" title="魔术常量"></a>魔术常量</h3><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">__FILE__    文件的完整路径和文件名;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 后端 </category>
          
          <category> PHP </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PHP </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
